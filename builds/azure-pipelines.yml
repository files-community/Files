trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      [xml]$xmlDoc = Get-Content $(Build.SourcesDirectory)\src\Files.Package\Package.appxmanifest
      $xmlDoc.Package.Identity.Name="49306atecsolution.FilesUWP"
      $xmlDoc.Package.Properties.DisplayName="Files"
      $xmlDoc.Package.Applications.Application.VisualElements.DisplayName="Files"
      $xmlDoc.Save('$(Build.SourcesDirectory)\src\Files.Package\Package.appxmanifest')
    failOnStderr: true
    
- task: DownloadSecureFile@1
  name: mapsDevKey
  displayName: 'Download Bing Maps Dev Key'
  inputs:
    secureFile: 'BingMapsKey.txt'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(mapsDevKey.secureFilePath)'
    TargetFolder: '$(Build.SourcesDirectory)\src\Files\Resources'
    overWrite: true

- task: DownloadSecureFile@1
  name: appCenterDevKey
  displayName: 'Download AppCenter Dev Key'
  inputs:
    secureFile: 'AppCenterKey.txt'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(appCenterDevKey.secureFilePath)'
    TargetFolder: '$(Build.SourcesDirectory)\src\Files\Resources'
    overWrite: true

- task: DownloadSecureFile@1
  name: devCertificate
  displayName: 'Download Self signed dev certificate'
  inputs:
    secureFile: 'DevCertificate.pfx'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(devCertificate.secureFilePath)'
    TargetFolder: '$(Build.SourcesDirectory)'
    overWrite: true

- task: UseDotNet@2
  inputs:
    packageType: sdk
    version: 6.x

- task: MSBuild@1
  inputs:
    platform: 'x64'
    solution: '**/*.wapproj'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/t:build;_GenerateAppxPackage /restore /p:Configuration=Release;Platform="$(buildPlatform)";AppxBundle=Always;AppxBundlePlatforms="$(buildPlatform)";AppxPackageDir="$(appxPackageDir)";AppxPackageSigningEnabled=true;UapAppxPackageBuildMode=SideloadOnly;p:PackageCertificateKeyFile=$(Build.SourcesDirectory)\DevCertificate.pfx;PackageCertificatePassword="";PackageCertificateThumbprint=""'
    maximumCpuCount: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Find correct folder and run app install script.
      cd $(appxPackageDir)

      $AppBundle = Get-ChildItem -Filter Files*Test -Name
      echo $AppBundle
      cd $AppBundle
      ./Add-AppDevPackage.ps1 -Force
    errorActionPreference: 'continue'
    failOnStderr: true
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: Windows Application Driver@0
  inputs:
    OperationType: 'Start'
    AgentResolution: '1080p'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\AnyCPU\Files.InteractionTests\net6.0\Files.InteractionTests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
