name: Files Build Pipeline

on:
  pull_request:
    paths-ignore:
    - '**.md'
    - '.builds/**'
    - '.specs/**'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [Store]
        platform: [x64, arm64]
    env:
      SOLUTION_NAME: 'Files.sln'
      PACKAGE_PROJECT_DIR: 'src\Files.App (Package)'
      PACKAGE_PROJECT_PATH: 'src\Files.App (Package)\Files.Package.wapproj'
      TEST_PROJECT_PATH: 'tests\Files.InteractionTests\Files.InteractionTests.csproj'
      CONFIGURATION: ${{ matrix.configuration }}
      PLATFORM: ${{ matrix.platform }}
      APPX_BUNDLE_PLATFORMS: 'x64|arm64'
      WORKING_DIR: ${{ github.workspace }} # Default: D:\a\Files\Files\
      ARTIFACTS_STAGING_DIR:  ${{ github.workspace }}\artifacts
      APPX_PACKAGE_DIR: ${{ github.workspace }}\artifacts\AppxPackages

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.1.1

    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    # TODO: Move the command to PowerShell script instead
    - name: Use the ${{ env.CONFIGURATION }} logo sets
      shell: pwsh
      run: |
        Get-ChildItem $env:WORKING_DIR\src -Include *.csproj, *.appxmanifest, *.wapproj, *.xaml -recurse | ForEach -Process `
        { `
          (Get-Content $_ -Raw | ForEach -Process {$_ -replace "Assets\\AppTiles\\Dev", "Assets\AppTiles\Release"}) | `
          Set-Content $_ -NoNewline `
        }

    # - name: Restore the BingMaps key
    #   uses: timheuer/base64-to-file@v1.2
    #   with:
    #     encodedString: ${{ secrets.BINGMAPS_KEY_BASE64 }}
    #     fileDir: '$env:WORKING_DIR\src\Files.App\Resources'
    #     fileName: 'BingMapsKey.txt'

    # - name: Restore the package CA certification file
    #   uses: timheuer/base64-to-file@v1.2
    #   with:
    #     encodedString: ${{ secrets.PACKAGE_CERTIFICATE_BASE64 }}
    #     fileDir: '$env:WORKING_DIR\$env:PACKAGE_PROJECT_DIR'
    #     fileName: 'StoreCertificate.pfx'

    # - name: Restore the AppCenter token
    #   shell: pwsh
    #   run: |
    #     gci $(Build.SourcesDirectory)\src -Include *.cs -recurse | ForEach -Process `
    #     { `
    #       (Get-Content $_ -Raw | ForEach -Process {$_ -replace "appcenter.secret", "$env:APPCENTER_TOKEN"}) | `
    #       Set-Content $_ -NoNewline `
    #     }
    #   env:
    #     APPCENTER_TOKEN: ${{ secret.APPCENTER_TOKEN }}

    # - name: Restore the GitHub OAuth client ID
    #   run: |
    #     gci $(Build.SourcesDirectory)\src -Include *.cs -recurse | ForEach -Process `
    #     { `
    #       (Get-Content $_ -Raw | ForEach -Process {$_ -replace "githubclientid.secret", "$env:GITHUB_OAUTH_CLIENT_ID)"}) | `
    #       Set-Content $_ -NoNewline `
    #     }
    #   env:
    #     GITHUB_OAUTH_CLIENT_ID: ${{ secret.GITHUB_OAUTH_CLIENT_ID }}
  
    # - name: Draft a store submission
    #   uses: microsoft/store-submission@v1
    #   with:
    #     command: configure
    #     seller-id: ${{ secrets.MSSTORE_SELLER_ID }}
    #     product-id: ${{ secrets.MSSTORE_PRODUCT_ID }}
    #     tenant-id: ${{ secrets.MSSTORE_TENANT_ID }}
    #     client-id: ${{ secrets.MSSTORE_CLIENT_ID }}
    #     client-secret: ${{ secrets.MSSTORE_CLIENT_SECRET }}

    - name: Use Windows SDK Preview
      shell: cmd
      run: |
        for /f %%a in ('dir /b /a:d %localappdata%\Microsoft\VisualStudio\17*') do echo UsePreviews=True>%localappdata%\Microsoft\VisualStudio\%%a\sdk.txt

    - name: Restore NuGet
      shell: pwsh
      run: 'nuget restore $env:SOLUTION_NAME'

    - name: Restore ${{ env.SOLUTION_NAME  }}
      shell: pwsh
      run: |
        msbuild $env:SOLUTION_NAME `
        -t:Restore `
        -p:Platform=$env:PLATFORM `
        -p:Configuration=$env:CONFIGURATION `
        -p:PublishReadyToRun=true

    # - name: Build ${{ env.SOLUTION_NAME  }}
    #   shell: pwsh
    #   run: |
    #     msbuild $env:PACKAGE_PROJECT_PATH `
    #     -t:Build `
    #     -t:_GenerateAppxPackage `
    #     -p:Platform=$env:PLATFORM `
    #     -p:Configuration=$env:CONFIGURATION `
    #     -p:AppxBundlePlatforms=$env:APPX_BUNDLE_PLATFORMS `
    #     -p:AppxPackageDir="$env:APPX_PACKAGE_DIR" `
    #     -p:AppxBundle=Always `
    #     -p:UapAppxPackageBuildMode=StoreUpload

    # - name: Remove empty files from the packages
    #   shell: bash
    #   run: find $ARTIFACTS_STAGING_DIR -empty -delete

    # - name: Upload the packages to GitHub Actions
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: 'Appx Packages (${{ env.CONFIGURATION }}, ${{ env.PLATFORM }})'
    #     path: ${{ env.ARTIFACTS_STAGING_DIR }}

    - name: Build ${{ env.SOLUTION_NAME  }}
      shell: pwsh
      run: |
        msbuild $env:PACKAGE_PROJECT_PATH `
        -t:Build `
        -p:Platform=$env:PLATFORM `
        -p:Configuration=$env:CONFIGURATION `
        -p:AppxBundle=Never

    # - name: Sign files with Azure Code Signing
    #   uses: azure/azure-code-signing-action@v0.2.15
    #   with:
    #     azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
    #     endpoint: https://wus2.codesigning.azure.net/
    #     code-signing-account-name: vscx-codesigning
    #     certificate-profile-name: vscx-certificate-profile
    #     files-folder: ${{ github.workspace }}\App\App\bin\Release\net6.0-windows
    #     files-folder-filter: exe,dll
    #     file-digest: SHA256
    #     timestamp-rfc3161: http://timestamp.acs.microsoft.com
    #     timestamp-digest: SHA256

    - if: env.PLATFORM == 'x64'
      name: Set full HD resolution
      run: 'Set-DisplayResolution -Width 1920 -Height 1080 -Force'

    - if: env.PLATFORM == 'x64'
      name: Run interaction tests
      run: 'dotnet test $env:TEST_PROJECT_PATH -a:$env:PLATFORM -c:$env:CONFIGURATION'

    # - name: Publish the store submission
    #   uses: microsoft/store-submission@v1
    #   with:
    #     command: publish
