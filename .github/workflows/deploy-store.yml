# Copyright (c) 2024 Files Community
# Licensed under the MIT License. See the LICENSE.

name: Files Deploy (Store)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    environment: Deployments
    strategy:
      fail-fast: false
      matrix:
        configuration: [Store]
        platform: [x64]
    env:
      SOLUTION_NAME: 'Files.sln'
      PACKAGE_PROJECT_DIR: 'src\Files.App (Package)'
      PACKAGE_PROJECT_PATH: 'src\Files.App (Package)\Files.Package.wapproj'
      TEST_PROJECT_PATH: 'tests\Files.InteractionTests\Files.InteractionTests.csproj'
      CONFIGURATION: ${{ matrix.configuration }}
      PLATFORM: ${{ matrix.platform }}
      APPX_BUNDLE_PLATFORMS: 'x64|arm64'
      WORKING_DIR: ${{ github.workspace }} # Default: D:\a\Files\Files\
      ARTIFACTS_STAGING_DIR:  ${{ github.workspace }}\artifacts
      APPX_PACKAGE_DIR: ${{ github.workspace }}\artifacts\AppxPackages

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.1.1

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Configure the package manifest & logo sets
      shell: pwsh
      run: |
        . './scripts/Configure-AppxManifest.ps1' `
          -Branch "$env:CONFIGURATION" `
          -PackageProjectDir "$env:PACKAGE_PROJECT_DIR" `
          -Publisher "CN=53EC4384-7F5B-4CF6-8C23-513FFE9D1AB7" `
          -WorkingDir "$env:WORKING_DIR"

    - name: Inject the Bing Maps API token
      shell: pwsh
      run: |
        . './scripts/Replace-SpecialString.ps1' `
          -WorkingDir "$env:WORKING_DIR" -Target "bingmapskey.secret" -New "$env:BING_MAPS_SECRET"
      env:
        BING_MAPS_SECRET: ${{ secrets.BING_MAPS_SECRET }}

    - name: Inject the AppCenter token
      shell: pwsh
      run: |
        . './scripts/Replace-SpecialString.ps1' `
          -WorkingDir "$env:WORKING_DIR" -Target "appcenter.secret" -New "$env:APP_CENTER_SECRET"
      env:
        APP_CENTER_SECRET: ${{ secrets.APP_CENTER_SECRET }}

    - name: Inject the GitHub OAuth client ID
      run: |
        . './scripts/Replace-SpecialString.ps1' `
          -WorkingDir "$env:WORKING_DIR" -Target "githubclientid.secret" -New "$env:GH_OAUTH_CLIENT_ID"
      env:
        GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}

    - name: Use Windows SDK Preview
      shell: cmd
      run: |
        for /f %%a in ('dir /b /a:d %localappdata%\Microsoft\VisualStudio\17*') do echo UsePreviews=True>%localappdata%\Microsoft\VisualStudio\%%a\sdk.txt

    - name: Restore NuGet
      shell: pwsh
      run: 'nuget restore $env:SOLUTION_NAME'

    - name: Restore ${{ env.SOLUTION_NAME  }}
      shell: pwsh
      run: |
        msbuild $env:SOLUTION_NAME `
        -t:Restore `
        -p:Platform=$env:PLATFORM `
        -p:Configuration=$env:CONFIGURATION `
        -p:PublishReadyToRun=true

    - name: Build ${{ env.SOLUTION_NAME }}
      shell: pwsh
      run: |
        msbuild "$env:PACKAGE_PROJECT_PATH" `
        -t:Build `
        -t:_GenerateAppxPackage `
        -p:Platform=$env:PLATFORM `
        -p:Configuration=$env:CONFIGURATION
        -p:AppxBundlePlatforms=$env:APPX_BUNDLE_PLATFORMS `
        -p:AppxPackageDir="$env:APPX_PACKAGE_DIR" `
        -p:AppxBundle=Always `
        -p:AppxBundle=Always `
        -p:UapAppxPackageBuildMode=StoreUpload'

    - name: Remove empty files from the packages
      shell: bash
      run: find $ARTIFACTS_STAGING_DIR -empty -delete

    - name: Update appinstaller schema
      run: |
        $newSchema = "http://schemas.microsoft.com/appx/appinstaller/2018"
        $localFilePath = "${{ env.APPX_PACKAGE_DIR }}/Files.Package.appinstaller"
        $fileContent = Get-Content $localFilePath
        $fileContent = $fileContent.Replace("http://schemas.microsoft.com/appx/appinstaller/2017/2", $newSchema)
        $fileContent | Set-Content $localFilePath
          
    - name: Upload the packages to GitHub Actions
      uses: actions/upload-artifact@v3
      with:
        name: 'Appx Packages (${{ env.CONFIGURATION }}, ${{ env.PLATFORM }})'
        path: ${{ env.ARTIFACTS_STAGING_DIR }}

    - name: Configure Store Credentials
      uses: microsoft/store-submission@v1
      with:
        command: configure
        type: win32
        seller-id: ${{ secrets.SELLER_ID }}
        product-id: ${{ secrets.PRODUCT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}

    - name: Update draft submission
      uses: microsoft/store-submission@v1
      with:
        command: update
        product-update: '{
            "packages":[
                {
                  "packageUrl":"${{ steps.releaseVars.outputs.powerToysInstallerX64Url }}",
                  "languages":["zh-hans", "zh-hant", "en", "cs", "nl", "fr", "pt", "pt-br", "de", "hu", "it", "ja", "ko", "pl", "ru", "es", "tr"],
                  "architectures":["X64"],
                  "installerParameters":"/quiet /norestart",
                  "isSilentInstall":true
                },
                {
                  "packageUrl":"${{ steps.releaseVars.outputs.powerToysInstallerArm64Url }}",
                  "languages":["zh-hans", "zh-hant", "en", "cs", "nl", "fr", "pt", "pt-br", "de", "hu", "it", "ja", "ko", "pl", "ru", "es", "tr"],
                  "architectures":["Arm64"],
                  "installerParameters":"/quiet /norestart",
                  "isSilentInstall":true
                }
            ]
          }'

    - name: Publish the submission
      uses: microsoft/store-submission@v1
      with:
        command: publish
