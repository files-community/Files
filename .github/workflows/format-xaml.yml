name: Format XAML
on:
  issue_comment:
    types: [created]

jobs:
  check-formatting:
    if: github.event.issue.pull_request && github.event.comment.body == '/format'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Generate GitHub Apps token
        id: generate
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.FILES_APP_ID }}
          private_key: ${{ secrets.FILES_PRIVATE_KEY }}

      - name: Login to gh cli and git
        run: |
          "GH_TOKEN=${{ steps.generate.outputs.token }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          $data = gh api graphql -f query='query {
            viewer {
              login
              databaseId
            }
          }'  --jq '.data.viewer' | ConvertFrom-Json
          git config --global user.name "$($data.login)[bot]"
          git config --global user.email "$($data.databaseId)+($data.login)[bot]@users.noreply.github.com"

      - name: Check if PR can be committed to
        run: |
          if (!(gh pr view 1 --json maintainerCanModify -q '.maintainerCanModify' | ConvertFrom-Json))
          { 
            gh pr comment ${{ github.event.issue.number }} -b "This PR cannot be committed to. Ensure that Allow edits from maintainers is enabled."
            exit 0
          }

      - uses: actions/checkout@v4

      - name: Checkout PR
        run: gh pr checkout ${{ github.event.issue.number }} -b pr

      - name: Check if PR has modified XAML files
        run: |
          $baseRef = gh pr view ${{ github.event.issue.number }} --json baseRefName --jq '.baseRefName'
          $changedFiles = (git diff --name-only pr..$baseRef) -split "\n" | Where-Object {$_ -like "*.xaml"}
          if ($changedFiles.Count -eq 0)
          {
            gh pr comment ${{ github.event.issue.number }} -b "No XAML files found to format."
            exit 0
          }
  
      - name: Install Xaml Styler
        run: dotnet tool install --global XamlStyler.Console
  
      - name: Format XAML files
        run: xstyler -l None -r -d src/Files.App

      - name: Commit formatted files
        run: |
          git add .
          git commit -m "Formatted XAML files"

      - name: Push to PR
        run: |
          # this is all to get the right repo and branch to push to 

          $repo = '${{ github.repository }}' -split '/'
          $owner = $repo[0]
          $name = $repo[1]
          $number = ${{ github.event.issue.number }}

          $data = gh api graphql -f query='query($owner:String!, $name:String!, $number:Int!) {
            repository(owner:$owner, name:$name) {
              pullRequest(number:$number) {
                headRef {
                  name
                }
                headRepository {
                  url
                }
              }
            }
          }' -F owner=$owner -F name=$name -F number=$number --jq '{Branch: .data.repository.pullRequest.headRef.name, Url: .data.repository.pullRequest.headRepository.url}' | ConvertFrom-Json
          
          git push $data.Url pr:$($data.Branch)

          if ($LASTEXITCODE -eq 0)
          {
            gh pr comment ${{ github.event.issue.number }} -b "Successfully formatted XAML files."
          }
        continue-on-error: true

      - name: Comment if failed
        if: failure()
        run: gh pr comment ${{ github.event.issue.number }} -b "Failed to format XAML files, check logs for more information."
