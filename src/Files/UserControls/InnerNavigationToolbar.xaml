<UserControl
    x:Class="Files.UserControls.InnerNavigationToolbar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)"
    xmlns:converters="using:Files.Converters"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Files.Helpers"
    xmlns:local="using:Files.UserControls"
    xmlns:local1="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xh="using:Files.Helpers.XamlHelpers"
    d:DesignHeight="40"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="AccentColorFontIconStyle" TargetType="FontIcon" />
            <converters:LayoutModeToBoolConverter x:Key="LayoutModeConverter" />
            <converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters1:BoolToVisibilityConverter
                x:Key="NegatedBoolToVisibilityConverter"
                FalseValue="Visible"
                TrueValue="Collapsed" />
            <converters:IntToGroupOption x:Key="IntToGroupOption" />
            <converters:IntToSortOption x:Key="IntToSortOption" />
            <converters:IntToSortDirection x:Key="IntToSortDirection" />
            <x:Boolean x:Key="True">True</x:Boolean>
            <x:Boolean x:Key="False">False</x:Boolean>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ResourceDictionaries/PathIcons.xaml" />
                <ResourceDictionary Source="/ResourceDictionaries/RightAlignedToggleSwitchStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid BorderBrush="{ThemeResource ControlStrokeColorDefault}" BorderThickness="0,0,0,1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <CommandBar
            x:Name="ContextCommandBar"
            Grid.Column="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            DefaultLabelPosition="Right">
            <CommandBar.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
                    <SolidColorBrush x:Key="CommandBarBorderBrushOpen" Color="Transparent" />
                </ResourceDictionary>
            </CommandBar.Resources>
            <CommandBar.PrimaryCommands>
                <AppBarButton
                    x:Name="NewEmptySpaceAppBarButton"
                    x:Uid="BaseLayoutContextFlyoutNew"
                    AccessKey="W"
                    IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsCreateButtonEnabledInPage, Mode=OneWay, FallbackValue=False}"
                    KeyboardAcceleratorTextOverride="Ctrl+Shift+N"
                    Label="New">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="N"
                            IsEnabled="False"
                            Modifiers="Control,Shift" />
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Flyout>
                        <MenuFlyout x:Name="NewEmptySpace" Opening="NewEmptySpace_Opening">
                            <MenuFlyoutItem
                                x:Name="ToolbarNewFolderItem"
                                Command="{x:Bind ViewModel.CreateNewFolderCommand, Mode=OneWay}"
                                Text="{helpers:ResourceString Name=Folder}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8B7;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="NewFile"
                                x:Uid="BaseLayoutContextFlyoutNewFile"
                                Command="{x:Bind ViewModel.CreateNewFileCommand, Mode=OneWay}"
                                CommandParameter="{x:Null}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.CanCreateFileInPage, Mode=OneWay}"
                                Text="File">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE7C3;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutSeparator x:Name="NewMenuFileFolderSeparator" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>

                    <local:ColoredIcon
                        Margin="0,1,0,-1"
                        BaseLayerGlyph="&#xF037;"
                        OverlayLayerGlyph="&#xF038;" />
                </AppBarButton>
                <AppBarSeparator />
                <AppBarButton
                    x:Name="CutButton"
                    Width="Auto"
                    MinWidth="40"
                    AccessKey="X"
                    Command="{x:Bind ViewModel.CutCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanCopy, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay, FallbackValue=False}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutCut/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutCut/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF03D;" OverlayLayerGlyph="&#xF03E;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    Width="Auto"
                    MinWidth="40"
                    AccessKey="C"
                    Command="{x:Bind ViewModel.CopyCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.CanCopy, Mode=OneWay, FallbackValue=False}"
                    Label="{helpers:ResourceString Name=Copy}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=Copy}">
                    <local:ColoredIcon BaseLayerGlyph="&#xF021;" OverlayLayerGlyph="&#xF022;" />
                </AppBarButton>
                <AppBarButton
                    x:Name="PasteButton"
                    x:Uid="NavigationToolbarPaste"
                    Width="Auto"
                    MinWidth="40"
                    AccessKey="P"
                    Command="{x:Bind ViewModel.PasteItemsFromClipboardCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.InstanceViewModel.CanPasteInPage, local1:App.MainViewModel.IsPasteEnabled), Mode=OneWay, FallbackValue=False}"
                    Label="Paste"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutContextFlyoutPaste/Text')}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="V"
                            IsEnabled="False"
                            Modifiers="Control" />
                    </AppBarButton.KeyboardAccelerators>
                    <local:ColoredIcon BaseLayerGlyph="&#xF023;" OverlayLayerGlyph="&#xF024;" />
                </AppBarButton>
                <AppBarButton
                    x:Name="RenameButton"
                    x:Uid="NavigationToolbarRename"
                    Width="Auto"
                    MinWidth="40"
                    AccessKey="M"
                    Command="{x:Bind ViewModel.Rename, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanRename, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay, FallbackValue=False}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutRename/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutRename/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF027;" OverlayLayerGlyph="&#xF028;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="ShareButton"
                    x:Uid="NavigationToolbarShare"
                    Width="Auto"
                    MinWidth="40"
                    AccessKey="H"
                    Command="{x:Bind ViewModel.Share, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanShare, ViewModel.InstanceViewModel.CanShareInPage), Mode=OneWay, FallbackValue=False}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutShare/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutShare/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF025;" OverlayLayerGlyph="&#xF026;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="DeleteButton"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.DeleteCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanCopy, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay, FallbackValue=False}"
                    Label="{helpers:ResourceString Name=Delete}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=Delete}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF035;" OverlayLayerGlyph="&#xF036;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="PropertiesButton"
                    Width="Auto"
                    MinWidth="40"
                    AccessKey="O"
                    AutomationProperties.Name="{helpers:ResourceString Name=PropertiesTitle}"
                    Command="{x:Bind ViewModel.PropertiesCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanViewProperties, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay, FallbackValue=False}"
                    Label="{helpers:ResourceString Name=PropertiesTitle}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=PropertiesTitle}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF031;" OverlayLayerGlyph="&#xF032;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarSeparator x:Name="AdditionalActionSeparator" x:Load="{x:Bind ViewModel.HasAdditionalAction, Mode=OneWay}" />
                <AppBarButton
                    x:Name="EmptyRecycleBinButton"
                    x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay, FallbackValue=False}"
                    AccessKey="B"
                    Command="{x:Bind ViewModel.EmptyRecycleBinCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.CanEmptyRecycleBin, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=EmptyRecycleBin}"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=EmptyRecycleBin}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="{StaticResource RecycleBinIcons}" Glyph="&#xEF88;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="ExtractButton"
                    Width="Auto"
                    MinWidth="40"
                    x:Load="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
                    AccessKey="Z"
                    IsEnabled="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
                    Label="{helpers:ResourceString Name=Extract}"
                    LabelPosition="Default">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF03F;" OverlayLayerGlyph="&#xF040;" />
                    </AppBarButton.Content>
                    <AppBarButton.Flyout>
                        <MenuFlyout helpers:MenuFlyoutHelper.IsVisible="{x:Bind ViewModel.CanExtract, Mode=OneWay}" Placement="Bottom">
                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.ExtractCommand, Mode=OneWay}"
                                IsEnabled="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
                                KeyboardAcceleratorTextOverride="{helpers:ResourceString Name=ExtractKeyboardAcceleratorTextOverride}"
                                Text="{helpers:ResourceString Name=ExtractFiles}">
                                <MenuFlyoutItem.KeyboardAccelerators>
                                    <KeyboardAccelerator
                                        Key="E"
                                        IsEnabled="False"
                                        Modifiers="Control" />
                                </MenuFlyoutItem.KeyboardAccelerators>
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF11A;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.ExtractHereCommand, Mode=OneWay}"
                                IsEnabled="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
                                Text="{helpers:ResourceString Name=ExtractHere}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF11A;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.ExtractToCommand, Mode=OneWay}"
                                IsEnabled="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
                                Text="{x:Bind ViewModel.ExtractToText, Mode=OneWay}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF11A;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton
                    x:Name="RunWithPowerShellButton"
                    Width="Auto"
                    MinWidth="40"
                    x:Load="{x:Bind ViewModel.IsPowerShellScript, Mode=OneWay, FallbackValue=False}"
                    AutomationProperties.Name="RunWithPowerShell"
                    Command="{x:Bind ViewModel.RunWithPowerShellCommand, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=RunScript}"
                    LabelPosition="Default"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=RunWithPowerShell}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE756;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="SetAsBackgroundButton"
                    Width="Auto"
                    MinWidth="40"
                    x:Load="{x:Bind ViewModel.IsImage, Mode=OneWay, FallbackValue=False}"
                    Command="{x:Bind ViewModel.SetAsBackgroundCommand, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=SetAsBackground}"
                    LabelPosition="Default"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=SetAsBackground}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE91B;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="InstallInfButton"
                    x:Load="{x:Bind ViewModel.IsInfFile, Mode=OneWay, FallbackValue=False}"
                    AutomationProperties.Name="InstallInf"
                    Command="{x:Bind ViewModel.InstallInfCommand, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=Install}"
                    LabelPosition="Default"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=Install}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE9F5;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="RotateImageLeftButton"
                    x:Load="{x:Bind ViewModel.IsImage, Mode=OneWay, FallbackValue=False}"
                    Command="{x:Bind ViewModel.RotateImageLeftCommand, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=RotateLeft}"
                    LabelPosition="Default"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=RotateLeft}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF043;" OverlayLayerGlyph="&#xF044;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="RotateImageRightButton"
                    x:Load="{x:Bind ViewModel.IsImage, Mode=OneWay, FallbackValue=False}"
                    Command="{x:Bind ViewModel.RotateImageRightCommand, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=RotateRight}"
                    LabelPosition="Default"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=RotateRight}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF045;" OverlayLayerGlyph="&#xF046;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="InstallFontButton"
                    x:Load="{x:Bind ViewModel.IsFont, Mode=OneWay, FallbackValue=False}"
                    Command="{x:Bind ViewModel.InstallFontCommand, Mode=OneWay}"
                    Label="{helpers:ResourceString Name=Install}"
                    LabelPosition="Default"
                    ToolTipService.ToolTip="{helpers:ResourceString Name=Install}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#xF041;" OverlayLayerGlyph="&#xF042;" />
                    </AppBarButton.Content>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
        <CommandBar
            x:Name="BaseCommandBar"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            DefaultLabelPosition="Right">
            <CommandBar.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
                    <SolidColorBrush x:Key="CommandBarBorderBrushOpen" Color="Transparent" />
                </ResourceDictionary>
            </CommandBar.Resources>
            <AppBarButton
                x:Name="WidgetsManager"
                x:Uid="NavToolbarWidgets"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                AccessKey="W"
                AutomationProperties.Name="Manage widgets"
                Label="Widgets"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Manage Widgets">
                <AppBarButton.Icon>
                    <FontIcon FontSize="10" Glyph="&#xF246;" />
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout contract8Present:ShouldConstrainToRootBounds="False" Placement="Bottom">
                        <StackPanel Spacing="12">
                            <TextBlock
                                x:Uid="NavToolbarManageWidgetsFlyoutHeader"
                                FontWeight="Medium"
                                Text="Manage Widgets" />
                            <StackPanel Spacing="4">
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowFolderWidget"
                                    Header="Show Folders widget"
                                    IsOn="{x:Bind ViewModel.ShowFoldersWidget, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowDrivesWidget"
                                    Header="Show Drives widget"
                                    IsOn="{x:Bind ViewModel.ShowDrivesWidget, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowBundlesWidget"
                                    Header="Show Bundles widget"
                                    IsOn="{x:Bind ViewModel.ShowBundlesWidget, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowRecentFilesWidget"
                                    Header="Show Recent Files widget"
                                    IsOn="{x:Bind ViewModel.ShowRecentFilesWidget, Mode=TwoWay}" />
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Name="SelectionOptions"
                x:Uid="NavToolbarSelectionOptions"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                AccessKey="S"
                AutomationProperties.Name="Selection options"
                Label="Select"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Selection options">
                <AppBarButton.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <ToggleMenuFlyoutItem
                            x:Name="MultiselectMFI"
                            x:Uid="NavToolbarMultiselect"
                            IsChecked="{x:Bind MainViewModel.MultiselectEnabled, Mode=TwoWay}"
                            Text="Multiselect">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE762;" />
                            </MenuFlyoutItem.Icon>
                        </ToggleMenuFlyoutItem>
                        <MenuFlyoutItem
                            x:Name="SelectAllMFI"
                            x:Uid="NavToolbarSelectAll"
                            Command="{x:Bind ViewModel.SelectAllContentPageItemsCommand, Mode=OneWay}"
                            Text="Select All">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE8B3;" />
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator
                                    Key="A"
                                    IsEnabled="False"
                                    Modifiers="Control" />
                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem
                            x:Name="InvertSelectionMFI"
                            x:Uid="NavToolbarInvertSelection"
                            Command="{x:Bind ViewModel.InvertContentPageSelctionCommand, Mode=OneWay}"
                            Text="Invert Selection">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE746;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem
                            x:Name="ClearSelectionMFI"
                            x:Uid="NavToolbarClearSelection"
                            Command="{x:Bind ViewModel.ClearContentPageSelectionCommand, Mode=OneWay}"
                            Text="Clear Selection">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE8E6;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </AppBarButton.Flyout>

                <local:ColoredIcon BaseLayerGlyph="&#xF02B;" OverlayLayerGlyph="&#xF02C;" />
            </AppBarButton>
            <AppBarButton
                x:Name="ArrangementOptions"
                x:Uid="NavToolbarSortOptionsButton"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                AccessKey="A"
                AutomationProperties.Name="Sort"
                Label="Sort"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Sort">
                <AppBarButton.Content>
                    <local:ColoredIcon BaseLayerGlyph="&#xF029;" OverlayLayerGlyph="&#xF02A;" />
                </AppBarButton.Content>
                <AppBarButton.Flyout>
                    <MenuFlyout contract8Present:ShouldConstrainToRootBounds="False" Placement="Bottom">
                        <MenuFlyoutSubItem x:Uid="NavToolbarSortByRadioButtons" Text="Sort by">
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionName"
                                IsChecked="{x:Bind ViewModel.IsSortedByName, Mode=TwoWay}"
                                Text="Name" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsSortedByDateModified, Mode=TwoWay}" Text="{helpers:ResourceString Name=DateModifiedLowerCase}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsSortedByDateCreated, Mode=TwoWay}" Text="{helpers:ResourceString Name=DateCreated}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsSortedBySize, Mode=TwoWay}" Text="{helpers:ResourceString Name=Size}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionType"
                                IsChecked="{x:Bind ViewModel.IsSortedByType, Mode=TwoWay}"
                                Text="Type" />
                            <ToggleMenuFlyoutItem
                                IsChecked="{x:Bind ViewModel.IsSortedBySyncStatus, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeCloudDrive, Mode=OneWay}"
                                Text="{helpers:ResourceString Name=SyncStatus}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionFileTag"
                                IsChecked="{x:Bind ViewModel.IsSortedByFileTag, Mode=TwoWay}"
                                Text="File tag"
                                Visibility="{x:Bind UserSettingsService.PreferencesSettingsService.AreFileTagsEnabled, Mode=OneWay}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionOriginalFolder"
                                IsChecked="{x:Bind ViewModel.IsSortedByOriginalFolder, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="Original folder" />
                            <ToggleMenuFlyoutItem
                                IsChecked="{x:Bind ViewModel.IsSortedByDateDeleted, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="{helpers:ResourceString Name=DateDeleted}" />
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem x:Uid="NavToolbarGroupByRadioButtons" Text="Group by">
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsGroupedByNone, Mode=TwoWay}" Text="{helpers:ResourceString Name=None}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionName"
                                IsChecked="{x:Bind ViewModel.IsGroupedByName, Mode=TwoWay}"
                                Text="Name" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsGroupedByDateModified, Mode=TwoWay}" Text="{helpers:ResourceString Name=DateModifiedLowerCase}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsGroupedByDateCreated, Mode=TwoWay}" Text="{helpers:ResourceString Name=DateCreated}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsGroupedBySize, Mode=TwoWay}" Text="{helpers:ResourceString Name=Size}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionType"
                                IsChecked="{x:Bind ViewModel.IsGroupedByType, Mode=TwoWay}"
                                Text="Type" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionSyncStatus"
                                IsChecked="{x:Bind ViewModel.IsGroupedBySyncStatus, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeCloudDrive, Mode=OneWay}"
                                Text="{helpers:ResourceString Name=SyncStatus}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionFileTag"
                                IsChecked="{x:Bind ViewModel.IsGroupedByFileTag, Mode=TwoWay}"
                                Text="File tag"
                                Visibility="{x:Bind UserSettingsService.PreferencesSettingsService.AreFileTagsEnabled, Mode=OneWay}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionOriginalFolder"
                                IsChecked="{x:Bind ViewModel.IsGroupedByOriginalFolder, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="Original folder" />
                            <ToggleMenuFlyoutItem
                                IsChecked="{x:Bind ViewModel.IsGroupedByDateDeleted, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="{helpers:ResourceString Name=DateDeleted}" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionFolderPath"
                                IsChecked="{x:Bind ViewModel.IsGroupedByFolderPath, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeLibrary, Mode=OneWay}"
                                Text="Folder path" />
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSeparator />
                        <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsSortedAscending, Mode=TwoWay}" Text="{helpers:ResourceString Name=Ascending}" />
                        <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsSortedDescending, Mode=TwoWay}" Text="{helpers:ResourceString Name=Descending}" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Name="LayoutOptionsButton"
                x:Uid="NavToolbarLayoutOptionsButton"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                AccessKey="L"
                AutomationProperties.Name="Layout"
                Label="Layout"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Layout">
                <AppBarButton.Icon>
                    <FontIcon FontSize="10" Glyph="&#xE152;" />
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout contract8Present:ShouldConstrainToRootBounds="False" Placement="Bottom">
                        <StackPanel Spacing="12">
                            <TextBlock
                                x:Uid="NavToolbarLayout"
                                FontWeight="Medium"
                                Text="Layout" />

                            <Grid ColumnSpacing="8" RowSpacing="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="30" />
                                    <RowDefinition MinHeight="30" />
                                    <RowDefinition MinHeight="30" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition MaxWidth="100" />
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition MaxWidth="100" />
                                </Grid.ColumnDefinitions>

                                <RadioButton
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    AutomationProperties.Name="{helpers:ResourceString Name=Details}"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeDetailsViewCommand, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=DetailsInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Details (Ctrl+Shift+1)">
                                    <FontIcon FontSize="16" Glyph="&#xE179;" />
                                </RadioButton>

                                <TextBlock
                                    x:Name="NavToolbarDetailsHeader"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Tapped="NavToolbarDetailsHeader_Tapped"
                                    Text="{helpers:ResourceString Name=Details}" />

                                <RadioButton
                                    x:Uid="NavToolbarTiles"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    AutomationProperties.Name="{helpers:ResourceString Name=Tiles}"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeTilesCommand, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=TilesInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Tiles (Ctrl+Shift+2)">
                                    <FontIcon FontSize="16" Glyph="&#xE15C;" />
                                </RadioButton>

                                <TextBlock
                                    x:Name="NavToolbarTilesHeader"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Tapped="NavToolbarTilesHeader_Tapped"
                                    Text="{helpers:ResourceString Name=Tiles}" />

                                <RadioButton
                                    x:Uid="NavToolbarSmallIcons"
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    AutomationProperties.Name="Small Icons"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeGridViewSmallCommand, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=SmallGridInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Small Icons (Ctrl+Shift+3)">
                                    <FontIcon FontSize="16" Glyph="&#xE80A;" />
                                </RadioButton>

                                <TextBlock
                                    x:Name="NavToolbarSmallIconsHeader"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Tapped="NavToolbarSmallIconsHeader_Tapped"
                                    Text="{helpers:ResourceString Name=SmallIcons}" />

                                <Border
                                    Grid.RowSpan="3"
                                    Grid.Column="2"
                                    Height="100"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BorderBrush="{ThemeResource ControlStrokeColorDefault}"
                                    BorderThickness="1" />

                                <RadioButton
                                    x:Uid="NavToolbarMediumIcons"
                                    Grid.Row="0"
                                    Grid.Column="3"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    AutomationProperties.Name="Medium Icons"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeGridViewMediumCommand, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=MediumGridInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Medium Icons (Ctrl+Shift+4)">
                                    <FontIcon FontSize="16" Glyph="&#xF0E2;" />
                                </RadioButton>

                                <TextBlock
                                    x:Name="NavToolbarMediumIconsHeader"
                                    Grid.Row="0"
                                    Grid.Column="4"
                                    VerticalAlignment="Center"
                                    Tapped="NavToolbarMediumIconsHeader_Tapped"
                                    Text="{helpers:ResourceString Name=MediumIcons}" />

                                <RadioButton
                                    x:Uid="NavToolbarLargeIcons"
                                    Grid.Row="1"
                                    Grid.Column="3"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    AutomationProperties.Name="Large Icons"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeGridViewLargeCommand, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=LargeGridInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Large Icons (Ctrl+Shift+5)">
                                    <FontIcon FontSize="16" Glyph="&#xE739;" />
                                </RadioButton>

                                <TextBlock
                                    x:Name="NavToolbarLargeIconsHeader"
                                    Grid.Row="1"
                                    Grid.Column="4"
                                    VerticalAlignment="Center"
                                    Tapped="NavToolbarLargeIconsHeader_Tapped"
                                    Text="{helpers:ResourceString Name=LargeIcons}" />

                                <RadioButton
                                    x:Uid="NavToolbarColumnView"
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    AutomationProperties.Name="{helpers:ResourceString Name=Columns}"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeColumnViewCommand, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=ColumnInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="{helpers:ResourceString Name=ColumnsShortcutTooltip}">
                                    <FontIcon
                                        FontFamily="{StaticResource CustomGlyph}"
                                        FontSize="16"
                                        Glyph="&#xF115;" />
                                </RadioButton>

                                <TextBlock
                                    x:Name="NavToolbarColumnsHeader"
                                    Grid.Row="2"
                                    Grid.Column="4"
                                    VerticalAlignment="Center"
                                    Tapped="NavToolbarColumnsHeader_Tapped"
                                    Text="{helpers:ResourceString Name=Columns}" />
                            </Grid>

                            <Border
                                Margin="-20,0"
                                HorizontalAlignment="Stretch"
                                BorderBrush="{ThemeResource ControlStrokeColorDefault}"
                                BorderThickness="1" />

                            <Grid RowSpacing="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="30" />
                                    <RowDefinition MinHeight="30" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    x:Uid="NavToolbarShowHiddenItemsHeader"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Text="Show hidden items" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowHiddenItems"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    AutomationProperties.Name="Show hidden items"
                                    IsOn="{x:Bind UserSettingsService.PreferencesSettingsService.AreHiddenItemsVisible, Mode=TwoWay}"
                                    Style="{StaticResource RightAlignedToggleSwitchStyle}" />

                                <TextBlock
                                    x:Uid="NavToolbarShowFileExtensionsHeader"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Text="Show file extensions" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowFileExtensions"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    AutomationProperties.Name="Show file extensions"
                                    IsOn="{x:Bind UserSettingsService.PreferencesSettingsService.ShowFileExtensions, Mode=TwoWay}"
                                    Rotation="1"
                                    Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                            </Grid>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarToggleButton
                x:Name="PreviewPane"
                x:Uid="PreviewPaneToggle"
                Width="Auto"
                MinWidth="40"
                AccessKey="P"
                AutomationProperties.Name="Toggle preview pane"
                IsChecked="{x:Bind PreviewPaneViewModel.IsPaneSelected, Mode=TwoWay}"
                IsEnabled="{x:Bind ShowPreviewPaneButton, Mode=OneWay}"
                Label="Preview"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Toggle the preview pane (Ctrl+P)"
                Visibility="{x:Bind ShowPreviewPaneButton, Mode=OneWay}">
                <AppBarToggleButton.Content>
                    <local:ColoredIcon BaseLayerGlyph="&#xF03b;" OverlayLayerGlyph="&#xF03c;" />
                </AppBarToggleButton.Content>
            </AppBarToggleButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Name="NavToolbarNewPane"
                    x:Uid="NavigationToolbarNewPane"
                    x:Load="{x:Bind converters:MultiBooleanConverter.AndNotConvert(ShowMultiPaneControls, IsMultiPaneActive), Mode=OneWay}"
                    Command="{x:Bind ViewModel.OpenNewPaneCommand, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Alt+Shift++"
                    Label="New pane">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF117;" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="Add"
                            IsEnabled="False"
                            Modifiers="Menu,Shift" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarClosePane"
                    x:Uid="NavigationToolbarClosePane"
                    x:Load="{x:Bind IsMultiPaneActive, Mode=OneWay}"
                    Command="{x:Bind ViewModel.ClosePaneCommand, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Ctrl+Shift+W"
                    Label="Close pane">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xF89F;" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="W"
                            IsEnabled="False"
                            Modifiers="Control,Shift" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarNewWindow"
                    x:Uid="NavigationToolbarNewWindow"
                    Command="{x:Bind ViewModel.OpenNewWindowCommand, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Ctrl+N"
                    Label="New window">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE737;" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="N"
                            IsEnabled="False"
                            Modifiers="Control" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarEnterCompactOverlay"
                    x:Uid="NavigationToolbarEnterCompactOverlay"
                    Command="{x:Bind SetCompactOverlayCommand}"
                    CommandParameter="{StaticResource True}"
                    KeyboardAcceleratorTextOverride="Ctrl+Alt+Up"
                    Label="Enter compact overlay"
                    Visibility="{x:Bind IsCompactOverlay, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="Up"
                            IsEnabled="False"
                            Modifiers="Menu,Control" />
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Icon>
                        <PathIcon
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource EnterCompactOverlay}" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarExitCompactOverlay"
                    x:Uid="NavigationToolbarExitCompactOverlay"
                    Command="{x:Bind SetCompactOverlayCommand}"
                    CommandParameter="{StaticResource False}"
                    KeyboardAcceleratorTextOverride="Ctrl+Alt+Down"
                    Label="Exit compact overlay"
                    Visibility="{x:Bind IsCompactOverlay, Mode=OneWay}">
                    <AppBarButton.Icon>
                        <PathIcon
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource ExitCompactOverlay}" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="Down"
                            IsEnabled="False"
                            Modifiers="Menu,Control" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarSeparator x:Name="SeparatorBar" x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}" />
                <AppBarButton
                    x:Name="OpenInTerminalButton"
                    x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                    Command="{x:Bind ViewModel.OpenDirectoryInDefaultTerminalCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.InstanceViewModel.CanOpenTerminalInPage, Mode=OneWay}"
                    Label="{x:Bind ViewModel.OpenInTerminal, Mode=OneWay}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE756;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Grid>
</UserControl>
