<!--  Copyright (c) Files Community. Licensed under the MIT License.  -->
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
	xmlns:local="using:Files.App.Controls">

	<x:Double x:Key="BreadcrumbBarHeight">32</x:Double>
	<x:Double x:Key="BreadcrumbBarMinWidth">120</x:Double>
	<x:Double x:Key="BreadcrumbBarEllipsisFontSize">16</x:Double>

	<Thickness x:Key="BreadcrumbBarChevronPadding">4,0</Thickness>
	<Thickness x:Key="BreadcrumbBarItemPadding">8,0</Thickness>
	<Thickness x:Key="BreadcrumbBarRootItemPadding">16,0,8,0</Thickness>

	<CornerRadius x:Key="BreadcrumbBarItemCornerRadius">2,2,2,2</CornerRadius>
	<CornerRadius x:Key="BreadcrumbBarChevronCornerRaduis">2,2,2,2</CornerRadius>
	<CornerRadius x:Key="BreadcrumbBarRootItemCornerRadius">16,2,2,16</CornerRadius>

	<Style BasedOn="{StaticResource DefaultBreadcrumbBarStyle}" TargetType="local:BreadcrumbBar" />
	<Style BasedOn="{StaticResource DefaultBreadcrumbBarItemStyle}" TargetType="local:BreadcrumbBarItem" />

	<Style x:Key="DefaultBreadcrumbBarStyle" TargetType="local:BreadcrumbBar">
		<Setter Property="MinWidth" Value="{StaticResource BreadcrumbBarMinWidth}" />
		<Setter Property="AutomationProperties.LandmarkType" Value="Navigation" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:BreadcrumbBar">
					<Grid
						MinWidth="{TemplateBinding MinWidth}"
						ColumnSpacing="2"
						TabFocusNavigation="Once"
						XYFocusKeyboardNavigation="Enabled">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<local:BreadcrumbBarItem
							x:Name="PART_RootBreadcrumbBarItem"
							Grid.Column="0"
							Padding="{StaticResource BreadcrumbBarRootItemPadding}"
							AutomationProperties.AccessibilityView="Content"
							CornerRadius="{StaticResource BreadcrumbBarRootItemCornerRadius}">
							<ContentPresenter Content="{Binding RootItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
						</local:BreadcrumbBarItem>

						<local:BreadcrumbBarItem
							x:Name="PART_EllipsisBreadcrumbBarItem"
							Grid.Column="1"
							AutomationProperties.AccessibilityView="Content"
							IsEllipsis="True"
							Visibility="Collapsed">
							<FontIcon FontSize="{StaticResource BreadcrumbBarEllipsisFontSize}" Glyph="&#xE712;" />
						</local:BreadcrumbBarItem>

						<ItemsRepeater
							x:Name="PART_MainItemsRepeater"
							Grid.Column="2"
							ItemTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultBreadcrumbBarItemStyle" TargetType="local:BreadcrumbBarItem">

		<Setter Property="Background" Value="{ThemeResource BreadcrumbBarBackgroundBrush}" />
		<Setter Property="Foreground" Value="{ThemeResource BreadcrumbBarForegroundBrush}" />
		<Setter Property="BorderBrush" Value="{ThemeResource BreadcrumbBarBorderBrush}" />
		<Setter Property="CornerRadius" Value="{StaticResource BreadcrumbBarItemCornerRadius}" />

		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource BreadcrumbBarItemThemeFontSize}" />
		<Setter Property="FontWeight" Value="{ThemeResource BreadcrumbBarItemFontWeight}" />

		<Setter Property="Padding" Value="{ThemeResource BreadcrumbBarItemPadding}" />
		<Setter Property="Height" Value="{ThemeResource BreadcrumbBarHeight}" />

		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="FocusVisualMargin" Value="1" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:BreadcrumbBarItem">
					<Grid
						x:Name="PART_LayoutRoot"
						ColumnSpacing="2"
						TabFocusNavigation="Once"
						XYFocusKeyboardNavigation="Enabled">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="PART_ContentColumn" Width="Auto" />
							<ColumnDefinition x:Name="PART_ChevronColumn" Width="Auto" />
						</Grid.ColumnDefinitions>

						<!--  Clickable Area  -->
						<Button
							x:Name="PART_ItemContentButton"
							Padding="{TemplateBinding Padding}"
							VerticalAlignment="Stretch"
							AutomationProperties.AccessibilityView="Raw"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Control.IsTemplateFocusTarget="True"
							CornerRadius="{TemplateBinding CornerRadius}"
							UseSystemFocusVisuals="True">
							<FlyoutBase.AttachedFlyout>
								<MenuFlyout
									x:Name="PART_ItemEllipsisDropDownMenuFlyout"
									Placement="Bottom"
									ScrollViewer.VerticalScrollBarVisibility="Auto"
									ScrollViewer.VerticalScrollMode="Auto">
									<MenuFlyout.MenuFlyoutPresenterStyle>
										<Style TargetType="MenuFlyoutPresenter">
											<Setter Property="MaxHeight" Value="400" />
											<!--  Workaround for https://github.com/files-community/Files/issues/13078  -->
											<Setter Target="HighContrastAdjustment" Value="None" />
										</Style>
									</MenuFlyout.MenuFlyoutPresenterStyle>
								</MenuFlyout>
							</FlyoutBase.AttachedFlyout>

							<ContentPresenter
								x:Name="PART_ItemContentPresenter"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								AutomationProperties.AccessibilityView="Raw"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								FontFamily="{TemplateBinding FontFamily}"
								FontSize="{TemplateBinding FontSize}"
								FontWeight="{TemplateBinding FontWeight}"
								Foreground="{ThemeResource BreadcrumbBarForegroundBrush}"
								TextLineBounds="Tight" />

						</Button>

						<!--  Chevron  -->
						<Button
							x:Name="PART_ItemChevronButton"
							Grid.Column="1"
							Padding="{StaticResource BreadcrumbBarChevronPadding}"
							VerticalAlignment="Stretch"
							AutomationProperties.AccessibilityView="Content"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{StaticResource BreadcrumbBarChevronCornerRaduis}"
							Style="{StaticResource BreadcrumbBarItemChevronButtonStyle}"
							UseSystemFocusVisuals="True">
							<FlyoutBase.AttachedFlyout>
								<MenuFlyout
									x:Name="PART_ItemChevronDropDownMenuFlyout"
									Placement="BottomEdgeAlignedLeft"
									ScrollViewer.VerticalScrollBarVisibility="Auto"
									ScrollViewer.VerticalScrollMode="Auto">
									<MenuFlyout.MenuFlyoutPresenterStyle>
										<Style TargetType="MenuFlyoutPresenter">
											<Setter Property="MaxHeight" Value="400" />
											<!--  Workaround for https://github.com/files-community/Files/issues/13078  -->
											<Setter Target="HighContrastAdjustment" Value="None" />
										</Style>
									</MenuFlyout.MenuFlyoutPresenterStyle>
								</MenuFlyout>
							</FlyoutBase.AttachedFlyout>

							<AnimatedIcon
								x:Name="PART_ItemChevronIcon"
								Width="{StaticResource BreadcrumbBarChevronFontSize}"
								Height="{StaticResource BreadcrumbBarChevronFontSize}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								AnimatedIcon.State="NormalOff"
								AutomationProperties.AccessibilityView="Raw"
								Foreground="{ThemeResource BreadcrumbBarForegroundBrush}"
								MirroredWhenRightToLeft="True"
								RenderTransformOrigin="0.5, 0.5">
								<AnimatedIcon.FallbackIconSource>
									<FontIconSource
										FontSize="{StaticResource BreadcrumbBarChevronFontSize}"
										Glyph="&#xE76C;"
										IsTextScaleFactorEnabled="False" />
								</AnimatedIcon.FallbackIconSource>
								<animatedvisuals:AnimatedChevronRightDownSmallVisualSource />
							</AnimatedIcon>

						</Button>

						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="ChevronVisibilityStates">
								<VisualState x:Name="ChevronVisible" />
								<VisualState x:Name="ChevronCollapsed">
									<VisualState.Setters>
										<Setter Target="PART_ItemChevronButton.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ChevronStates">
								<VisualState x:Name="ChevronNormalOff" />
								<VisualState x:Name="ChevronNormalOn">
									<VisualState.Setters>
										<Setter Target="PART_ItemChevronIcon.(AnimatedIcon.State)" Value="NormalOn" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="BreadcrumbBarItemChevronButtonStyle"
		BasedOn="{StaticResource DefaultButtonStyle}"
		TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<ContentPresenter
						x:Name="ContentPresenter"
						Padding="{TemplateBinding Padding}"
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						AutomationProperties.AccessibilityView="Raw"
						Background="{TemplateBinding Background}"
						BackgroundSizing="{TemplateBinding BackgroundSizing}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Content="{TemplateBinding Content}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						ContentTransitions="{TemplateBinding ContentTransitions}"
						CornerRadius="{TemplateBinding CornerRadius}"
						Foreground="{TemplateBinding Foreground}">
						<ContentPresenter.BackgroundTransition>
							<BrushTransition Duration="0:0:0.083" />
						</ContentPresenter.BackgroundTransition>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</ContentPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
