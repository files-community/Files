<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<UserControl
	x:Class="Files.App.UserControls.StatusCenter"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters1="using:CommunityToolkit.WinUI.UI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dataitems="using:Files.App.Data.Items"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:statuscenter="using:Files.App.Utils.StatusCenter"
	xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers"
	d:DesignHeight="300"
	d:DesignWidth="300"
	mc:Ignorable="d">

	<UserControl.Resources>
		<converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
	</UserControl.Resources>

	<Grid Margin="-16">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<!--  Header  -->
		<Grid Padding="12">
			<TextBlock
				VerticalAlignment="Center"
				FontSize="14"
				Text="{helpers:ResourceString Name=OngoingTasks}" />

			<Button
				x:Name="CloseAllItemsButton"
				Height="24"
				Padding="8,0"
				HorizontalAlignment="Right"
				Click="CloseAllItemsButton_Click"
				Content="{helpers:ResourceString Name=ClearAll}"
				FontSize="12"
				ToolTipService.ToolTip="{helpers:ResourceString Name=ClearAll}" />
		</Grid>

		<!--  Divider  -->
		<Rectangle
			Grid.Row="1"
			Height="1"
			HorizontalAlignment="Stretch"
			Fill="{ThemeResource DividerStrokeColorDefaultBrush}" />

		<!--  Ongoing Tasks List  -->
		<ListView
			Grid.Row="2"
			VerticalAlignment="Stretch"
			ItemsSource="{x:Bind OngoingTasksViewModel.StatusCenterItems, Mode=OneWay}"
			SelectionMode="None">

			<ListView.ItemTemplate>
				<DataTemplate x:DataType="statuscenter:StatusCenterItem">
					<Grid
						x:Name="RootContent"
						HorizontalAlignment="Stretch"
						AutomationProperties.Name="{x:Bind FullTitle, Mode=OneWay}">
						<!--  Background  -->
						<!--<InfoBar
							Title="{x:Bind FullTitle, Mode=OneWay}"
							Background="{ThemeResource ControlFillColorDefault}"
							IsClosable="False"
							IsIconVisible="False"
							IsOpen="True"
							Message="{x:Bind Message, Mode=OneWay}"
							Severity="{x:Bind State, Mode=OneWay}">

							<ProgressBar
								x:Name="ProgressBar"
								Margin="0,-24,12,12"
								IsIndeterminate="{x:Bind IsCancelled, Mode=OneWay}"
								Visibility="{x:Bind IsProgressing, Mode=OneWay}"
								Value="{x:Bind Progress, Mode=OneWay}" />
						</InfoBar>-->

						<!--  Close Button  -->
						<Button
							x:Name="CloseItemButton"
							Height="24"
							Margin="8"
							Padding="8,0"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							x:Load="{x:Bind CancelButtonVisible, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
							AutomationProperties.Name="{helpers:ResourceString Name=Clear}"
							Background="Transparent"
							BorderBrush="Transparent"
							Click="CloseItemButton_Click"
							DataContext="{x:Bind Mode=OneWay}"
							ToolTipService.ToolTip="{helpers:ResourceString Name=Clear}">
							<FontIcon FontSize="11" Glyph="&#xE711;" />
						</Button>

						<!--  Cancel Button  -->
						<Button
							x:Name="CancelBannerButton"
							Height="24"
							Margin="8"
							Padding="8,0"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							x:Load="{x:Bind CancelButtonVisible, Mode=OneWay}"
							AutomationProperties.Name="{helpers:ResourceString Name=Cancel}"
							Background="Transparent"
							BorderBrush="Transparent"
							Command="{x:Bind CancelCommand, Mode=OneWay}"
							DataContext="{x:Bind Mode=OneWay}"
							IsEnabled="{x:Bind IsCancelled, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
							ToolTipService.ToolTip="{helpers:ResourceString Name=Cancel}">
							<FontIcon FontSize="11" Glyph="&#xE711;" />
						</Button>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="TaskStates">
								<VisualState x:Name="InProgressState">
									<VisualState.StateTriggers>
										<triggers:CompareStateTrigger
											Comparison="Equal"
											Value="{x:Bind State, Mode=OneWay}"
											To="0" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="RootContent.Background" Value="{StaticResource InfoBarInformationalBackground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ErrorState">
									<VisualState.StateTriggers>
										<triggers:CompareStateTrigger
											Comparison="Equal"
											Value="{x:Bind State, Mode=OneWay}"
											To="1" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="RootContent.Background" Value="{StaticResource InfoBarInformationalBackground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="SuccessfulState">
									<VisualState.StateTriggers>
										<triggers:CompareStateTrigger
											Comparison="Equal"
											Value="{x:Bind State, Mode=OneWay}"
											To="2" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="RootContent.Background" Value="{StaticResource InfoBarInformationalBackground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="SuspendingState">
									<VisualState.StateTriggers>
										<triggers:CompareStateTrigger
											Comparison="Equal"
											Value="{x:Bind State, Mode=OneWay}"
											To="3" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="RootContent.Background" Value="{StaticResource InfoBarInformationalBackground}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>

			<ListView.ItemContainerStyle>
				<Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
					<Setter Property="MinHeight" Value="54" />
				</Style>
			</ListView.ItemContainerStyle>

		</ListView>

	</Grid>
</UserControl>
