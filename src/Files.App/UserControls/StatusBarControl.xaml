<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<UserControl
	x:Class="Files.App.UserControls.StatusBarControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="using:Files.App.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:data="using:Files.App.Data.Items"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:usercontrols="using:Files.App.UserControls"
	d:DesignHeight="32"
	d:DesignWidth="400"
	mc:Ignorable="d">

	<UserControl.Resources>
		<converters:NullToTrueConverter x:Key="NullToFalseConverter" Inverse="True" />
		<converters:NullToVisibilityCollapsedConverter x:Key="NullToVisibilityCollapsedConverter" />

		<Style x:Key="Local.RadioButtonStyle" TargetType="RadioButton">
			<Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
			<Setter Property="BorderBrush" Value="{ThemeResource RadioButtonBorderBrush}" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Top" />
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
			<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Grid x:Name="RootGrid" Margin="0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="4" />
							</Grid.RowDefinitions>
							<ContentPresenter
								x:Name="ContentPresenter"
								Grid.Row="0"
								Padding="12,4,12,4"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								AutomationProperties.AccessibilityView="Raw"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								Foreground="{TemplateBinding Foreground}"
								TextWrapping="Wrap" />
							<Border
								x:Name="SelectionPill"
								Grid.Row="1"
								Height="2"
								Margin="16,0,16,0"
								Background="Transparent"
								CornerRadius="2" />
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextFillColorPrimaryBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextFillColorPrimaryBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextFillColorDisabledBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionPill" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemAccentColor}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextFillColorPrimaryBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked" />
									<VisualState x:Name="Indeterminate" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>

	<Grid Padding="8,0" ColumnSpacing="4">
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>

		<StackPanel
			Grid.Column="0"
			Height="32"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Orientation="Horizontal"
			Spacing="8"
			Visibility="{x:Bind ShowInfoText, Mode=OneWay}">

			<TextBlock
				x:Name="DirectoryItemCount"
				VerticalAlignment="Center"
				x:Load="{x:Bind ShowInfoText, Mode=OneWay}"
				Foreground="{ThemeResource TextFillColorSecondaryBrush}"
				Text="{x:Bind DirectoryPropertiesViewModel.DirectoryItemCount, Mode=OneWay}" />

			<!--  Divider  -->
			<Border
				x:Name="SelectedItemsCountDivider"
				Width="1"
				Height="18"
				x:Load="{x:Bind SelectedItemsPropertiesViewModel.IsItemSelected, Mode=OneWay}"
				Background="{ThemeResource DividerStrokeColorDefaultBrush}" />
			<!--  Selected Items Count  -->
			<TextBlock
				x:Name="SelectedItemsCountString"
				VerticalAlignment="Center"
				x:Load="{x:Bind SelectedItemsPropertiesViewModel.IsItemSelected, Mode=OneWay}"
				Foreground="{ThemeResource TextFillColorSecondaryBrush}"
				Text="{x:Bind SelectedItemsPropertiesViewModel.SelectedItemsCountString, Mode=OneWay}" />

			<!--  Divider  -->
			<Border
				x:Name="ItemSizeDivider"
				Width="1"
				Height="18"
				x:Load="{x:Bind SelectedItemsPropertiesViewModel.ItemSizeVisibility, Mode=OneWay}"
				Background="{ThemeResource DividerStrokeColorDefaultBrush}" />
			<!--  Item Size  -->
			<TextBlock
				x:Name="ItemSize"
				VerticalAlignment="Center"
				x:Load="{x:Bind SelectedItemsPropertiesViewModel.ItemSizeVisibility, Mode=OneWay}"
				Foreground="{ThemeResource TextFillColorSecondaryBrush}"
				Text="{x:Bind SelectedItemsPropertiesViewModel.ItemSize, Mode=OneWay}" />
		</StackPanel>

		<StackPanel
			x:Name="GitActionsPanel"
			Grid.Column="1"
			VerticalAlignment="Center"
			x:Load="{x:Bind DirectoryPropertiesViewModel.GitBranchDisplayName, Mode=OneWay, Converter={StaticResource NullToFalseConverter}, FallbackValue=False}"
			Orientation="Horizontal"
			Spacing="4">

			<!--  Open in IDE Button  -->
			<Button
				x:Name="OpenInIDEButton"
				Height="24"
				Padding="8,0,8,0"
				VerticalAlignment="Center"
				x:Load="{x:Bind Commands.OpenInVSCode.IsExecutable, Mode=OneWay}"
				Background="Transparent"
				BorderBrush="Transparent">
				<Button.Content>
					<StackPanel Orientation="Horizontal" Spacing="8">
						<usercontrols:OpacityIcon
							Width="16"
							Height="16"
							Style="{StaticResource ColorIconOpen}" />
						<TextBlock Text="{helpers:ResourceString Name=Open}" />
					</StackPanel>
				</Button.Content>

				<Button.Flyout>
					<MenuFlyout>
						<MenuFlyoutItem
							x:Name="OpenFolderInVSCodeButton"
							Command="{x:Bind Commands.OpenInVSCode}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.OpenInVSCode.HotKeys, Mode=OneWay}"
							Text="{x:Bind Commands.OpenInVSCode.Label, Mode=OneWay}"
							ToolTipService.ToolTip="{x:Bind Commands.OpenInVSCode.LabelWithHotKey, Mode=OneWay}" />
						<MenuFlyoutItem
							x:Name="OpenRepoInVSCodeButton"
							Command="{x:Bind Commands.OpenRepoInVSCode}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.OpenRepoInVSCode.HotKeys, Mode=OneWay}"
							Text="{x:Bind Commands.OpenRepoInVSCode.Label, Mode=OneWay}"
							ToolTipService.ToolTip="{x:Bind Commands.OpenRepoInVSCode.LabelWithHotKey, Mode=OneWay}" />
					</MenuFlyout>
				</Button.Flyout>
			</Button>
			<!--  Divider  -->
			<Border
				x:Name="VSCodeDivider"
				Width="1"
				Height="18"
				x:Load="{x:Bind Commands.OpenInVSCode.IsExecutable, Mode=OneWay}"
				Background="{ThemeResource DividerStrokeColorDefaultBrush}" />

			<Button
				x:Name="GitNetworkActions"
				Height="24"
				Padding="8,0,8,0"
				VerticalAlignment="Center"
				Background="Transparent"
				BorderBrush="Transparent"
				ToolTipService.ToolTip="{x:Bind DirectoryPropertiesViewModel.ExtendedStatusInfo, Mode=OneWay}">
				<Button.Flyout>
					<MenuFlyout>
						<!--  Pull Button  -->
						<MenuFlyoutItem
							x:Name="GitPullButton"
							Command="{x:Bind Commands.GitPull}"
							IsEnabled="{x:Bind Commands.GitPull.IsExecutable, Mode=OneWay}"
							Text="{x:Bind Commands.GitPull.Label}"
							ToolTipService.ToolTip="{x:Bind Commands.GitPull.LabelWithHotKey, Mode=OneWay}">
							<MenuFlyoutItem.Icon>
								<FontIcon FontSize="12" Glyph="{x:Bind Commands.GitPull.Glyph.BaseGlyph}" />
							</MenuFlyoutItem.Icon>
						</MenuFlyoutItem>

						<!--  Push Button  -->
						<MenuFlyoutItem
							x:Name="GitPushButton"
							Command="{x:Bind Commands.GitPush}"
							IsEnabled="{x:Bind Commands.GitPush.IsExecutable, Mode=OneWay}"
							Text="{x:Bind Commands.GitPush.Label}"
							ToolTipService.ToolTip="{x:Bind Commands.GitPush.LabelWithHotKey, Mode=OneWay}">
							<MenuFlyoutItem.Icon>
								<FontIcon FontSize="12" Glyph="{x:Bind Commands.GitPush.Glyph.BaseGlyph}" />
							</MenuFlyoutItem.Icon>
						</MenuFlyoutItem>

						<!--  Sync Button  -->
						<MenuFlyoutItem
							x:Name="GitSyncButton"
							Command="{x:Bind Commands.GitSync}"
							IsEnabled="{x:Bind Commands.GitSync.IsExecutable, Mode=OneWay}"
							Text="{x:Bind Commands.GitSync.Label}"
							ToolTipService.ToolTip="{x:Bind Commands.GitSync.LabelWithHotKey, Mode=OneWay}">
							<MenuFlyoutItem.Icon>
								<FontIcon FontSize="12" Glyph="{x:Bind Commands.GitSync.Glyph.BaseGlyph}" />
							</MenuFlyoutItem.Icon>
						</MenuFlyoutItem>
					</MenuFlyout>
				</Button.Flyout>

				<StackPanel Orientation="Horizontal" Spacing="8">
					<usercontrols:OpacityIcon
						Width="16"
						Height="16"
						Style="{StaticResource ColorIconGitGeneral}" />

					<!--  Outgoing / Incoming commits  -->
					<TextBlock Text="{x:Bind DirectoryPropertiesViewModel.StatusInfo, Mode=OneWay}" />
				</StackPanel>
			</Button>
			<!--  Divider  -->
			<Border
				Width="1"
				Height="18"
				Background="{ThemeResource DividerStrokeColorDefaultBrush}" />
		</StackPanel>

		<!--  Use visibility because it causes a crash to use a TwoWay x:Bind on an element that is inside an element with x:Load (#12589, #12599)  -->
		<Button
			x:Name="GitBranch"
			Grid.Column="2"
			Height="24"
			Padding="8,0,8,0"
			Background="Transparent"
			BorderBrush="Transparent"
			ToolTipService.ToolTip="{helpers:ResourceString Name=ManageBranches}"
			Visibility="{x:Bind DirectoryPropertiesViewModel.GitBranchDisplayName, Mode=OneWay, Converter={StaticResource NullToVisibilityCollapsedConverter}, FallbackValue=Collapsed}">

			<Button.Content>
				<StackPanel Orientation="Horizontal" Spacing="8">
					<usercontrols:OpacityIcon
						Width="16"
						Height="16"
						Style="{StaticResource ColorIconGitBranches}" />

					<!--  Branch Name  -->
					<TextBlock Text="{x:Bind DirectoryPropertiesViewModel.GitBranchDisplayName, Mode=OneWay}" />
				</StackPanel>
			</Button.Content>

			<Button.Flyout>
				<Flyout
					x:Name="BranchesFlyout"
					Closing="BranchesFlyout_Closing"
					Opening="BranchesFlyout_Opening">
					<Grid
						Width="300"
						Height="340"
						Margin="-16">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<!--  Header  -->
						<Grid
							Grid.Row="0"
							Padding="4,8,8,8"
							Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"
							BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
							BorderThickness="0,0,0,1">

							<!--  Locals and Remotes  -->
							<StackPanel
								Grid.Row="1"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Orientation="Horizontal">
								<RadioButton
									Content="{helpers:ResourceString Name=Locals}"
									IsChecked="{x:Bind DirectoryPropertiesViewModel.ShowLocals, Mode=TwoWay}"
									Style="{StaticResource Local.RadioButtonStyle}" />
								<RadioButton Content="{helpers:ResourceString Name=Remotes}" Style="{StaticResource Local.RadioButtonStyle}" />
							</StackPanel>

							<!--  New Branch Button  -->
							<Button
								x:Name="NewBranchButton"
								Height="24"
								Padding="8,0"
								HorizontalAlignment="Right"
								Command="{x:Bind DirectoryPropertiesViewModel.NewBranchCommand, Mode=OneWay}"
								Content="{helpers:ResourceString Name=CreateBranch}"
								FontSize="12"
								ToolTipService.ToolTip="{helpers:ResourceString Name=CreateBranch}" />
						</Grid>

						<!--  Branches List  -->
						<ListView
							x:Name="BranchesList"
							Grid.Row="1"
							Padding="4"
							Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
							IsItemClickEnabled="True"
							ItemClick="BranchesList_ItemClick"
							ItemsSource="{x:Bind DirectoryPropertiesViewModel.Branches, Mode=OneWay}"
							SelectedIndex="{x:Bind DirectoryPropertiesViewModel.SelectedBranchIndex, Mode=TwoWay}"
							SelectionMode="Single">

							<ListView.ItemTemplate>
								<DataTemplate x:DataType="data:BranchItem">
									<Grid HorizontalAlignment="Stretch">
										<Grid.ColumnDefinitions>
											<ColumnDefinition />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<TextBlock
											VerticalAlignment="Center"
											Text="{x:Bind Name}"
											TextTrimming="CharacterEllipsis" />
										<Button
											Grid.Column="1"
											AutomationProperties.Name="{helpers:ResourceString Name=Delete}"
											Background="Transparent"
											BorderBrush="Transparent"
											Click="DeleteBranch_Click"
											ToolTipService.ToolTip="{helpers:ResourceString Name=Delete}"
											Visibility="{x:Bind converters:MultiBooleanConverter.NorConvertToVisibility(IsHead, IsRemote)}">
											<FontIcon FontSize="12" Glyph="&#xE74D;" />
										</Button>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>

						</ListView>
					</Grid>
				</Flyout>
			</Button.Flyout>
		</Button>

	</Grid>
</UserControl>
