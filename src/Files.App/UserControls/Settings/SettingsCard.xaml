<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Files.App.UserControls"
	xmlns:wcttriggers="using:CommunityToolkit.WinUI.UI.Triggers"
	xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Default">
			<StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush" />
			<StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
			<StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush" />
			<StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />

			<StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
			<StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />

			<StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush" />
		</ResourceDictionary>

		<ResourceDictionary x:Key="Light">
			<StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush" />
			<StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
			<StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush" />
			<StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />

			<StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
			<StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />

			<StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush" />
		</ResourceDictionary>

		<ResourceDictionary x:Key="HighContrast">
			<StaticResource x:Key="SettingsCardBackground" ResourceKey="SystemColorButtonFaceColorBrush" />
			<StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
			<StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
			<StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />

			<StaticResource x:Key="SettingsCardForeground" ResourceKey="SystemColorButtonTextColorBrush" />
			<StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
			<StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
			<StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

			<StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="SystemColorButtonTextColorBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
			<StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="SystemControlDisabledTransparentBrush" />
		</ResourceDictionary>

	</ResourceDictionary.ThemeDictionaries>

	<Thickness x:Key="SettingsCardBorderThickness">1</Thickness>
	<Thickness x:Key="SettingsCardPadding">16,16,16,16</Thickness>
	<x:Double x:Key="SettingsCardMinWidth">148</x:Double>
	<x:Double x:Key="SettingsCardMinHeight">68</x:Double>
	<x:Double x:Key="SettingsCardDescriptionFontSize">12</x:Double>
	<x:Double x:Key="SettingsCardHeaderIconMaxSize">20</x:Double>
	<x:Double x:Key="SettingsCardLeftIndention">0</x:Double>
	<x:Double x:Key="SettingsCardContentMinWidth">120</x:Double>
	<Thickness x:Key="SettingsCardHeaderIconMargin">2,0,20,0</Thickness>
	<Thickness x:Key="SettingsCardActionIconMargin">14,0,0,0</Thickness>
	<x:Double x:Key="SettingsCardActionIconMaxSize">13</x:Double>
	<Thickness x:Key="SettingsCardVerticalHeaderContentSpacing">0,8,0,0</Thickness>
	<x:Double x:Key="SettingsCardWrapThreshold">476</x:Double>
	<x:Double x:Key="SettingsCardWrapNoIconThreshold">286</x:Double>

	<Style BasedOn="{StaticResource DefaultSettingsCardStyle}" TargetType="local:SettingsCard" />

	<Style x:Key="DefaultSettingsCardStyle" TargetType="local:SettingsCard">
		<Style.Setters>
			<Setter Property="Background" Value="{ThemeResource SettingsCardBackground}" />
			<Setter Property="Foreground" Value="{ThemeResource SettingsCardForeground}" />
			<Setter Property="BorderBrush" Value="{ThemeResource SettingsCardBorderBrush}" />
			<Setter Property="BorderThickness" Value="{ThemeResource SettingsCardBorderThickness}" />
			<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
			<Setter Property="MinHeight" Value="{ThemeResource SettingsCardMinHeight}" />
			<Setter Property="MinWidth" Value="{ThemeResource SettingsCardMinWidth}" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="HorizontalContentAlignment" Value="Right" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
			<Setter Property="Padding" Value="{ThemeResource SettingsCardPadding}" />
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
			<Setter Property="FontWeight" Value="Normal" />
			<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
			<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
			<Setter Property="FocusVisualMargin" Value="-3" />
			<Setter Property="local:StyleExtensions.Resources">
				<Setter.Value>
					<ResourceDictionary>
						<!--  Making sure ToggleSwitches are right-aligned by default  -->
						<Style BasedOn="{StaticResource RightAlignedCompactToggleSwitchStyle}" TargetType="ToggleSwitch" />
						<!--  Overriding the MinWidth of various types of controls so they neatly align  -->
						<Style BasedOn="{StaticResource DefaultSliderStyle}" TargetType="Slider">
							<Style.Setters>
								<Setter Property="MinWidth" Value="{ThemeResource SettingsCardContentMinWidth}" />
							</Style.Setters>
						</Style>
						<Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="ComboBox">
							<Style.Setters>
								<Setter Property="MinWidth" Value="{ThemeResource SettingsCardContentMinWidth}" />
							</Style.Setters>
						</Style>
						<Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="TextBox">
							<Style.Setters>
								<Setter Property="MinWidth" Value="{ThemeResource SettingsCardContentMinWidth}" />
							</Style.Setters>
						</Style>

						<!--  NumberBox is not recognized?  -->
						<!--<Style
                            TargetType="NumberBox">
                            <Style.Setters>
                                <Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
                            </Style.Setters>
                        </Style>-->
					</ResourceDictionary>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="local:SettingsCard">
						<Grid
							x:Name="RootGrid"
							MinWidth="{TemplateBinding MinWidth}"
							MinHeight="{TemplateBinding MinHeight}"
							MaxWidth="{TemplateBinding MaxWidth}"
							Padding="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="{TemplateBinding VerticalAlignment}"
							AnimatedIcon.State="Normal"
							Background="{TemplateBinding Background}"
							BackgroundSizing="{TemplateBinding BackgroundSizing}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}">
							<win:Grid.BackgroundTransition>
								<win:BrushTransition Duration="0:0:0.083" />
							</win:Grid.BackgroundTransition>
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="{ThemeResource SettingsCardLeftIndention}" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<Viewbox
								x:Name="HeaderIconPresenterHolder"
								Grid.RowSpan="1"
								MaxWidth="{ThemeResource SettingsCardHeaderIconMaxSize}"
								MaxHeight="{ThemeResource SettingsCardHeaderIconMaxSize}"
								Margin="{ThemeResource SettingsCardHeaderIconMargin}">
								<ContentPresenter
									x:Name="HeaderIconPresenter"
									win:AutomationProperties.AccessibilityView="Raw"
									win:HighContrastAdjustment="None"
									Content="{TemplateBinding HeaderIcon}" />
							</Viewbox>

							<StackPanel
								x:Name="HeaderPanel"
								Grid.Column="1"
								Margin="0,0,24,0"
								VerticalAlignment="Center"
								Orientation="Vertical">
								<ContentPresenter
									x:Name="HeaderPresenter"
									Grid.Column="1"
									HorizontalAlignment="Left"
									win:HighContrastAdjustment="None"
									Content="{TemplateBinding Header}"
									TextWrapping="Wrap" />

								<ContentPresenter
									x:Name="DescriptionPresenter"
									Content="{TemplateBinding Description}"
									FontSize="{ThemeResource SettingsCardDescriptionFontSize}"
									Foreground="{ThemeResource TextFillColorSecondaryBrush}"
									TextWrapping="Wrap">
									<ContentPresenter.Resources>
										<Style BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
											<Style.Setters>
												<Setter Property="TextWrapping" Value="Wrap" />
											</Style.Setters>
										</Style>
										<Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton">
											<Style.Setters>
												<Setter Property="FontSize" Value="{ThemeResource SettingsCardDescriptionFontSize}" />
												<Setter Property="Padding" Value="0,0,0,-1" />
												<Setter Property="FontWeight" Value="SemiBold" />
											</Style.Setters>
										</Style>
										<Style TargetType="Hyperlink">
											<Style.Setters>
												<Setter Property="UnderlineStyle" Value="None" />
												<Setter Property="TextDecorations" Value="None" />
												<Setter Property="FontWeight" Value="SemiBold" />
											</Style.Setters>
										</Style>
									</ContentPresenter.Resources>
								</ContentPresenter>
							</StackPanel>

							<ContentPresenter
								x:Name="ContentPresenter"
								Grid.Column="2"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								Content="{TemplateBinding Content}" />

							<Viewbox
								x:Name="ActionIconPresenterHolder"
								Grid.RowSpan="2"
								Grid.Column="3"
								MaxWidth="{ThemeResource SettingsCardActionIconMaxSize}"
								MaxHeight="{ThemeResource SettingsCardActionIconMaxSize}"
								Margin="{ThemeResource SettingsCardActionIconMargin}"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								win:HighContrastAdjustment="None"
								Visibility="Collapsed">
								<ContentPresenter
									x:Name="ActionIconPresenter"
									win:AutomationProperties.AccessibilityView="Raw"
									win:HighContrastAdjustment="None"
									Content="{TemplateBinding ActionIcon}"
									FontFamily="{ThemeResource SymbolThemeFontFamily}"
									ToolTipService.ToolTip="{TemplateBinding ActionIconToolTip}" />
							</Viewbox>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderIconPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
										<VisualState.Setters>
											<Setter Target="RootGrid.(AnimatedIcon.State)" Value="PointerOver" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBackgroundPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardBorderBrushPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderIconPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DescriptionPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundPressed}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
										<VisualState.Setters>
											<Setter Target="RootGrid.(AnimatedIcon.State)" Value="Pressed" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionIconPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderIconPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DescriptionPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SettingsCardForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
										<VisualState.Setters>
											<!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
											<Setter Target="RootGrid.(AnimatedIcon.State)" Value="Normal" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="ContentAlignmentStates">
									<!--  Default  -->
									<VisualState x:Name="Right" />

									<!--  Whenever the control width is less than SettingsCardWrapThreshold, the Content is below the Header/Description  -->
									<VisualState x:Name="RightWrapped">
										<VisualState.StateTriggers>
											<wcttriggers:ControlSizeTrigger
												MinWidth="{ThemeResource SettingsCardWrapNoIconThreshold}"
												MaxWidth="{ThemeResource SettingsCardWrapThreshold}"
												TargetElement="{Binding ElementName=RootGrid}" />
										</VisualState.StateTriggers>
										<VisualState.Setters>
											<Setter Target="ContentPresenter.(Grid.Row)" Value="1" />
											<Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
											<Setter Target="ContentPresenter.HorizontalAlignment" Value="Stretch" />
											<Setter Target="ContentPresenter.HorizontalContentAlignment" Value="Left" />
											<Setter Target="ContentPresenter.Margin" Value="{ThemeResource SettingsCardVerticalHeaderContentSpacing}" />
											<Setter Target="HeaderPanel.Margin" Value="0" />
										</VisualState.Setters>
									</VisualState>

									<!--  For even smaller widths: the HeaderIcon is collapsed.  -->
									<VisualState x:Name="RightWrappedNoIcon">
										<VisualState.StateTriggers>
											<wcttriggers:ControlSizeTrigger MaxWidth="{ThemeResource SettingsCardWrapNoIconThreshold}" TargetElement="{Binding ElementName=RootGrid}" />
										</VisualState.StateTriggers>
										<VisualState.Setters>
											<Setter Target="HeaderIconPresenterHolder.Visibility" Value="Collapsed" />
											<Setter Target="ContentPresenter.(Grid.Row)" Value="1" />
											<Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
											<Setter Target="ContentPresenter.HorizontalAlignment" Value="Stretch" />
											<Setter Target="ContentPresenter.HorizontalContentAlignment" Value="Left" />
											<Setter Target="ContentPresenter.Margin" Value="{ThemeResource SettingsCardVerticalHeaderContentSpacing}" />
											<Setter Target="HeaderPanel.Margin" Value="0" />
										</VisualState.Setters>
									</VisualState>

									<!--  Header/Description/Icon collapsed, content is to the left. Great for e.g. Checkboxes  -->
									<VisualState x:Name="Left">
										<VisualState.StateTriggers>
											<wcttriggers:IsEqualStateTrigger Value="{Binding ContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" To="Left" />
										</VisualState.StateTriggers>
										<VisualState.Setters>
											<Setter Target="HeaderIconPresenterHolder.Visibility" Value="Collapsed" />
											<Setter Target="DescriptionPresenter.Visibility" Value="Collapsed" />
											<Setter Target="HeaderPresenter.Visibility" Value="Collapsed" />
											<Setter Target="ContentPresenter.(Grid.Row)" Value="1" />
											<Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
											<Setter Target="ContentPresenter.HorizontalAlignment" Value="Left" />
										</VisualState.Setters>
									</VisualState>

									<!--  Similiar to Left, but the HeaderIcon/Header/Description is visible  -->
									<VisualState x:Name="Vertical">
										<VisualState.StateTriggers>
											<wcttriggers:IsEqualStateTrigger Value="{Binding ContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" To="Vertical" />
										</VisualState.StateTriggers>
										<VisualState.Setters>
											<Setter Target="ContentPresenter.(Grid.Row)" Value="1" />
											<Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
											<Setter Target="ContentPresenter.HorizontalAlignment" Value="Stretch" />
											<Setter Target="ContentPresenter.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
											<Setter Target="ContentPresenter.Margin" Value="{ThemeResource SettingsCardVerticalHeaderContentSpacing}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<!--  Collapsing the Content presenter whenever it's empty  -->
								<VisualStateGroup x:Name="ContentVisibilityStates">
									<VisualState x:Name="Visible" />
									<VisualState x:Name="Collapsed">
										<VisualState.StateTriggers>
											<wcttriggers:IsNullOrEmptyStateTrigger Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
										</VisualState.StateTriggers>
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<Style
		x:Key="RightAlignedCompactToggleSwitchStyle"
		BasedOn="{StaticResource DefaultToggleSwitchStyle}"
		TargetType="ToggleSwitch">
		<Style.Setters>
			<Setter Property="MinWidth" Value="0" />
			<Setter Property="Height" Value="36" />
			<Setter Property="HorizontalContentAlignment" Value="Right" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleSwitch">
						<Grid
							VerticalAlignment="Stretch"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Control.IsTemplateFocusTarget="True"
							CornerRadius="{TemplateBinding CornerRadius}">
							<ContentPresenter
								x:Name="HeaderContentPresenter"
								Grid.Row="0"
								Margin="{ThemeResource ToggleSwitchTopHeaderMargin}"
								VerticalAlignment="Top"
								win:AutomationProperties.AccessibilityView="Raw"
								x:DeferLoadStrategy="Lazy"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}"
								Foreground="{ThemeResource ToggleSwitchHeaderForeground}"
								IsHitTestVisible="False"
								TextWrapping="Wrap"
								Visibility="Collapsed" />
							<Grid
								Grid.Row="1"
								HorizontalAlignment="Right"
								VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="12" MaxWidth="12" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid
									x:Name="SwitchAreaGrid"
									Grid.RowSpan="3"
									Grid.ColumnSpan="3"
									Margin="0,5"
									Background="{ThemeResource ToggleSwitchContainerBackground}"
									CornerRadius="{TemplateBinding CornerRadius}" />
								<ContentPresenter
									x:Name="OffContentPresenter"
									Grid.RowSpan="3"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									win:AutomationProperties.AccessibilityView="Raw"
									Content="{TemplateBinding OffContent}"
									ContentTemplate="{TemplateBinding OffContentTemplate}"
									Foreground="{TemplateBinding Foreground}"
									IsHitTestVisible="False"
									Opacity="0" />
								<ContentPresenter
									x:Name="OnContentPresenter"
									Grid.RowSpan="3"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									win:AutomationProperties.AccessibilityView="Raw"
									Content="{TemplateBinding OnContent}"
									ContentTemplate="{TemplateBinding OnContentTemplate}"
									Foreground="{TemplateBinding Foreground}"
									IsHitTestVisible="False"
									Opacity="0" />
								<Rectangle
									x:Name="OuterBorder"
									Grid.Row="1"
									Grid.Column="2"
									Width="40"
									Height="20"
									Fill="{ThemeResource ToggleSwitchFillOff}"
									RadiusX="10"
									RadiusY="10"
									Stroke="{ThemeResource ToggleSwitchStrokeOff}"
									StrokeThickness="{ThemeResource ToggleSwitchOuterBorderStrokeThickness}" />
								<Rectangle
									x:Name="SwitchKnobBounds"
									Grid.Row="1"
									Grid.Column="2"
									Width="40"
									Height="20"
									Fill="{ThemeResource ToggleSwitchFillOn}"
									Opacity="0"
									RadiusX="10"
									RadiusY="10"
									Stroke="{ThemeResource ToggleSwitchStrokeOn}"
									StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" />
								<Grid
									x:Name="SwitchKnob"
									Grid.Row="1"
									Grid.Column="2"
									Width="20"
									Height="20"
									HorizontalAlignment="Left">
									<Border
										x:Name="SwitchKnobOn"
										Width="12"
										Height="12"
										Margin="0,0,3,0"
										HorizontalAlignment="Right"
										Background="{ThemeResource ToggleSwitchKnobFillOn}"
										BackgroundSizing="OuterBorderEdge"
										BorderBrush="{ThemeResource ToggleSwitchKnobStrokeOn}"
										CornerRadius="7"
										Opacity="0"
										RenderTransformOrigin="0.5, 0.5">
										<Border.RenderTransform>
											<CompositeTransform />
										</Border.RenderTransform>
									</Border>
									<Rectangle
										x:Name="SwitchKnobOff"
										Width="12"
										Height="12"
										Margin="3,0,0,0"
										HorizontalAlignment="Left"
										Fill="{ThemeResource ToggleSwitchKnobFillOff}"
										RadiusX="7"
										RadiusY="7"
										RenderTransformOrigin="0.5, 0.5">
										<Rectangle.RenderTransform>
											<CompositeTransform />
										</Rectangle.RenderTransform>
									</Rectangle>
									<Grid.RenderTransform>
										<TranslateTransform x:Name="KnobTranslateTransform" />
									</Grid.RenderTransform>
								</Grid>
								<Thumb
									x:Name="SwitchThumb"
									Grid.RowSpan="3"
									Grid.ColumnSpan="3"
									win:AutomationProperties.AccessibilityView="Raw">
									<Thumb.Template>
										<ControlTemplate TargetType="Thumb">
											<Rectangle Fill="Transparent" />
										</ControlTemplate>
									</Thumb.Template>
								</Thumb>
							</Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOff}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOff}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOff}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOn}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOn}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOn}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackground}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffPointerOver}" />
											</ColorAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}" />
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}" />
											</ColorAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="14" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="14" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="14" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="14" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="SwitchKnobOn.HorizontalAlignment" Value="Right" />
											<Setter Target="SwitchKnobOn.Margin" Value="0,0,3,0" />
											<Setter Target="SwitchKnobOff.HorizontalAlignment" Value="Left" />
											<Setter Target="SwitchKnobOff.Margin" Value="3,0,0,0" />
										</VisualState.Setters>
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffPressed}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffPressed}" />
											</ColorAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}" />
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}" />
											</ColorAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="17" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="14" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="17" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlFasterAnimationDuration}"
													Value="14" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffDisabled}" />
											</ColorAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}" />
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}" />
											</ColorAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlNormalAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOn"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlNormalAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Width">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlNormalAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												EnableDependentAnimation="True"
												Storyboard.TargetName="SwitchKnobOff"
												Storyboard.TargetProperty="Height">
												<SplineDoubleKeyFrame
													KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
													KeyTime="{StaticResource ControlNormalAnimationDuration}"
													Value="12" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ToggleStates">
									<VisualStateGroup.Transitions>
										<VisualTransition
											x:Name="DraggingToOnTransition"
											win:GeneratedDuration="0"
											From="Dragging"
											To="On">
											<Storyboard>
												<win:RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}" TargetName="SwitchKnob" />
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualTransition>
										<VisualTransition
											x:Name="OnToDraggingTransition"
											win:GeneratedDuration="0"
											From="On"
											To="Dragging">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="0" Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="0" Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="0" Value="0" />
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualTransition>
										<VisualTransition
											x:Name="DraggingToOffTransition"
											win:GeneratedDuration="0"
											From="Dragging"
											To="Off">
											<Storyboard>
												<win:RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}" TargetName="SwitchKnob" />
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualTransition>
										<VisualTransition
											x:Name="OnToOffTransition"
											win:GeneratedDuration="0"
											From="On"
											To="Off">
											<Storyboard>
												<win:RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}" TargetName="SwitchKnob" />
											</Storyboard>
										</VisualTransition>
										<VisualTransition
											x:Name="OffToOnTransition"
											win:GeneratedDuration="0"
											From="Off"
											To="On">
											<Storyboard>
												<win:RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}" TargetName="SwitchKnob" />
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
													<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Dragging" />
									<VisualState x:Name="Off" />
									<VisualState x:Name="On">
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="KnobTranslateTransform"
												Storyboard.TargetProperty="X"
												To="20"
												Duration="0" />
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
												<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
												<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
												<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
												<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ContentStates">
									<VisualState x:Name="OffContent">
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="OffContentPresenter"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<x:Boolean>True</x:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="OnContent">
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="OnContentPresenter"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<x:Boolean>True</x:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

</ResourceDictionary>
