<!--  Copyright (c) 2024 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<local:BaseTabBar
	x:Class="Files.App.UserControls.TabBar.TabBar"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:local="using:Files.App.UserControls.TabBar"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:root="using:Files.App"
	xmlns:usercontrols="using:Files.App.UserControls"
	mc:Ignorable="d">

	<local:BaseTabBar.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ms-appx:///Styles/TabBarStyles.xaml" />
				<ResourceDictionary>
					<MenuFlyout
						x:Key="TabFlyout"
						x:Name="TabItemContextMenu"
						Closing="TabItemContextMenu_Closing"
						Opening="TabItemContextMenu_Opening">
						<MenuFlyoutItem
							Command="{x:Bind Commands.NewTab}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.NewTab.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.NewTab.Label}" />
						<MenuFlyoutItem
							Command="{x:Bind Commands.DuplicateSelectedTab}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.DuplicateSelectedTab.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.DuplicateSelectedTab.Label}" />
						<MenuFlyoutItem
							x:Name="MenuItemMoveTabToNewWindow"
							Click="MoveTabToNewWindowAsync"
							Text="{helpers:ResourceString Name=HorizontalMultitaskingControlMoveTabToNewWindow/Text}">
							<MenuFlyoutItem.Icon>
								<FontIcon Glyph="&#xE8A7;" />
							</MenuFlyoutItem.Icon>
						</MenuFlyoutItem>
						<MenuFlyoutItem
							Command="{x:Bind Commands.CloseTabsToTheLeftSelected}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.CloseTabsToTheLeftSelected.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.CloseTabsToTheLeftSelected.Label}" />
						<MenuFlyoutItem
							Command="{x:Bind Commands.CloseTabsToTheRightSelected}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.CloseTabsToTheRightSelected.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.CloseTabsToTheRightSelected.Label}" />
						<MenuFlyoutItem
							Command="{x:Bind Commands.CloseOtherTabsSelected}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.CloseOtherTabsSelected.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.CloseOtherTabsSelected.Label}" />
						<MenuFlyoutItem
							Command="{x:Bind Commands.ReopenClosedTab}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.ReopenClosedTab.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.ReopenClosedTab.Label}" />
					</MenuFlyout>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</local:BaseTabBar.Resources>

	<!--  TODO: Use TitleBar of WinAppSdk 1.6 when available  -->
	<Grid
		x:Name="TitlebarArea"
		HorizontalAlignment="Stretch"
		x:FieldModifier="public"
		Background="Transparent">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<!--  Header Button  -->
		<Border BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="0,0,0,1">
			<Button
				Width="30"
				Height="30"
				Margin="4,0,-4,0"
				Padding="0"
				VerticalAlignment="Bottom"
				AutomationProperties.Name="{helpers:ResourceString Name=TabActions}"
				Background="Transparent"
				BorderThickness="0"
				ToolTipService.ToolTip="{helpers:ResourceString Name=TabActions}">
				<PathIcon Data="M3 0C1.34315 0 0 1.34315 0 3V12C0 13.6569 1.34315 15 3 15H12C13.6569 15 15 13.6569 15 12V3C15 1.34315 13.6569 0 12 0H3ZM1 3C1 1.89543 1.89543 1 3 1H12C13.1046 1 14 1.89543 14 3V4H5.5C4.67157 4 4 4.67157 4 5.5V14H3C1.89543 14 1 13.1046 1 12V3ZM5 14H12C13.1046 14 14 13.1046 14 12V5H5.5C5.22386 5 5 5.22386 5 5.5V14Z" Foreground="{ThemeResource App.Theme.IconBaseBrush}" />

				<Button.Flyout>
					<MenuFlyout Placement="BottomEdgeAlignedLeft">
						<!--  New Window  -->
						<usercontrols:MenuFlyoutItemWithOpacityIcon
							Command="{x:Bind Commands.NewWindow}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.NewWindow.HotKeyText, Mode=OneWay}"
							OpacityStyle="{x:Bind Commands.NewWindow.OpacityStyle}"
							Text="{x:Bind Commands.NewWindow.Label}" />

						<!--  Enter Compact Overlay  -->
						<usercontrols:MenuFlyoutItemWithOpacityIcon
							x:Name="EnterCompactOverlay"
							x:Load="{x:Bind Commands.EnterCompactOverlay.IsExecutable, Mode=OneWay}"
							Command="{x:Bind Commands.EnterCompactOverlay}"
							OpacityStyle="{x:Bind Commands.EnterCompactOverlay.OpacityStyle}"
							Text="{x:Bind Commands.EnterCompactOverlay.Label}" />

						<!--  Exit Compact Overlay  -->
						<usercontrols:MenuFlyoutItemWithOpacityIcon
							x:Name="ExitCompactOverlay"
							x:Load="{x:Bind Commands.ExitCompactOverlay.IsExecutable, Mode=OneWay}"
							Command="{x:Bind Commands.ExitCompactOverlay}"
							OpacityStyle="{x:Bind Commands.ExitCompactOverlay.OpacityStyle}"
							Text="{x:Bind Commands.ExitCompactOverlay.Label}" />

						<!--  Open New Pane  -->
						<usercontrols:MenuFlyoutItemWithOpacityIcon
							x:Name="NewPane"
							x:Load="{x:Bind Commands.OpenNewPane.IsExecutable, Mode=OneWay}"
							Command="{x:Bind Commands.OpenNewPane, Mode=OneWay}"
							OpacityStyle="{x:Bind Commands.OpenNewPane.OpacityStyle}"
							Text="{x:Bind Commands.OpenNewPane.Label}" />

						<!--  Close active pane  -->
						<usercontrols:MenuFlyoutItemWithOpacityIcon
							x:Name="CloseActivePane"
							x:Load="{x:Bind Commands.CloseActivePane.IsExecutable, Mode=OneWay}"
							Command="{x:Bind Commands.CloseActivePane}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.CloseActivePane.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.CloseActivePane.Label}">
							<MenuFlyoutItem.Icon>
								<FontIcon Foreground="{ThemeResource App.Theme.IconBaseBrush}" Glyph="{x:Bind Commands.CloseActivePane.Glyph.BaseGlyph}" />
							</MenuFlyoutItem.Icon>
						</usercontrols:MenuFlyoutItemWithOpacityIcon>
					</MenuFlyout>
				</Button.Flyout>
			</Button>
		</Border>

		<!--  TabBar + Draggable Right Padding  -->
		<TabView
			x:Name="HorizontalTabView"
			Grid.Column="1"
			Margin="0,10,0,0"
			Padding="0"
			VerticalAlignment="Stretch"
			AllowDropTabs="True"
			CanDragTabs="{x:Bind AllowTabsDrag, Mode=OneWay}"
			CanReorderTabs="{x:Bind AllowTabsDrag, Mode=OneWay}"
			DragLeave="TabView_DragLeave"
			IsAddTabButtonVisible="False"
			PointerWheelChanged="TabView_PointerWheelChanged"
			SelectedIndex="{x:Bind root:App.AppModel.TabStripSelectedIndex, Mode=TwoWay}"
			SelectionChanged="TabView_SelectionChanged"
			TabCloseRequested="TabView_TabCloseRequested"
			TabDragCompleted="TabView_TabDragCompleted"
			TabDragStarting="TabView_TabDragStarting"
			TabDroppedOutside="TabView_TabDroppedOutside"
			TabItemsChanged="TabView_TabItemsChanged"
			TabItemsSource="{x:Bind Items, Mode=OneWay}"
			TabStripDragOver="TabView_TabStripDragOver"
			TabStripDrop="TabView_TabStripDrop">

			<!--  Item Template  -->
			<TabView.TabItemTemplate>
				<DataTemplate x:DataType="local:TabBarItem">
					<TabViewItem
						AllowDrop="{x:Bind AllowStorageItemDrop, Mode=OneWay}"
						ContextFlyout="{StaticResource TabFlyout}"
						DragEnter="TabViewItem_DragEnter"
						DragLeave="TabViewItem_DragLeave"
						Drop="TabViewItem_Drop"
						Header="{x:Bind Header, Mode=OneWay}"
						IconSource="{x:Bind IconSource, Mode=OneWay}"
						Loaded="TabViewItem_Loaded"
						Style="{StaticResource TabBarItemStyle}"
						ToolTipService.ToolTip="{x:Bind ToolTipText, Mode=OneWay}" />
				</DataTemplate>
			</TabView.TabItemTemplate>

			<!--  TabStrip Footer  -->
			<TabView.TabStripFooter>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition x:Name="RightPaddingColumn" Width="0" />
					</Grid.ColumnDefinitions>

					<!--  Height is not divisble by four in order to properly align the button  -->
					<Button
						x:Name="TabBarAddNewTabButton"
						Grid.Column="0"
						Width="30"
						Height="30"
						Padding="8"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						AllowDrop="True"
						AutomationProperties.Name="{x:Bind Commands.NewTab.AutomationName}"
						Background="Transparent"
						BorderThickness="0"
						Command="{x:Bind Commands.NewTab}"
						DragOver="TabBarAddNewTabButton_DragOver"
						Drop="TabBarAddNewTabButton_Drop"
						ToolTipService.ToolTip="{x:Bind Commands.NewTab.LabelWithHotKey, Mode=OneWay}">
						<Button.Content>
							<FontIcon FontSize="12" Glyph="&#xE710;" />
						</Button.Content>
					</Button>

					<!--  Left Side Drag Area  -->
					<Rectangle
						x:Name="DragAreaRectangle"
						Grid.Column="1"
						Grid.ColumnSpan="2"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Fill="Transparent" />

				</Grid>
			</TabView.TabStripFooter>

		</TabView>
	</Grid>

</local:BaseTabBar>
