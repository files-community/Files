<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<UserControl
	x:Class="Files.App.UserControls.InnerNavigationToolbar"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)"
	xmlns:converters="using:Files.App.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
	xmlns:local="using:Files.App.UserControls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:wctconverters="using:CommunityToolkit.WinUI.UI.Converters"
	d:DesignHeight="40"
	d:DesignWidth="400"
	DataContext="{x:Bind ViewModel, Mode=OneWay}"
	mc:Ignorable="d">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ms-appx:///ResourceDictionaries/ToolbarButtonStyle.xaml" />
				<ResourceDictionary Source="ms-appx:///ResourceDictionaries/RightAlignedToggleSwitchStyle.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
			<SolidColorBrush x:Key="CommandBarBorderBrushOpen" Color="Transparent" />

			<wctconverters:BoolNegationConverter x:Key="BoolNegationConverter" />
			<wctconverters:BoolToVisibilityConverter
				x:Key="NegatedBoolToVisibilityConverter"
				FalseValue="Visible"
				TrueValue="Collapsed" />

			<x:Boolean x:Key="True">True</x:Boolean>
			<x:Boolean x:Key="False">False</x:Boolean>

		</ResourceDictionary>
	</UserControl.Resources>

	<Grid
		x:Name="RootGrid"
		BorderBrush="{ThemeResource DividerStrokeColorDefaultBrush}"
		BorderThickness="0,0,0,1">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>

		<!--  Context Commands  -->
		<CommandBar
			x:Name="ContextCommandBar"
			Grid.Column="0"
			HorizontalAlignment="Left"
			DefaultLabelPosition="Right">
			<CommandBar.PrimaryCommands>

				<!--  New Item  -->
				<AppBarButton
					x:Name="NewEmptySpaceAppBarButton"
					AccessKey="W"
					AutomationProperties.AutomationId="InnerNavigationToolbarNewButton"
					IsEnabled="{x:Bind Commands.AddItem.IsExecutable, Mode=OneWay, FallbackValue=False}"
					KeyboardAcceleratorTextOverride="{x:Bind Commands.AddItem.HotKeyText, Mode=OneWay}"
					Label="{x:Bind Commands.AddItem.Label}"
					Style="{StaticResource ToolBarAppBarButtonFlyoutStyle}">
					<local:OpacityIcon Style="{x:Bind Commands.AddItem.OpacityStyle}" />

					<AppBarButton.Flyout>
						<MenuFlyout x:Name="NewEmptySpace" Opening="NewEmptySpace_Opening">
							<MenuFlyoutItem
								x:Name="ToolbarNewFolderItem"
								AccessKey="D"
								AutomationProperties.AutomationId="InnerNavigationToolbarNewFolderButton"
								Command="{x:Bind Commands.CreateFolder, Mode=OneWay}"
								KeyboardAcceleratorTextOverride="{x:Bind Commands.CreateFolder.HotKeyText, Mode=OneWay}"
								Text="{x:Bind Commands.CreateFolder.Label}">
								<MenuFlyoutItem.Icon>
									<FontIcon Glyph="&#xE8B7;" />
								</MenuFlyoutItem.Icon>
							</MenuFlyoutItem>
							<MenuFlyoutItem
								x:Name="NewFile"
								AccessKey="F"
								AutomationProperties.AutomationId="File"
								Command="{x:Bind ViewModel.CreateNewFileCommand, Mode=OneWay}"
								CommandParameter="{x:Null}"
								IsEnabled="{x:Bind ViewModel.InstanceViewModel.CanCreateFileInPage, Mode=OneWay}"
								Text="{helpers:ResourceString Name=File}">
								<MenuFlyoutItem.Icon>
									<FontIcon Glyph="&#xE7C3;" />
								</MenuFlyoutItem.Icon>
							</MenuFlyoutItem>
							<MenuFlyoutItem
								x:Name="NewShortcut"
								AccessKey="S"
								AutomationProperties.AutomationId="InnerNavigationToolbarNewShortcutButton"
								Command="{x:Bind Commands.CreateShortcutFromDialog, Mode=OneWay}"
								KeyboardAcceleratorTextOverride="{x:Bind Commands.CreateShortcutFromDialog.HotKeyText, Mode=OneWay}"
								Text="{x:Bind Commands.CreateShortcutFromDialog.Label}">
								<MenuFlyoutItem.Icon>
									<FontIcon Glyph="&#xE71B;" />
								</MenuFlyoutItem.Icon>
							</MenuFlyoutItem>
							<MenuFlyoutSeparator x:Name="NewMenuFileFolderSeparator" />
						</MenuFlyout>
					</AppBarButton.Flyout>

				</AppBarButton>

				<!--  (Divider)  -->
				<AppBarSeparator />

				<!--  Cut  -->
				<AppBarButton
					x:Name="CutButton"
					Width="Auto"
					MinWidth="40"
					AccessKey="X"
					AutomationProperties.AutomationId="InnerNavigationToolbarCutButton"
					Command="{x:Bind Commands.CutItem}"
					Label="{x:Bind Commands.CutItem.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind Commands.CutItem.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.CutItem.OpacityStyle}" />
				</AppBarButton>

				<!--  Copy  -->
				<AppBarButton
					x:Name="CopyButton"
					Width="Auto"
					MinWidth="40"
					AccessKey="C"
					AutomationProperties.AutomationId="InnerNavigationToolbarCopyButton"
					Command="{x:Bind Commands.CopyItem}"
					Label="{x:Bind Commands.CopyItem.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind Commands.CopyItem.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.CopyItem.OpacityStyle}" />
				</AppBarButton>

				<!--  Paste  -->
				<AppBarButton
					x:Name="PasteButton"
					Width="Auto"
					MinWidth="40"
					AccessKey="V"
					AutomationProperties.AutomationId="InnerNavigationToolbarPasteButton"
					Command="{x:Bind ModifiableCommands.PasteItem}"
					Label="{x:Bind ModifiableCommands.PasteItem.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind ModifiableCommands.PasteItem.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind ModifiableCommands.PasteItem.OpacityStyle}" />
				</AppBarButton>

				<!--  Rename  -->
				<AppBarButton
					x:Name="RenameButton"
					Width="Auto"
					MinWidth="40"
					AccessKey="M"
					AutomationProperties.AutomationId="InnerNavigationToolbarRenameButton"
					Command="{x:Bind Commands.Rename, Mode=OneWay}"
					IsEnabled="{x:Bind Commands.Rename.IsExecutable, Mode=OneWay}"
					Label="{x:Bind Commands.Rename.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind Commands.Rename.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.Rename.OpacityStyle}" />
				</AppBarButton>

				<!--  Share  -->
				<AppBarButton
					x:Name="ShareButton"
					Width="Auto"
					MinWidth="40"
					AccessKey="H"
					Command="{x:Bind Commands.ShareItem, Mode=OneWay}"
					IsEnabled="{x:Bind Commands.ShareItem.IsExecutable, Mode=OneWay, FallbackValue=False}"
					Label="{x:Bind Commands.ShareItem.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind Commands.ShareItem.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.ShareItem.OpacityStyle}" />
				</AppBarButton>

				<!--  Delete  -->
				<AppBarButton
					x:Name="DeleteButton"
					Width="Auto"
					MinWidth="40"
					AutomationProperties.AutomationId="InnerNavigationToolbarDeleteButton"
					Command="{x:Bind ModifiableCommands.DeleteItem}"
					Label="{x:Bind ModifiableCommands.DeleteItem.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind ModifiableCommands.DeleteItem.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind ModifiableCommands.DeleteItem.OpacityStyle}" />
				</AppBarButton>

				<!--  Properties  -->
				<AppBarButton
					x:Name="PropertiesButton"
					Width="Auto"
					MinWidth="40"
					AccessKey="O"
					AutomationProperties.AutomationId="InnerNavigationToolbarPropertiesButton"
					Command="{x:Bind Commands.OpenProperties, Mode=OneWay}"
					IsEnabled="{x:Bind Commands.OpenProperties.IsExecutable, Mode=OneWay}"
					KeyboardAcceleratorTextOverride="{x:Bind Commands.OpenProperties.HotKeyText, Mode=OneWay}"
					Label="{x:Bind Commands.OpenProperties.Label}"
					LabelPosition="Collapsed"
					ToolTipService.ToolTip="{x:Bind Commands.OpenProperties.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.OpenProperties.OpacityStyle, Mode=OneTime}" />
				</AppBarButton>

				<!--  (Divider)  -->
				<AppBarSeparator x:Name="AdditionalActionSeparator" x:Load="{x:Bind ViewModel.HasAdditionalAction, Mode=OneWay}" />

				<!--  Empty Recycle Bin  -->
				<AppBarButton
					x:Name="EmptyRecycleBinButton"
					x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay, FallbackValue=False}"
					AccessKey="B"
					Command="{x:Bind Commands.EmptyRecycleBin}"
					Label="{x:Bind Commands.EmptyRecycleBin.Label}"
					ToolTipService.ToolTip="{x:Bind Commands.EmptyRecycleBin.Label}">
					<local:OpacityIcon Style="{x:Bind Commands.EmptyRecycleBin.OpacityStyle}" />
				</AppBarButton>

				<!--  Restore All Recycle Bin  -->
				<AppBarButton
					x:Name="RestoreAllRecycleBinButton"
					x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay, FallbackValue=False}"
					AccessKey="R"
					Command="{x:Bind Commands.RestoreAllRecycleBin}"
					Label="{x:Bind Commands.RestoreAllRecycleBin.Label}"
					ToolTipService.ToolTip="{x:Bind Commands.RestoreAllRecycleBin.Label}"
					Visibility="{x:Bind Commands.RestoreRecycleBin.IsExecutable, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
					<local:OpacityIcon Style="{x:Bind Commands.RestoreAllRecycleBin.OpacityStyle}" />
				</AppBarButton>

				<!--  Restore Recycle Bin  -->
				<AppBarButton
					x:Name="RestoreRecycleBinButton"
					x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay, FallbackValue=False}"
					AccessKey="R"
					Command="{x:Bind Commands.RestoreRecycleBin}"
					Label="{x:Bind Commands.RestoreRecycleBin.Label}"
					ToolTipService.ToolTip="{x:Bind Commands.RestoreRecycleBin.Label}"
					Visibility="{x:Bind Commands.RestoreRecycleBin.IsExecutable, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.RestoreRecycleBin.OpacityStyle}" />
				</AppBarButton>

				<!--  Extract  -->
				<AppBarButton
					x:Name="ExtractButton"
					Width="Auto"
					MinWidth="40"
					x:Load="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
					AccessKey="Z"
					IsEnabled="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
					Label="{helpers:ResourceString Name=Extract}"
					LabelPosition="Default"
					Style="{StaticResource ToolBarAppBarButtonFlyoutStyle}">

					<local:OpacityIcon Style="{StaticResource ColorIconZip}" />

					<AppBarButton.Flyout>
						<MenuFlyout helpers:MenuFlyoutHelper.IsVisible="{x:Bind ViewModel.CanExtract, Mode=OneWay}" Placement="Bottom">
							<MenuFlyoutItem
								x:Name="ExtractSingle"
								Command="{x:Bind Commands.DecompressArchive, Mode=OneWay}"
								IsEnabled="{x:Bind ViewModel.CanExtract, Mode=OneWay, FallbackValue=False}"
								KeyboardAcceleratorTextOverride="{x:Bind Commands.DecompressArchive.HotKeyText, Mode=OneWay}"
								Text="{x:Bind Commands.DecompressArchive.Label}"
								Visibility="{x:Bind ViewModel.IsMultipleArchivesSelected, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
							<MenuFlyoutItem
								x:Name="ExtractHereSmart"
								Command="{x:Bind Commands.DecompressArchiveHereSmart, Mode=OneWay}"
								IsEnabled="{x:Bind ViewModel.IsSelectionArchivesOnly, Mode=OneWay, FallbackValue=False}"
								KeyboardAcceleratorTextOverride="{x:Bind Commands.DecompressArchiveHereSmart.HotKeyText, Mode=OneWay}"
								Text="{x:Bind Commands.DecompressArchiveHereSmart.Label}"
								Visibility="{x:Bind ViewModel.IsArchiveOpened, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
							<MenuFlyoutItem
								x:Name="ExtractHere"
								Command="{x:Bind Commands.DecompressArchiveHere, Mode=OneWay}"
								IsEnabled="{x:Bind ViewModel.IsSelectionArchivesOnly, Mode=OneWay, FallbackValue=False}"
								Text="{x:Bind Commands.DecompressArchiveHere.Label}"
								Visibility="{x:Bind ViewModel.IsArchiveOpened, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
							<MenuFlyoutItem
								x:Name="ExtractTo"
								Command="{x:Bind Commands.DecompressArchiveToChildFolder, Mode=OneWay}"
								IsEnabled="{x:Bind ViewModel.IsSelectionArchivesOnly, Mode=OneWay, FallbackValue=False}"
								Text="{x:Bind Commands.DecompressArchiveToChildFolder.Label, Mode=OneWay}"
								Visibility="{x:Bind ViewModel.IsArchiveOpened, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
						</MenuFlyout>
					</AppBarButton.Flyout>

				</AppBarButton>

				<!--  Run With PowerShell  -->
				<AppBarButton
					x:Name="RunWithPowerShellButton"
					Width="Auto"
					MinWidth="40"
					x:Load="{x:Bind Commands.RunWithPowershell.IsExecutable, Mode=OneWay}"
					AutomationProperties.Name="RunWithPowerShell"
					Command="{x:Bind Commands.RunWithPowershell}"
					Label="{x:Bind Commands.RunWithPowershell.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{x:Bind Commands.RunWithPowershell.LabelWithHotKey, Mode=OneWay}">
					<AppBarButton.Icon>
						<FontIcon Glyph="{x:Bind Commands.RunWithPowershell.Glyph.BaseGlyph}" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!--  Set As Background  -->
				<AppBarButton
					x:Name="SetAsBackgroundButton"
					Width="Auto"
					MinWidth="40"
					x:Load="{x:Bind Commands.SetAsWallpaperBackground.IsExecutable, Mode=OneWay}"
					Label="{helpers:ResourceString Name=SetAsBackgroundFlyout}"
					LabelPosition="Default"
					Style="{StaticResource ToolBarAppBarButtonFlyoutStyle}"
					ToolTipService.ToolTip="{helpers:ResourceString Name=SetAsBackgroundFlyout}">

					<local:OpacityIcon Style="{StaticResource ColorIconSetAsBackground}" />

					<AppBarButton.Flyout>
						<MenuFlyout Placement="Bottom">
							<MenuFlyoutItem
								x:Name="SetAsBackgroundFlyoutItem"
								Command="{x:Bind Commands.SetAsWallpaperBackground}"
								KeyboardAcceleratorTextOverride="{x:Bind Commands.SetAsWallpaperBackground.HotKeyText, Mode=OneWay}"
								Text="{helpers:ResourceString Name=Desktop}">
								<MenuFlyoutItem.Icon>
									<FontIcon Glyph="{x:Bind Commands.SetAsWallpaperBackground.Glyph.BaseGlyph}" />
								</MenuFlyoutItem.Icon>
							</MenuFlyoutItem>
							<MenuFlyoutItem
								x:Name="SetAsLockscreenFlyoutItem"
								Command="{x:Bind Commands.SetAsLockscreenBackground}"
								KeyboardAcceleratorTextOverride="{x:Bind Commands.SetAsLockscreenBackground.HotKeyText, Mode=OneWay}"
								Text="{helpers:ResourceString Name=Lockscreen}">
								<MenuFlyoutItem.Icon>
									<FontIcon Glyph="{x:Bind Commands.SetAsLockscreenBackground.Glyph.BaseGlyph}" />
								</MenuFlyoutItem.Icon>
							</MenuFlyoutItem>
						</MenuFlyout>
					</AppBarButton.Flyout>

				</AppBarButton>

				<!--  Set As Slideshow  -->
				<AppBarButton
					x:Name="SetAsSlideshowButton"
					Width="Auto"
					MinWidth="40"
					x:Load="{x:Bind Commands.SetAsSlideshowBackground.IsExecutable, Mode=OneWay}"
					Command="{x:Bind Commands.SetAsSlideshowBackground}"
					Icon="{x:Bind Commands.SetAsSlideshowBackground.FontIcon}"
					Label="{x:Bind Commands.SetAsSlideshowBackground.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{x:Bind Commands.SetAsSlideshowBackground.LabelWithHotKey, Mode=OneWay}" />

				<!--  Install Inf  -->
				<AppBarButton
					x:Name="InstallInfButton"
					x:Load="{x:Bind Commands.InstallInfDriver.IsExecutable, Mode=OneWay, FallbackValue=False}"
					Command="{x:Bind Commands.InstallInfDriver, Mode=OneWay}"
					Label="{x:Bind Commands.InstallInfDriver.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{helpers:ResourceString Name=Install}">
					<AppBarButton.Icon>
						<FontIcon Glyph="{x:Bind Commands.InstallInfDriver.Glyph.BaseGlyph}" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!--  Rotate Image Left  -->
				<AppBarButton
					x:Name="RotateImageLeftButton"
					x:Load="{x:Bind ViewModel.IsImage, Mode=OneWay, FallbackValue=False}"
					Command="{x:Bind Commands.RotateLeft, Mode=OneWay}"
					Label="{x:Bind Commands.RotateLeft.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{helpers:ResourceString Name=RotateLeft}">
					<local:OpacityIcon Style="{StaticResource ColorIconRotateLeft}" />
				</AppBarButton>

				<!--  Rotate Image Right  -->
				<AppBarButton
					x:Name="RotateImageRightButton"
					x:Load="{x:Bind ViewModel.IsImage, Mode=OneWay, FallbackValue=False}"
					Command="{x:Bind Commands.RotateRight, Mode=OneWay}"
					Label="{x:Bind Commands.RotateRight.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{helpers:ResourceString Name=RotateRight}">
					<local:OpacityIcon Style="{StaticResource ColorIconRotateRight}" />
				</AppBarButton>

				<!--  Install Font  -->
				<AppBarButton
					x:Name="InstallFontButton"
					x:Load="{x:Bind Commands.InstallFont.IsExecutable, Mode=OneWay, FallbackValue=False}"
					Command="{x:Bind Commands.InstallFont, Mode=OneWay}"
					Label="{x:Bind Commands.InstallFont.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{helpers:ResourceString Name=Install}">
					<AppBarButton.Icon>
						<FontIcon Glyph="{x:Bind Commands.InstallFont.Glyph.BaseGlyph, Mode=OneTime}" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!--  Install Certificate  -->
				<AppBarButton
					x:Name="InstallCertificateButton"
					x:Load="{x:Bind Commands.InstallCertificate.IsExecutable, Mode=OneWay, FallbackValue=False}"
					Command="{x:Bind Commands.InstallCertificate, Mode=OneWay}"
					Label="{x:Bind Commands.InstallCertificate.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{helpers:ResourceString Name=Install}">
					<AppBarButton.Icon>
						<FontIcon Glyph="{x:Bind Commands.InstallCertificate.Glyph.BaseGlyph, Mode=OneTime}" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!--  Play All Media  -->
				<AppBarButton
					x:Name="PlayAllMediaButton"
					x:Load="{x:Bind Commands.PlayAll.IsExecutable, Mode=OneWay, FallbackValue=False}"
					Command="{x:Bind Commands.PlayAll, Mode=OneWay}"
					KeyboardAcceleratorTextOverride="{x:Bind Commands.PlayAll.HotKeyText, Mode=OneWay}"
					Label="{x:Bind Commands.PlayAll.Label}"
					LabelPosition="Default"
					ToolTipService.ToolTip="{x:Bind Commands.PlayAll.LabelWithHotKey, Mode=OneWay}">
					<AppBarButton.Icon>
						<FontIcon Glyph="{x:Bind Commands.PlayAll.Glyph.BaseGlyph}" />
					</AppBarButton.Icon>
				</AppBarButton>

			</CommandBar.PrimaryCommands>
		</CommandBar>

		<!--  Base Commands  -->
		<CommandBar
			x:Name="BaseCommandBar"
			Grid.Column="1"
			DefaultLabelPosition="Right">

			<!--  Selection Commands  -->
			<AppBarButton
				x:Name="SelectionOptions"
				Width="Auto"
				MinWidth="40"
				x:Load="{x:Bind ShowViewControlButton, Mode=OneWay}"
				AccessKey="S"
				AutomationProperties.Name="{helpers:ResourceString Name=SelectionOptions}"
				Label="{helpers:ResourceString Name=NavToolbarSelectionOptions/Label}"
				LabelPosition="Collapsed"
				Style="{StaticResource ToolBarAppBarButtonFlyoutStyle}"
				ToolTipService.ToolTip="{helpers:ResourceString Name=SelectionOptions}">

				<local:OpacityIcon Style="{StaticResource ColorIconSelection}" />

				<AppBarButton.Flyout>
					<MenuFlyout Placement="Bottom">
						<MenuFlyoutItem
							x:Name="SelectAllMFI"
							AccessKey="A"
							Command="{x:Bind Commands.SelectAll}"
							Icon="{x:Bind Commands.SelectAll.FontIcon}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.SelectAll.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.SelectAll.Label}" />
						<MenuFlyoutItem
							x:Name="InvertSelectionMFI"
							AccessKey="I"
							Command="{x:Bind Commands.InvertSelection}"
							Icon="{x:Bind Commands.InvertSelection.FontIcon}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.InvertSelection.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.InvertSelection.Label}" />
						<MenuFlyoutItem
							x:Name="ClearSelectionMFI"
							AccessKey="C"
							Command="{x:Bind Commands.ClearSelection}"
							Icon="{x:Bind Commands.ClearSelection.FontIcon}"
							KeyboardAcceleratorTextOverride="{x:Bind Commands.ClearSelection.HotKeyText, Mode=OneWay}"
							Text="{x:Bind Commands.ClearSelection.Label}" />
					</MenuFlyout>
				</AppBarButton.Flyout>

			</AppBarButton>

			<!--  Sort Commands  -->
			<AppBarButton
				x:Name="ArrangementOptions"
				Width="Auto"
				MinWidth="40"
				x:Load="{x:Bind ShowViewControlButton, Mode=OneWay}"
				AccessKey="A"
				AutomationProperties.Name="{helpers:ResourceString Name=Sort}"
				Label="{helpers:ResourceString Name=Sort}"
				LabelPosition="Collapsed"
				Style="{StaticResource ToolBarAppBarButtonFlyoutStyle}"
				ToolTipService.ToolTip="{helpers:ResourceString Name=Sort}">

				<local:OpacityIcon Style="{StaticResource ColorIconSort}" />

				<AppBarButton.Flyout>
					<MenuFlyout contract8Present:ShouldConstrainToRootBounds="False" Placement="Bottom">
						<MenuFlyoutSubItem
							AccessKey="S"
							AccessKeyInvoked="SortGroup_AccessKeyInvoked"
							Text="{helpers:ResourceString Name=SortBy}">
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortByName.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortByName.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortByDateModified.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortByDateModified.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortByDateCreated.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortByDateCreated.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortBySize.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortBySize.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortByType.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortByType.Label}" />
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.SortBySyncStatus.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.SortBySyncStatus.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.SortBySyncStatus.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortByTag.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortByTag.Label}" />
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.SortByPath.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.SortByPath.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.SortByPath.Label}" />
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.SortByOriginalFolder.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.SortByOriginalFolder.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.SortByOriginalFolder.Label}" />
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.SortByDateDeleted.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.SortByDateDeleted.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.SortByDateDeleted.Label}" />
							<MenuFlyoutSeparator />
							<ToggleMenuFlyoutItem
								AccessKey="A"
								IsChecked="{x:Bind Commands.SortAscending.IsOn, Mode=TwoWay}"
								Text="{x:Bind Commands.SortAscending.Label}" />
							<ToggleMenuFlyoutItem
								AccessKey="D"
								IsChecked="{x:Bind Commands.SortDescending.IsOn, Mode=TwoWay}"
								Text="{x:Bind Commands.SortDescending.Label}" />
						</MenuFlyoutSubItem>
						<MenuFlyoutSubItem
							AccessKey="G"
							AccessKeyInvoked="SortGroup_AccessKeyInvoked"
							Text="{helpers:ResourceString Name=GroupBy}">
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByNone.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByNone.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByName.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByName.Label}" />
							<MenuFlyoutSubItem Text="{x:Bind Commands.GroupByDateModified.Label}">
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateModifiedYear.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateModifiedYear.Label}" />
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateModifiedMonth.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateModifiedMonth.Label}" />
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateModifiedDay.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateModifiedDay.Label}" />
							</MenuFlyoutSubItem>
							<MenuFlyoutSubItem Text="{x:Bind Commands.GroupByDateCreated.Label}">
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateCreatedYear.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateCreatedYear.Label}" />
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateCreatedMonth.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateCreatedMonth.Label}" />
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateCreatedDay.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateCreatedDay.Label}" />
							</MenuFlyoutSubItem>
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupBySize.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupBySize.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByType.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByType.Label}" />
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.GroupBySyncStatus.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.GroupBySyncStatus.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.GroupBySyncStatus.Label}" />
							<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByTag.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByTag.Label}" />
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.GroupByOriginalFolder.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.GroupByOriginalFolder.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.GroupByOriginalFolder.Label}" />
							<MenuFlyoutSubItem IsEnabled="{x:Bind Commands.GroupByDateDeleted.IsExecutable, Mode=OneWay}" Text="{x:Bind Commands.GroupByDateDeleted.Label}">
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateDeletedYear.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateDeletedYear.Label}" />
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateDeletedMonth.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateDeletedMonth.Label}" />
								<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.GroupByDateDeletedDay.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.GroupByDateDeletedDay.Label}" />
							</MenuFlyoutSubItem>
							<ToggleMenuFlyoutItem
								IsChecked="{x:Bind Commands.GroupByFolderPath.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.GroupByFolderPath.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.GroupByFolderPath.Label}" />
							<MenuFlyoutSeparator />
							<ToggleMenuFlyoutItem
								AccessKey="A"
								IsChecked="{x:Bind Commands.GroupAscending.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.GroupAscending.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.GroupAscending.Label}" />
							<ToggleMenuFlyoutItem
								AccessKey="D"
								IsChecked="{x:Bind Commands.GroupDescending.IsOn, Mode=TwoWay}"
								IsEnabled="{x:Bind Commands.GroupDescending.IsExecutable, Mode=OneWay}"
								Text="{x:Bind Commands.GroupDescending.Label}" />
						</MenuFlyoutSubItem>
						<MenuFlyoutSeparator />
						<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortFoldersFirst.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortFoldersFirst.Label}" />
						<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortFilesFirst.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortFilesFirst.Label}" />
						<ToggleMenuFlyoutItem IsChecked="{x:Bind Commands.SortFilesAndFoldersTogether.IsOn, Mode=TwoWay}" Text="{x:Bind Commands.SortFilesAndFoldersTogether.Label}" />
					</MenuFlyout>
				</AppBarButton.Flyout>

			</AppBarButton>

			<!--  Layout Commands  -->
			<AppBarButton
				x:Name="LayoutOptionsButton"
				Width="Auto"
				MinWidth="40"
				x:Load="{x:Bind ShowViewControlButton, Mode=OneWay}"
				AccessKey="L"
				AutomationProperties.Name="{helpers:ResourceString Name=Layout}"
				Label="{helpers:ResourceString Name=Layout}"
				LabelPosition="Collapsed"
				Style="{StaticResource ToolBarAppBarButtonFlyoutStyle}"
				ToolTipService.ToolTip="{helpers:ResourceString Name=Layout}">

				<local:OpacityIcon Style="{x:Bind ViewModel.LayoutOpacityIcon, Mode=OneWay}" />

				<AppBarButton.Flyout>
					<Flyout contract8Present:ShouldConstrainToRootBounds="False" Placement="Bottom">
						<StackPanel Spacing="12">

							<!--  Header  -->
							<TextBlock FontWeight="Medium" Text="{helpers:ResourceString Name=Layout}" />

							<!--  Layout Options  -->
							<Grid ColumnSpacing="8" RowSpacing="8">
								<Grid.RowDefinitions>
									<RowDefinition MinHeight="30" />
									<RowDefinition MinHeight="30" />
									<RowDefinition MinHeight="30" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="40" />
									<ColumnDefinition MaxWidth="100" />
									<ColumnDefinition Width="40" />
									<ColumnDefinition Width="40" />
									<ColumnDefinition MaxWidth="100" />
								</Grid.ColumnDefinitions>

								<!--  Detailsl Layout  -->
								<RadioButton
									Grid.Row="0"
									Grid.Column="0"
									Width="36"
									Height="32"
									MinWidth="0"
									Padding="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									AutomationProperties.Name="{x:Bind Commands.LayoutDetails.AutomationName}"
									Command="{x:Bind Commands.LayoutDetails}"
									CornerRadius="{StaticResource ControlCornerRadius}"
									GroupName="LayoutRadio"
									IsChecked="{x:Bind ViewModel.IsDetailsLayout, Mode=OneWay}"
									Style="{StaticResource DefaultToggleButtonStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutDetails.LabelWithHotKey, Mode=OneWay}">
									<local:OpacityIcon
										Width="16"
										Height="16"
										IsSelected="{x:Bind ViewModel.IsDetailsLayout, Mode=OneWay}"
										Style="{x:Bind Commands.LayoutDetails.OpacityStyle}" />
								</RadioButton>

								<TextBlock
									x:Name="NavToolbarDetailsHeader"
									Grid.Row="0"
									Grid.Column="1"
									VerticalAlignment="Center"
									Tapped="{x:Bind Commands.LayoutDetails.ExecuteTapped}"
									Text="{x:Bind Commands.LayoutDetails.Label}" />

								<!--  Columns Layout  -->
								<RadioButton
									Grid.Row="1"
									Grid.Column="0"
									Width="36"
									Height="32"
									MinWidth="0"
									Padding="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									AutomationProperties.Name="{x:Bind Commands.LayoutColumns.AutomationName}"
									Command="{x:Bind Commands.LayoutColumns}"
									CornerRadius="{StaticResource ControlCornerRadius}"
									GroupName="LayoutRadio"
									IsChecked="{x:Bind ViewModel.IsColumnLayout, Mode=OneWay}"
									Style="{StaticResource DefaultToggleButtonStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutColumns.LabelWithHotKey, Mode=OneWay}">
									<local:OpacityIcon
										Width="16"
										Height="16"
										IsSelected="{x:Bind ViewModel.IsColumnLayout, Mode=OneWay}"
										Style="{x:Bind Commands.LayoutColumns.OpacityStyle}" />
								</RadioButton>

								<TextBlock
									x:Name="NavToolbarColumnsHeader"
									Grid.Row="1"
									Grid.Column="1"
									VerticalAlignment="Center"
									Tapped="{x:Bind Commands.LayoutColumns.ExecuteTapped}"
									Text="{x:Bind Commands.LayoutColumns.Label}" />

								<!--  Tiles Layout  -->
								<RadioButton
									Grid.Row="2"
									Grid.Column="0"
									Width="36"
									Height="32"
									MinWidth="0"
									Padding="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									AutomationProperties.Name="{x:Bind Commands.LayoutTiles.AutomationName}"
									Command="{x:Bind Commands.LayoutTiles}"
									CornerRadius="{StaticResource ControlCornerRadius}"
									GroupName="LayoutRadio"
									IsChecked="{x:Bind ViewModel.IsTilesLayout, Mode=OneWay}"
									Style="{StaticResource DefaultToggleButtonStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutTiles.LabelWithHotKey, Mode=OneWay}">
									<local:OpacityIcon
										Width="16"
										Height="16"
										IsSelected="{x:Bind ViewModel.IsTilesLayout, Mode=OneWay}"
										Style="{x:Bind Commands.LayoutTiles.OpacityStyle}" />
								</RadioButton>

								<TextBlock
									x:Name="NavToolbarTilesHeader"
									Grid.Row="2"
									Grid.Column="1"
									VerticalAlignment="Center"
									Tapped="{x:Bind Commands.LayoutTiles.ExecuteTapped}"
									Text="{x:Bind Commands.LayoutTiles.Label}" />

								<!--  Grid Small Layout  -->
								<RadioButton
									Grid.Row="0"
									Grid.Column="3"
									Width="36"
									Height="32"
									MinWidth="0"
									Padding="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									AutomationProperties.Name="{x:Bind Commands.LayoutGridSmall.AutomationName}"
									Command="{x:Bind Commands.LayoutGridSmall}"
									CornerRadius="{StaticResource ControlCornerRadius}"
									GroupName="LayoutRadio"
									IsChecked="{x:Bind ViewModel.IsGridSmallLayout, Mode=OneWay}"
									Style="{StaticResource DefaultToggleButtonStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutGridSmall.LabelWithHotKey, Mode=OneWay}">
									<local:OpacityIcon
										Width="16"
										Height="16"
										IsSelected="{x:Bind ViewModel.IsGridSmallLayout, Mode=OneWay}"
										Style="{x:Bind Commands.LayoutGridSmall.OpacityStyle}" />
								</RadioButton>

								<TextBlock
									x:Name="NavToolbarSmallIconsHeader"
									Grid.Row="0"
									Grid.Column="4"
									VerticalAlignment="Center"
									Tapped="{x:Bind Commands.LayoutGridSmall.ExecuteTapped}"
									Text="{x:Bind Commands.LayoutGridSmall.Label}" />

								<!--  Grid Medium Layout  -->
								<RadioButton
									Grid.Row="1"
									Grid.Column="3"
									Width="36"
									Height="32"
									MinWidth="0"
									Padding="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									AutomationProperties.Name="{x:Bind Commands.LayoutGridMedium.AutomationName}"
									Command="{x:Bind Commands.LayoutGridMedium}"
									CornerRadius="{StaticResource ControlCornerRadius}"
									GroupName="LayoutRadio"
									IsChecked="{x:Bind ViewModel.IsGridMediumLayout, Mode=OneWay}"
									Style="{StaticResource DefaultToggleButtonStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutGridMedium.LabelWithHotKey, Mode=OneWay}">
									<local:OpacityIcon
										Width="16"
										Height="16"
										IsSelected="{x:Bind ViewModel.IsGridMediumLayout, Mode=OneWay}"
										Style="{x:Bind Commands.LayoutGridMedium.OpacityStyle}" />
								</RadioButton>

								<TextBlock
									x:Name="NavToolbarMediumIconsHeader"
									Grid.Row="1"
									Grid.Column="4"
									VerticalAlignment="Center"
									Tapped="{x:Bind Commands.LayoutGridMedium.ExecuteTapped}"
									Text="{x:Bind Commands.LayoutGridMedium.Label}" />

								<!--  (Divider)  -->
								<Border
									Grid.RowSpan="4"
									Grid.Column="2"
									Height="120"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									BorderBrush="{ThemeResource DividerStrokeColorDefaultBrush}"
									BorderThickness="1" />

								<!--  Grid Large Layout  -->
								<RadioButton
									Grid.Row="2"
									Grid.Column="3"
									Width="36"
									Height="32"
									MinWidth="0"
									Padding="0"
									HorizontalContentAlignment="Center"
									VerticalContentAlignment="Center"
									AutomationProperties.Name="{x:Bind Commands.LayoutGridLarge.AutomationName}"
									Command="{x:Bind Commands.LayoutGridLarge}"
									CornerRadius="{StaticResource ControlCornerRadius}"
									GroupName="LayoutRadio"
									IsChecked="{x:Bind ViewModel.IsGridLargeLayout, Mode=OneWay}"
									Style="{StaticResource DefaultToggleButtonStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutGridLarge.LabelWithHotKey, Mode=OneWay}">
									<local:OpacityIcon
										Width="16"
										Height="16"
										IsSelected="{x:Bind ViewModel.IsGridLargeLayout, Mode=OneWay}"
										Style="{x:Bind Commands.LayoutGridLarge.OpacityStyle}" />
								</RadioButton>

								<TextBlock
									x:Name="NavToolbarLargeIconsHeader"
									Grid.Row="2"
									Grid.Column="4"
									VerticalAlignment="Center"
									Tapped="{x:Bind Commands.LayoutGridLarge.ExecuteTapped}"
									Text="{x:Bind Commands.LayoutGridLarge.Label}" />

							</Grid>

							<!--  (Divider)  -->
							<Border
								Margin="-20,0"
								HorizontalAlignment="Stretch"
								BorderBrush="{ThemeResource DividerStrokeColorDefaultBrush}"
								BorderThickness="1" />

							<!--  Toggle Options  -->
							<Grid RowSpacing="4">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition MinHeight="30" />
									<RowDefinition MinHeight="30" />
									<RowDefinition MinHeight="30" />
								</Grid.RowDefinitions>

								<!--  Show Hidden Files  -->
								<TextBlock
									Grid.Row="0"
									Grid.Column="0"
									VerticalAlignment="Center"
									Text="{x:Bind Commands.ToggleShowHiddenItems.Label}" />

								<ToggleSwitch
									Grid.Row="0"
									Grid.Column="1"
									HorizontalAlignment="Right"
									AccessKey="H"
									AutomationProperties.Name="{x:Bind Commands.ToggleShowHiddenItems.AutomationName}"
									IsOn="{x:Bind Commands.ToggleShowHiddenItems.IsOn, Mode=TwoWay}"
									Style="{StaticResource RightAlignedToggleSwitchStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.ToggleShowHiddenItems.HotKeyText, Mode=OneWay}" />

								<!--  Show File Extensions  -->
								<TextBlock
									Grid.Row="1"
									Grid.Column="0"
									VerticalAlignment="Center"
									Text="{x:Bind Commands.ToggleShowFileExtensions.Label}" />

								<ToggleSwitch
									Grid.Row="1"
									Grid.Column="1"
									HorizontalAlignment="Right"
									AccessKey="E"
									AutomationProperties.Name="{x:Bind Commands.ToggleShowFileExtensions.AutomationName}"
									IsOn="{x:Bind Commands.ToggleShowFileExtensions.IsOn, Mode=TwoWay}"
									Rotation="1"
									Style="{StaticResource RightAlignedToggleSwitchStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.ToggleShowFileExtensions.HotKeyText, Mode=OneWay}" />

								<!--  Adaptive Layout  -->
								<TextBlock
									Grid.Row="2"
									Grid.Column="0"
									VerticalAlignment="Center"
									Text="{x:Bind Commands.LayoutAdaptive.Label}" />

								<ToggleSwitch
									Grid.Row="2"
									Grid.Column="1"
									HorizontalAlignment="Right"
									AutomationProperties.Name="{x:Bind Commands.LayoutAdaptive.AutomationName}"
									IsOn="{x:Bind Commands.LayoutAdaptive.IsOn, Mode=TwoWay}"
									Rotation="1"
									Style="{StaticResource RightAlignedToggleSwitchStyle}"
									ToolTipService.ToolTip="{x:Bind Commands.LayoutAdaptive.LabelWithHotKey, Mode=OneWay}" />

							</Grid>

						</StackPanel>
					</Flyout>
				</AppBarButton.Flyout>

			</AppBarButton>

			<!--  Toggle Preview\Details Pane  -->
			<AppBarToggleButton
				x:Name="PreviewPane"
				Width="Auto"
				MinWidth="40"
				AccessKey="P"
				AutomationProperties.Name="{x:Bind Commands.ToggleInfoPane.AutomationName}"
				IsChecked="{x:Bind Commands.ToggleInfoPane.IsOn, Mode=TwoWay}"
				Label="{x:Bind Commands.ToggleInfoPane.Label}"
				LabelPosition="Collapsed"
				ToolTipService.ToolTip="{x:Bind Commands.ToggleInfoPane.LabelWithHotKey, Mode=OneWay}"
				Visibility="{x:Bind ShowPreviewPaneButton, Mode=OneWay}">
				<local:OpacityIcon IsSelected="{x:Bind Commands.ToggleInfoPane.IsOn, Mode=OneWay}" Style="{x:Bind Commands.ToggleInfoPane.OpacityStyle}" />
			</AppBarToggleButton>

			<!--  3 Dots Commands  -->
			<CommandBar.SecondaryCommands>

				<!--  Workaround to enable displaying OpacityIcons in the menu  -->
				<AppBarButton Visibility="Collapsed">
					<AppBarButton.Icon>
						<FontIcon Glyph="&#xE737;" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!--  Open Pane  -->
				<AppBarButton
					x:Name="NavToolbarNewPane"
					x:Load="{x:Bind Commands.OpenNewPane.IsExecutable, Mode=OneWay}"
					Command="{x:Bind Commands.OpenNewPane, Mode=OneWay}"
					Label="{x:Bind Commands.OpenNewPane.Label}"
					ToolTipService.ToolTip="{x:Bind Commands.OpenNewPane.LabelWithHotKey, Mode=OneWay}">
					<local:OpacityIcon Style="{x:Bind Commands.OpenNewPane.OpacityStyle}" />
				</AppBarButton>

				<!--  Close Pane  -->
				<AppBarButton
					x:Name="NavToolbarClosePane"
					x:Load="{x:Bind Commands.ClosePane.IsExecutable, Mode=OneWay}"
					Command="{x:Bind Commands.ClosePane, Mode=OneWay}"
					Label="{x:Bind Commands.ClosePane.Label}"
					ToolTipService.ToolTip="{x:Bind Commands.ClosePane.LabelWithHotKey, Mode=OneWay}">
					<AppBarButton.Icon>
						<FontIcon Glyph="{x:Bind Commands.ClosePane.Glyph.BaseGlyph}" />
					</AppBarButton.Icon>
				</AppBarButton>

				<!--  New Window  -->
				<AppBarButton
					x:Name="NavToolbarNewWindow"
					Command="{x:Bind ViewModel.OpenNewWindowCommand, Mode=OneWay}"
					KeyboardAcceleratorTextOverride="{helpers:ResourceString Name=NavigationToolbarNewWindow/KeyboardAcceleratorTextOverride}"
					Label="{helpers:ResourceString Name=NavigationToolbarNewWindow/Label}">
					<local:OpacityIcon Style="{StaticResource ColorIconOpenNewWindow}" />
					<AppBarButton.KeyboardAccelerators>
						<KeyboardAccelerator
							Key="N"
							IsEnabled="False"
							Modifiers="Control" />
					</AppBarButton.KeyboardAccelerators>
				</AppBarButton>

				<!--  Exter Compact Overlay  -->
				<AppBarButton
					x:Name="NavToolbarEnterCompactOverlay"
					x:Load="{x:Bind Commands.EnterCompactOverlay.IsExecutable, Mode=OneWay}"
					Command="{x:Bind Commands.EnterCompactOverlay}"
					Label="{x:Bind Commands.EnterCompactOverlay.Label}">
					<local:OpacityIcon Style="{x:Bind Commands.EnterCompactOverlay.OpacityStyle}" />
				</AppBarButton>

				<!--  Exit Compact Overlay  -->
				<AppBarButton
					x:Name="NavToolbarExitCompactOverlay"
					x:Load="{x:Bind Commands.ExitCompactOverlay.IsExecutable, Mode=OneWay}"
					Command="{x:Bind Commands.ExitCompactOverlay}"
					Label="{x:Bind Commands.ExitCompactOverlay.Label}">
					<local:OpacityIcon Style="{x:Bind Commands.ExitCompactOverlay.OpacityStyle}" />
				</AppBarButton>

			</CommandBar.SecondaryCommands>
		</CommandBar>

	</Grid>
</UserControl>
