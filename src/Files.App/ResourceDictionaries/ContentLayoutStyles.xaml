<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
	xmlns:uc="using:Files.App.UserControls">

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Default">
			<SolidColorBrush x:Key="GridViewItemCheckBoxBrush" Color="{ThemeResource SystemChromeMediumLowColor}" />
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<Style x:Key="ColumnBaseLayoutListViewHeaderItemStyle" TargetType="ListViewHeaderItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />
		<Setter Property="Background" Value="{ThemeResource GridViewHeaderItemBackground}" />
		<Setter Property="Margin" Value="0,0,0,4" />
		<Setter Property="Padding" Value="12,8,12,0" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewHeaderItem">
					<Grid
						x:Name="HeaderItemRootGrid"
						Margin="0,0,4,0"
						HorizontalAlignment="Stretch"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						PointerCanceled="StackPanel_PointerCanceled"
						PointerEntered="StackPanel_PointerEntered"
						PointerExited="StackPanel_PointerCanceled"
						PointerPressed="RootPanel_PointerPressed"
						PointerReleased="StackPanel_PointerCanceled">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<ContentPresenter
							x:Name="ContentPresenter"
							Grid.Column="0"
							Margin="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTransitions="{TemplateBinding ContentTransitions}" />

						<Rectangle
							Grid.Column="1"
							Height="1"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center"
							Stroke="{ThemeResource GridViewHeaderItemDividerStroke}"
							StrokeThickness="0.5" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="CustomBladeItem" TargetType="toolkit:BladeItem">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="TitleBarVisibility" Value="Collapsed" />
		<Setter Property="BorderThickness" Value="0,0,1,0" />
		<Setter Property="BorderBrush" Value="{ThemeResource ControlStrokeColorDefault}" />
		<Setter Property="Width" Value="300" />
	</Style>

	<Style
		x:Name="HeaderGridSplitterStyle"
		BasedOn="{StaticResource DefaultGridSplitterStyle}"
		TargetType="toolkit:GridSplitter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="12" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Opacity" Value="0.8" />
		<Setter Property="Canvas.ZIndex" Value="1" />
	</Style>

	<Style x:Key="DetailsLayoutListViewHeaderItemStyle" TargetType="ListViewHeaderItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />
		<Setter Property="Background" Value="{ThemeResource GridViewHeaderItemBackground}" />
		<Setter Property="Margin" Value="0,0,0,4" />
		<Setter Property="Padding" Value="12,8,12,0" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewHeaderItem">
					<Grid
						x:Name="HeaderItemRootGrid"
						Margin="0,0,4,0"
						HorizontalAlignment="Stretch"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						PointerCanceled="StackPanel_PointerCanceled"
						PointerEntered="StackPanel_PointerEntered"
						PointerExited="StackPanel_PointerCanceled"
						PointerPressed="RootPanel_PointerPressed"
						PointerReleased="StackPanel_PointerCanceled">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<ContentPresenter
							x:Name="ContentPresenter"
							Grid.Column="0"
							Margin="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTransitions="{TemplateBinding ContentTransitions}" />

						<Rectangle
							Grid.Column="1"
							Height="1"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center"
							Stroke="{ThemeResource GridViewHeaderItemDividerStroke}"
							StrokeThickness="0.5" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DetailsLayoutDataGridHeaderStyle" TargetType="uc:DataGridHeader">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="-4,0" />
	</Style>

	<Style
		x:Key="ColumnContentTextBlock"
		BasedOn="{StaticResource CaptionTextBlockStyle}"
		TargetType="TextBlock">
		<Setter Property="TextWrapping" Value="NoWrap" />
		<Setter Property="TextTrimming" Value="CharacterEllipsis" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Opacity" Value="0.6" />
	</Style>

	<Style x:Key="DetailsLayoutListViewStyle" TargetType="ListView">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="IsDoubleTapEnabled" Value="True" />
		<Setter Property="TabNavigation" Value="Once" />
		<Setter Property="IsSwipeEnabled" Value="True" />
		<Setter Property="FocusVisualPrimaryThickness" Value="0" />
		<Setter Property="FocusVisualSecondaryThickness" Value="0" />
		<Setter Property="CanDragItems" Value="True" />
		<Setter Property="SelectionMode" Value="Extended" />
		<Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<ItemsStackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<ScrollViewer
							x:Name="ScrollViewer"
							HorizontalContentAlignment="Stretch"
							AutomationProperties.AccessibilityView="Raw"
							BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
							IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
							IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
							IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
							IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
							IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
							TabNavigation="{TemplateBinding TabNavigation}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
							ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<ItemsPresenter
									Margin="0,0,12,0"
									Padding="{TemplateBinding Padding}"
									HorizontalAlignment="Stretch"
									Footer="{TemplateBinding Footer}"
									FooterTemplate="{TemplateBinding FooterTemplate}"
									FooterTransitions="{TemplateBinding FooterTransitions}"
									Header="{TemplateBinding Header}"
									HeaderTemplate="{TemplateBinding HeaderTemplate}"
									HeaderTransitions="{TemplateBinding HeaderTransitions}" />

							</Grid>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewLayoutGridViewHeaderItemStyle" TargetType="GridViewHeaderItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />
		<Setter Property="Background" Value="{ThemeResource GridViewHeaderItemBackground}" />
		<Setter Property="Margin" Value="0,0,0,4" />
		<Setter Property="Padding" Value="12,8,12,0" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewHeaderItem">
					<Grid
						x:Name="HeaderItemRootGrid"
						Margin="0,0,4,0"
						HorizontalAlignment="Stretch"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						PointerCanceled="StackPanel_PointerCanceled"
						PointerEntered="StackPanel_PointerEntered"
						PointerExited="StackPanel_PointerCanceled"
						PointerPressed="RootPanel_PointerPressed"
						PointerReleased="StackPanel_PointerCanceled">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<ContentPresenter
							x:Name="ContentPresenter"
							Grid.Column="0"
							Margin="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTransitions="{TemplateBinding ContentTransitions}" />

						<Rectangle
							Grid.Column="1"
							Height="1"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center"
							Stroke="{ThemeResource GridViewHeaderItemDividerStroke}"
							StrokeThickness="0.5" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
