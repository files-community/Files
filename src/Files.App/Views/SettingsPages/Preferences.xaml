<Page
	x:Class="Files.App.SettingsPages.Preferences"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:UserControls="using:Files.App.UserControls"
	xmlns:contract13NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,13)"
	xmlns:contract13Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,13)"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:datamodels="using:Files.App.DataModels"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
	xmlns:local="using:Files.App.UserControls.Settings"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	xmlns:settingsviewmodels="using:Files.App.ViewModels.SettingsViewModels"
	mc:Ignorable="d">
	<Page.Resources>
		<ResourceDictionary Source="/ResourceDictionaries/RightAlignedToggleSwitchStyle.xaml" />
	</Page.Resources>
	<Page.DataContext>
		<settingsviewmodels:PreferencesViewModel x:Name="ViewModel" />
	</Page.DataContext>

	<Grid>
		<StackPanel
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Spacing="4">
			<StackPanel.ChildrenTransitions>
				<TransitionCollection>
					<EntranceThemeTransition />
				</TransitionCollection>
			</StackPanel.ChildrenTransitions>


			<!--  Language settings  -->
			<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsPreferencesAppLanguage/Title}" HorizontalAlignment="Stretch">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xF2B7;" />
				</local:SettingsBlockControl.Icon>
				<ComboBox
					HorizontalAlignment="Left"
					AutomationProperties.Name="{helpers:ResourceString Name=SettingsPreferencesAppLanguageComboBox/AutomationProperties/Name}"
					ItemsSource="{x:Bind ViewModel.AppLanguages}"
					SelectedIndex="{x:Bind ViewModel.SelectedAppLanguageIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="settingsviewmodels:AppLanguageItem">
							<TextBlock Text="{x:Bind LanguageName}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</local:SettingsBlockControl>


			<!--  Date settings  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=DateFormat}"
				HorizontalAlignment="Stretch"
				Description="{x:Bind ViewModel.DateFormatSample}">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xEC92;" />
				</local:SettingsBlockControl.Icon>
				<ComboBox
					x:Name="DateFormatChooser"
					Grid.Column="1"
					AutomationProperties.Name="{helpers:ResourceString Name=DateFormat}"
					ItemsSource="{x:Bind ViewModel.DateFormats}"
					SelectedIndex="{x:Bind ViewModel.SelectedDateTimeFormatIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="settingsviewmodels:DateTimeFormatItem">
							<StackPanel Orientation="Vertical">
								<TextBlock Text="{x:Bind Label}" />
								<TextBlock
									FontSize="12"
									FontWeight="Light"
									Text="{x:Bind Sample1}"
									Visibility="{Binding IsDropDownOpen, ElementName=DateFormatChooser}" />
								<TextBlock
									FontSize="12"
									FontWeight="Light"
									Text="{x:Bind Sample2}"
									Visibility="{Binding IsDropDownOpen, ElementName=DateFormatChooser}" />
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</local:SettingsBlockControl>


			<!--  Terminal settings  -->
			<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsPreferencesTerminalApplications/Title}" HorizontalAlignment="Stretch">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE756;" />
				</local:SettingsBlockControl.Icon>
				<ComboBox
					x:Name="TerminalApplicationsComboBox"
					AutomationProperties.Name="{helpers:ResourceString Name=TerminalApplicationsComboBox/AutomationProperties/Name}"
					ItemsSource="{x:Bind ViewModel.Terminals, Mode=OneWay}"
					SelectedItem="{x:Bind ViewModel.SelectedTerminal, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="datamodels:Terminal">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{x:Bind Name}" />
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
				<local:SettingsBlockControl.ExpandableContent>
					<local:SettingsBlockControl
						Title="{helpers:ResourceString Name=SettingsPreferencesEditTerminalApplicationsExpander/Title}"
						ButtonCommand="{x:Bind ViewModel.EditTerminalApplicationsCommand}"
						IsClickable="True">
						<local:SettingsBlockControl.Icon>
							<FontIcon
								FontSize="14"
								Foreground="{ThemeResource TextFillColorPrimaryBrush}"
								Glyph="&#xE104;" />
						</local:SettingsBlockControl.Icon>

						<FontIcon
							FontSize="14"
							Foreground="{ThemeResource TextFillColorPrimaryBrush}"
							Glyph="&#xE2B4;" />
					</local:SettingsBlockControl>
				</local:SettingsBlockControl.ExpandableContent>
			</local:SettingsBlockControl>


			<!--  File and folder settings  -->
			<local:SettingsBlockControl Title="{helpers:ResourceString Name=FilesAndFolders}" HorizontalAlignment="Stretch">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xF12B;" />
				</local:SettingsBlockControl.Icon>
				<local:SettingsBlockControl.ExpandableContent>
					<StackPanel>
						<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsPreferencesShowConfirmDeleteDialog/Title}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								x:Name="ShowConfirmDeleteDialogSwitch"
								AutomationProperties.Name="{helpers:ResourceString Name=SettingsShowConfirmDeleteDialogToggleSwitch/AutomationProperties/Name}"
								IsOn="{x:Bind ViewModel.ShowConfirmDeleteDialog, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</local:SettingsBlockControl>

						<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsFilesAndFoldersShowFileExtensions}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=SettingsFilesAndFoldersShowFileExtensions}"
								IsOn="{x:Bind ViewModel.ShowFileExtensions, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</local:SettingsBlockControl>

						<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsFilesAndFoldersShowThumbnails}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=SettingsFilesAndFoldersShowThumbnails}"
								IsOn="{x:Bind ViewModel.ShowThumbnails, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</local:SettingsBlockControl>

						<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsListAndSortDirectoriesAlongsideFiles}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=SettingsListAndSortDirectoriesAlongsideFiles}"
								IsOn="{x:Bind ViewModel.ListAndSortDirectoriesAlongsideFiles, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</local:SettingsBlockControl>

						<local:SettingsBlockControl Title="{helpers:ResourceString Name=SelectFilesAndFoldersOnHover}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=SelectFilesAndFoldersOnHover}"
								IsOn="{x:Bind ViewModel.SelectFilesOnHover, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</local:SettingsBlockControl>
					</StackPanel>
				</local:SettingsBlockControl.ExpandableContent>
			</local:SettingsBlockControl>

			<!--  Search settings  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=SettingsSearchUnindexedItems}"
				HorizontalAlignment="Stretch">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE721;" />
				</local:SettingsBlockControl.Icon>
				<ToggleSwitch
					AutomationProperties.Name="{helpers:ResourceString Name=SettingsSearchUnindexedItems}"
					IsOn="{x:Bind ViewModel.SearchUnindexedItems, Mode=TwoWay}"
					Style="{StaticResource RightAlignedToggleSwitchStyle}" />
			</local:SettingsBlockControl>

			<!--  Startup settings  -->
			<local:SettingsBlockControl Title="{helpers:ResourceString Name=StartupSettings}" HorizontalAlignment="Stretch">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE7E8;" />
				</local:SettingsBlockControl.Icon>
				<ComboBox SelectedIndex="{x:Bind ViewModel.SelectedStartupSettingIndex, Mode=OneWay}">
					<ComboBoxItem Content="{helpers:ResourceString Name=SettingsOnStartupOpenANewTab/Content}" IsSelected="{x:Bind ViewModel.OpenNewTabPageOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

					<ComboBoxItem Content="{helpers:ResourceString Name=SettingsOnStartupContinueWhereYouLeftOff/Content}" IsSelected="{x:Bind ViewModel.ContinueLastSessionOnStartUp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

					<ComboBoxItem
						x:Name="OpenSpecificPage"
						Content="{helpers:ResourceString Name=SettingsOnStartupOpenASpecificPage/Content}"
						IsSelected="{x:Bind ViewModel.OpenASpecificPageOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</ComboBox>
				<local:SettingsBlockControl.ExpandableContent>
					<StackPanel>
						<local:SettingsBlockControl HorizontalAlignment="Stretch" Visibility="{x:Bind ViewModel.OpenASpecificPageOnStartup, Mode=OneWay}">
							<Grid HorizontalAlignment="Stretch">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<TextBlock
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									FontSize="16"
									Text="{helpers:ResourceString Name=SettingsOnStartupPages/Text}" />
								<CommandBar
									Grid.Column="1"
									Background="Transparent"
									DefaultLabelPosition="Right"
									IsOpen="False">
									<AppBarButton Icon="Add" Label="{helpers:ResourceString Name=Add}">
										<AppBarButton.Flyout>
											<MenuFlyout helpers:MenuFlyoutHelper.ItemsSource="{x:Bind ViewModel.AddFlyoutItemsSource}" Placement="Bottom" />
										</AppBarButton.Flyout>
									</AppBarButton>
									<AppBarButton
										Command="{x:Bind ViewModel.ChangePageCommand}"
										Icon="Edit"
										IsEnabled="{x:Bind ViewModel.IsPageListEditEnabled}"
										Label="{helpers:ResourceString Name=Edit}" />
									<AppBarButton
										Command="{x:Bind ViewModel.RemovePageCommand}"
										Icon="Delete"
										IsEnabled="{x:Bind ViewModel.IsPageListEditEnabled}"
										Label="{helpers:ResourceString Name=Remove}" />
								</CommandBar>

								<ListView
									x:Name="PagesList"
									Grid.Row="1"
									Grid.ColumnSpan="2"
									Margin="0,10"
									HorizontalAlignment="Stretch"
									AllowDrop="True"
									CanReorderItems="True"
									IsItemClickEnabled="True"
									ItemsSource="{x:Bind ViewModel.PagesOnStartupList, Mode=TwoWay}"
									SelectedIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}"
									SelectionMode="Single">
									<ListView.ItemTemplate>
										<DataTemplate xmlns:vm="using:Files.App.ViewModels.SettingsViewModels" x:DataType="vm:PageOnStartupViewModel">
											<TextBlock
												Text="{x:Bind Text}"
												TextTrimming="CharacterEllipsis"
												ToolTipService.ToolTip="{x:Bind Text}" />
										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</Grid>
						</local:SettingsBlockControl>

						<local:SettingsBlockControl Title="{helpers:ResourceString Name=OpenNewInstance}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=OpenNewInstance}"
								IsOn="{x:Bind ViewModel.AlwaysOpenANewInstance, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</local:SettingsBlockControl>

						<local:SettingsBlockControl Title="{helpers:ResourceString Name=SettingsOpenInLogin}" HorizontalAlignment="Stretch">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=SettingsOpenInLogin}"
								IsEnabled="{x:Bind ViewModel.CanOpenInLogin, Mode=OneWay}"
								IsOn="{x:Bind ViewModel.OpenInLogin, Mode=TwoWay}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}">
								<i:Interaction.Behaviors>
									<icore:EventTriggerBehavior EventName="Toggled">
										<icore:InvokeCommandAction Command="{x:Bind ViewModel.OpenFilesAtStartupCommand, Mode=OneWay}" />
									</icore:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</ToggleSwitch>
						</local:SettingsBlockControl>
					</StackPanel>
				</local:SettingsBlockControl.ExpandableContent>
			</local:SettingsBlockControl>
		</StackPanel>

		<UserControls:RestartControl
			x:Name="RestartControl"
			VerticalAlignment="Bottom"
			ShowDialog="{x:Bind ViewModel.ShowRestartControl, Mode=TwoWay}" />
	</Grid>
</Page>
