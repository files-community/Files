<Page
	x:Class="Files.App.SettingsPages.Advanced"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
	xmlns:converters1="using:CommunityToolkit.WinUI.UI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
	xmlns:local="using:Files.App.UserControls.Settings"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:settingsviewmodels="using:Files.App.ViewModels.SettingsViewModels"
	xmlns:vc="using:Files.App.ValueConverters"
	mc:Ignorable="d">
	<Page.Resources>
		<ResourceDictionary>
			<converters1:BoolToVisibilityConverter
				x:Key="BoolVisibilityConverter"
				FalseValue="Collapsed"
				TrueValue="Visible" />
			<converters1:BoolToVisibilityConverter
				x:Key="InvertedBoolVisibilityConverter"
				FalseValue="Visible"
				TrueValue="Collapsed" />
			<vc:StringToBrushConverter x:Key="StringToBrushConverter" />
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/ResourceDictionaries/RightAlignedToggleSwitchStyle.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Page.Resources>
	<Page.DataContext>
		<settingsviewmodels:AdvancedViewModel x:Name="ViewModel" />
	</Page.DataContext>

	<Grid>
		<StackPanel
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Spacing="4">
			<StackPanel.ChildrenTransitions>
				<TransitionCollection>
					<EntranceThemeTransition />
				</TransitionCollection>
			</StackPanel.ChildrenTransitions>

			<!--  Manage Settings  -->
			<TextBlock
				Padding="0,0,0,4"
				FontSize="14"
				FontWeight="Medium"
				Text="{helpers:ResourceString Name=ManageSettings}" />

			<!--  Export  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=ExportSettings}"
				ButtonCommand="{x:Bind ViewModel.ExportSettingsCommand}"
				IsClickable="True">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xEDE1;" />
				</local:SettingsBlockControl.Icon>
				<FontIcon
					FontSize="14"
					Foreground="{ThemeResource TextFillColorPrimaryBrush}"
					Glyph="&#xE2B4;" />
			</local:SettingsBlockControl>

			<!--  Import  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=ImportSettings}"
				ButtonCommand="{x:Bind ViewModel.ImportSettingsCommand}"
				IsClickable="True">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xEDE2;" />
				</local:SettingsBlockControl.Icon>
				<FontIcon
					FontSize="14"
					Foreground="{ThemeResource TextFillColorPrimaryBrush}"
					Glyph="&#xE2B4;" />
			</local:SettingsBlockControl>

			<!--  Edit Settings File  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=EditSettingsFile}"
				ButtonCommand="{x:Bind ViewModel.OpenSettingsJsonCommand}"
				IsClickable="True">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE8DA;" />
				</local:SettingsBlockControl.Icon>
				<FontIcon
					FontSize="14"
					Foreground="{ThemeResource TextFillColorPrimaryBrush}"
					Glyph="&#xE2B4;" />
			</local:SettingsBlockControl>


			<!--  Default file manager  -->
			<TextBlock
				Padding="0,12,0,4"
				FontSize="14"
				FontWeight="Medium"
				Text="{helpers:ResourceString Name=ExperimentalFeatureFlags}" />

			<!--  Replace File Explorer  -->
			<local:SettingsBlockControl
				x:Name="SetAsDefaultSettingsBlockControl"
				Title="{helpers:ResourceString Name=SettingsSetAsDefaultFileManager}"
				HorizontalAlignment="Stretch"
				Description="{helpers:ResourceString Name=SettingsSetAsDefaultFileManagerDescription}"
				IsExpanded="True">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xEC50;" />
				</local:SettingsBlockControl.Icon>
				<ToggleSwitch
					AutomationProperties.Name="{helpers:ResourceString Name=SettingsSetAsDefaultFileManager}"
					IsOn="{x:Bind ViewModel.IsSetAsDefaultFileManager, Mode=TwoWay}"
					Style="{StaticResource RightAlignedToggleSwitchStyle}">
					<i:Interaction.Behaviors>
						<icore:EventTriggerBehavior EventName="Toggled">
							<icore:InvokeCommandAction Command="{x:Bind ViewModel.SetAsDefaultExplorerCommand, Mode=OneWay}" />
						</icore:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</ToggleSwitch>
			</local:SettingsBlockControl>

			<!--  Replace Open File Dialog  -->
			<local:SettingsBlockControl
				x:Name="ReplaceOpenFileDialogSetting"
				Title="{helpers:ResourceString Name=SettingsSetAsOpenDialog}"
				HorizontalAlignment="Stretch"
				x:Load="False">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE1A5;" />
				</local:SettingsBlockControl.Icon>
				<ToggleSwitch
					IsEnabled="{x:Bind ViewModel.IsSetAsDefaultFileManager, Mode=OneWay}"
					IsOn="{x:Bind ViewModel.IsSetAsOpenFileDialog, Mode=TwoWay}"
					Style="{StaticResource RightAlignedToggleSwitchStyle}">
					<i:Interaction.Behaviors>
						<icore:EventTriggerBehavior EventName="Toggled">
							<icore:InvokeCommandAction Command="{x:Bind ViewModel.SetAsOpenFileDialogCommand, Mode=OneWay}" />
						</icore:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</ToggleSwitch>
			</local:SettingsBlockControl>

			<!--  Edit Tags  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=FileTags}"
				HorizontalAlignment="Stretch"
				IsExpanded="True">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE1CB;" />
				</local:SettingsBlockControl.Icon>

				<Button Command="{x:Bind ViewModel.AddTagCommand, Mode=OneWay}" Content="{helpers:ResourceString Name=NewTag}" />
				<local:SettingsBlockControl.ExpandableContent>
					<StackPanel>
						<!--  Create new tag  -->
						<Grid
							x:Name="AddTagGrid"
							Padding="32,12"
							x:Load="{x:Bind ViewModel.IsCreatingNewTag, Mode=OneWay}"
							Background="{ThemeResource CardBackgroundFillColorDefault}"
							BorderBrush="{ThemeResource ControlElevationBorderBrush}"
							BorderThickness="0,0,0,1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<StackPanel
								Grid.Column="0"
								Orientation="Horizontal"
								Spacing="12">
								<!--  Title  -->
								<TextBlock VerticalAlignment="Center" Text="{helpers:ResourceString Name=CreateNewTag}" />

								<!--  Tag Name  -->
								<TextBox
									Width="200"
									PlaceholderText="{helpers:ResourceString Name=Name}"
									TextChanged="NewTagTextBox_TextChanged" />

								<!--  Tag Color  -->
								<Button
									Margin="8,0"
									Padding="0"
									AutomationProperties.Name="{helpers:ResourceString Name=TagColor}">
									<StackPanel Orientation="Horizontal">
										<Border
											Width="20"
											Height="20"
											Margin="4"
											Background="{x:Bind ViewModel.NewTag.Color, Mode=OneWay}"
											CornerRadius="4" />
										<FontIcon
											Margin="8,4,10,4"
											FontSize="12"
											Glyph="&#xE019;" />
									</StackPanel>
									<Button.Flyout>
										<Flyout>
											<controls:ColorPicker Color="{x:Bind ViewModel.NewTag.Color, Mode=TwoWay}" />
										</Flyout>
									</Button.Flyout>
								</Button>
							</StackPanel>

							<StackPanel
								Grid.Column="1"
								HorizontalAlignment="Right"
								Orientation="Horizontal"
								Spacing="12">
								<!--  Cancel  -->
								<Button Command="{x:Bind ViewModel.CancelNewTagCommand, Mode=OneWay}" Content="{helpers:ResourceString Name=Cancel}" />

								<!--  Save Changes  -->
								<Button
									Command="{x:Bind ViewModel.SaveNewTagCommand, Mode=OneWay}"
									Content="{helpers:ResourceString Name=Create}"
									IsEnabled="{x:Bind ViewModel.NewTag.IsNameValid, Mode=OneWay}"
									Style="{StaticResource AccentButtonStyle}" />
							</StackPanel>
						</Grid>

						<ListView
							x:Name="TagsList"
							MaxHeight="300"
							Padding="12"
							HorizontalAlignment="Stretch"
							AllowDrop="True"
							CanReorderItems="True"
							IsItemClickEnabled="True"
							ItemsSource="{x:Bind ViewModel.Tags, Mode=TwoWay}"
							ReorderMode="Enabled"
							SelectionMode="None">
							<ListView.ItemTemplate>
								<DataTemplate xmlns:vm="using:Files.Backend.ViewModels.FileTags" x:DataType="vm:ListedTagViewModel">
									<Grid ColumnSpacing="16">
										<Grid.KeyboardAccelerators>
											<KeyboardAccelerator Key="Escape" Invoked="KeyboardAccelerator_Invoked" />
										</Grid.KeyboardAccelerators>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<StackPanel
											Height="24"
											Padding="8,0"
											HorizontalAlignment="Left"
											VerticalAlignment="Center"
											BorderBrush="{x:Bind NewColor, Mode=OneWay, Converter={StaticResource StringToBrushConverter}}"
											BorderThickness="1"
											CornerRadius="12"
											Orientation="Horizontal"
											ToolTipService.ToolTip="{x:Bind Tag.Name}">
											<FontIcon
												FontSize="12"
												Foreground="{x:Bind NewColor, Mode=OneWay, Converter={StaticResource StringToBrushConverter}}"
												Glyph="&#xE1CB;" />
											<TextBlock
												x:Name="TagName"
												Padding="8,0,0,0"
												VerticalAlignment="Center"
												FontSize="12"
												LineHeight="18"
												Text="{x:Bind Tag.Name}"
												TextTrimming="CharacterEllipsis" />
										</StackPanel>

										<StackPanel
											Grid.Column="1"
											Orientation="Horizontal"
											Spacing="8"
											Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
											<TextBox
												x:Name="TagNameTextBox"
												Width="200"
												VerticalAlignment="Center"
												KeyDown="RenameTextBox_KeyDown"
												Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
												<TextBox.Resources>
													<SolidColorBrush x:Key="TextControlBackgroundFocused" Color="{ThemeResource SolidBackgroundFillColorSecondary}" />
												</TextBox.Resources>
											</TextBox>

											<Button
												Margin="8,0"
												Padding="0"
												AutomationProperties.Name="{helpers:ResourceString Name=TagColor}">
												<StackPanel Orientation="Horizontal">
													<Border
														Width="20"
														Height="20"
														Margin="4"
														Background="{x:Bind NewColor, Mode=OneWay}"
														CornerRadius="4" />
													<FontIcon
														Margin="8,4,10,4"
														FontSize="12"
														Glyph="&#xE019;" />
												</StackPanel>
												<Button.Flyout>
													<Flyout>
														<controls:ColorPicker Color="{x:Bind NewColor, Mode=TwoWay}" />
													</Flyout>
												</Button.Flyout>
											</Button>
										</StackPanel>

										<StackPanel
											Grid.Column="2"
											Orientation="Horizontal"
											Visibility="{x:Bind IsEditing, Converter={StaticResource InvertedBoolVisibilityConverter}, Mode=OneWay}">
											<Button
												x:Name="EditTagButton"
												Padding="8,4"
												Background="Transparent"
												BorderBrush="Transparent"
												Click="EditTag_Click"
												Content="{helpers:ResourceString Name=Edit}" />

											<Button
												x:Name="DeleteTagButton"
												Padding="8,4"
												Background="Transparent"
												BorderBrush="Transparent"
												Click="RemoveTag_Click"
												Content="{helpers:ResourceString Name=Delete}" />
										</StackPanel>

										<StackPanel
											Grid.Column="2"
											Orientation="Horizontal"
											Spacing="12"
											Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
											<Button
												x:Name="CancelChangesButton"
												Click="CancelRenameTag_Click"
												Content="{helpers:ResourceString Name=Cancel}" />

											<Button
												x:Name="SaveChangesButton"
												Click="CommitRenameTag_Click"
												Content="{helpers:ResourceString Name=SaveChanges}"
												IsEnabled="{x:Bind IsNameValid, Mode=OneWay}"
												Style="{StaticResource AccentButtonStyle}" />
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</StackPanel>
				</local:SettingsBlockControl.ExpandableContent>
			</local:SettingsBlockControl>
		</StackPanel>
	</Grid>
</Page>