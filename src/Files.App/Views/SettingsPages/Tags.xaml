<Page
	x:Class="Files.App.SettingsPages.Tags"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
	xmlns:converters1="using:CommunityToolkit.WinUI.UI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:local="using:Files.App.UserControls.Settings"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:settingsviewmodels="using:Files.App.ViewModels.SettingsViewModels"
	xmlns:vc="using:Files.App.ValueConverters"
	mc:Ignorable="d">
	<Page.Resources>
		<ResourceDictionary>
			<converters1:BoolToVisibilityConverter
				x:Key="BoolVisibilityConverter"
				FalseValue="Collapsed"
				TrueValue="Visible" />
			<converters1:BoolToVisibilityConverter
				x:Key="InvertedBoolVisibilityConverter"
				FalseValue="Visible"
				TrueValue="Collapsed" />
			<converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
			<vc:StringToBrushConverter x:Key="StringToBrushConverter" />
			<Style x:Key="CompactInfoBarStyle" TargetType="InfoBar">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="InfoBar">
							<Border
								x:Name="ContentRoot"
								VerticalAlignment="Top"
								Background="{ThemeResource InfoBarInformationalSeverityBackgroundBrush}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}">
								<!--  Background is used here so that it overrides the severity status color if set.  -->
								<Grid
									MinHeight="{ThemeResource InfoBarMinHeight}"
									Padding="{StaticResource InfoBarContentRootPadding}"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center"
									Background="{TemplateBinding Background}"
									CornerRadius="{TemplateBinding CornerRadius}">

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<!--  Icon  -->
										<ColumnDefinition Width="*" />
										<!--  Title, message, and action  -->
										<ColumnDefinition Width="Auto" />
										<!--  Close button  -->
									</Grid.ColumnDefinitions>

									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid
										x:Name="StandardIconArea"
										Margin="0,0,14,0"
										VerticalAlignment="Center"
										Visibility="Collapsed">
										<TextBlock
											x:Name="IconBackground"
											Grid.Column="0"
											AutomationProperties.AccessibilityView="Raw"
											FontFamily="{ThemeResource SymbolThemeFontFamily}"
											FontSize="{StaticResource InfoBarIconFontSize}"
											Foreground="{ThemeResource InfoBarInformationalSeverityIconBackground}"
											Text="{StaticResource InfoBarIconBackgroundGlyph}" />
										<TextBlock
											x:Name="StandardIcon"
											Grid.Column="0"
											FontFamily="{ThemeResource SymbolThemeFontFamily}"
											FontSize="{StaticResource InfoBarIconFontSize}"
											Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}"
											Text="{StaticResource InfoBarInformationalIconGlyph}" />
									</Grid>
									<Viewbox
										x:Name="UserIconBox"
										Grid.Column="0"
										MaxWidth="{ThemeResource InfoBarIconFontSize}"
										MaxHeight="{ThemeResource InfoBarIconFontSize}"
										Margin="{ThemeResource InfoBarIconMargin}"
										VerticalAlignment="Top"
										Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}"
										Visibility="Collapsed" />
									<InfoBarPanel
										Grid.Column="1"
										Margin="0,0,16,0"
										HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
										VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">
										<TextBlock
											x:Name="Title"
											AutomationProperties.LandmarkType="Navigation"
											FontSize="{StaticResource InfoBarTitleFontSize}"
											FontWeight="{StaticResource InfoBarTitleFontWeight}"
											Foreground="{ThemeResource InfoBarTitleForeground}"
											InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
											InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
											Text="{TemplateBinding Title}"
											TextWrapping="WrapWholeWords" />
										<TextBlock
											x:Name="Message"
											FontSize="{StaticResource InfoBarMessageFontSize}"
											FontWeight="{StaticResource InfoBarMessageFontWeight}"
											Foreground="{ThemeResource InfoBarMessageForeground}"
											InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
											InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
											Text="{TemplateBinding Message}"
											TextWrapping="WrapWholeWords" />
										<ContentPresenter
											VerticalAlignment="Top"
											Content="{TemplateBinding ActionButton}"
											InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
											InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}">
											<ContentPresenter.Resources>
												<Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton">
													<Style.Setters>
														<Setter Property="Margin" Value="{StaticResource InfoBarHyperlinkButtonMargin}" />
														<Setter Property="Foreground" Value="{ThemeResource InfoBarHyperlinkButtonForeground}" />
													</Style.Setters>
												</Style>
											</ContentPresenter.Resources>
										</ContentPresenter>
									</InfoBarPanel>
									<ContentPresenter
										Grid.Row="1"
										Grid.Column="1"
										Content="{TemplateBinding Content}"
										ContentTemplate="{TemplateBinding ContentTemplate}" />

								</Grid>

								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="SeverityLevels">
										<VisualState x:Name="Error">
											<VisualState.Setters>
												<Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}" />
												<Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconBackground}" />
												<Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarErrorIconGlyph}" />
												<Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconForeground}" />

											</VisualState.Setters>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="IconStates">
										<VisualState x:Name="StandardIconVisible">
											<VisualState.Setters>
												<Setter Target="UserIconBox.Visibility" Value="Collapsed" />
												<Setter Target="StandardIconArea.Visibility" Value="Visible" />

											</VisualState.Setters>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="InfoBarVisibility">
										<VisualState x:Name="InfoBarVisible" />
										<VisualState x:Name="InfoBarCollapsed">
											<VisualState.Setters>
												<Setter Target="ContentRoot.Visibility" Value="Collapsed" />

											</VisualState.Setters>
										</VisualState>

									</VisualStateGroup>

								</VisualStateManager.VisualStateGroups>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Page.Resources>
	<Page.DataContext>
		<settingsviewmodels:TagsSettingsViewModel x:Name="ViewModel" />
	</Page.DataContext>

	<Grid>
		<StackPanel
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Spacing="4">
			<StackPanel.ChildrenTransitions>
				<TransitionCollection>
					<EntranceThemeTransition />
				</TransitionCollection>
			</StackPanel.ChildrenTransitions>

			<!--  Edit Tags  -->
			<local:SettingsBlockControl
				Title="{helpers:ResourceString Name=FileTags}"
				HorizontalAlignment="Stretch"
				IsExpanded="True">
				<local:SettingsBlockControl.Icon>
					<FontIcon Glyph="&#xE1CB;" />
				</local:SettingsBlockControl.Icon>

				<Button Command="{x:Bind ViewModel.AddTagCommand, Mode=OneWay}" Content="{helpers:ResourceString Name=NewTag}" />
				<local:SettingsBlockControl.ExpandableContent>
					<StackPanel>
						<!--  Create new tag  -->
						<Grid
							x:Name="AddTagGrid"
							Padding="32,12"
							x:Load="{x:Bind ViewModel.IsCreatingNewTag, Mode=OneWay}"
							Background="{ThemeResource CardBackgroundFillColorDefault}"
							BorderBrush="{ThemeResource ControlElevationBorderBrush}"
							BorderThickness="0,0,0,1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<StackPanel
								Grid.Column="0"
								Orientation="Horizontal"
								Spacing="12">
								<!--  Title  -->
								<TextBlock VerticalAlignment="Center" Text="{helpers:ResourceString Name=CreateNewTag}" />

								<!--  Tag Name  -->
								<TextBox
									Width="200"
									PlaceholderText="{helpers:ResourceString Name=Name}"
									TextChanged="NewTagTextBox_TextChanged" />

								<!--  Tag Color  -->
								<Button
									Margin="8,0"
									Padding="0"
									AutomationProperties.Name="{helpers:ResourceString Name=TagColor}">
									<StackPanel Orientation="Horizontal">
										<Border
											Width="20"
											Height="20"
											Margin="4"
											Background="{x:Bind ViewModel.NewTag.Color, Mode=OneWay}"
											CornerRadius="4" />
										<FontIcon
											Margin="8,4,10,4"
											FontSize="12"
											Glyph="&#xE019;" />
									</StackPanel>
									<Button.Flyout>
										<Flyout>
											<controls:ColorPicker Color="{x:Bind ViewModel.NewTag.Color, Mode=TwoWay}" />
										</Flyout>
									</Button.Flyout>
								</Button>
							</StackPanel>

							<StackPanel
								Grid.Column="1"
								HorizontalAlignment="Right"
								Orientation="Horizontal"
								Spacing="12">
								<!--  Invalid Name Warning  -->
								<InfoBar
									Height="32"
									IsClosable="False"
									IsOpen="{x:Bind ViewModel.NewTag.IsNameValid, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
									Message="{helpers:ResourceString Name=InvalidTagNameWarning}"
									Severity="Error"
									Style="{StaticResource CompactInfoBarStyle}"
									ToolTipService.ToolTip="{helpers:ResourceString Name=TagNameRules}" />

								<!--  Cancel  -->
								<Button Command="{x:Bind ViewModel.CancelNewTagCommand, Mode=OneWay}" Content="{helpers:ResourceString Name=Cancel}" />

								<!--  Save Changes  -->
								<Button
									Command="{x:Bind ViewModel.SaveNewTagCommand, Mode=OneWay}"
									Content="{helpers:ResourceString Name=Create}"
									IsEnabled="{x:Bind ViewModel.NewTag.IsNameValid, Mode=OneWay}"
									Style="{StaticResource AccentButtonStyle}" />
							</StackPanel>
						</Grid>

						<ListView
							x:Name="TagsList"
							MaxHeight="500"
							Padding="12"
							HorizontalAlignment="Stretch"
							AllowDrop="True"
							CanReorderItems="True"
							IsItemClickEnabled="True"
							ItemsSource="{x:Bind ViewModel.Tags, Mode=TwoWay}"
							ReorderMode="Enabled"
							SelectionMode="None">
							<ListView.ItemTemplate>
								<DataTemplate xmlns:vm="using:Files.Backend.ViewModels.FileTags" x:DataType="vm:ListedTagViewModel">
									<Grid ColumnSpacing="16">
										<Grid.KeyboardAccelerators>
											<KeyboardAccelerator Key="Escape" Invoked="KeyboardAccelerator_Invoked" />
										</Grid.KeyboardAccelerators>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<StackPanel
											Height="24"
											Padding="8,0"
											HorizontalAlignment="Left"
											VerticalAlignment="Center"
											BorderBrush="{x:Bind NewColor, Mode=OneWay, Converter={StaticResource StringToBrushConverter}}"
											BorderThickness="1"
											CornerRadius="12"
											Orientation="Horizontal"
											ToolTipService.ToolTip="{x:Bind Tag.Name}">
											<FontIcon
												FontSize="12"
												Foreground="{x:Bind NewColor, Mode=OneWay, Converter={StaticResource StringToBrushConverter}}"
												Glyph="&#xE1CB;" />
											<TextBlock
												x:Name="TagName"
												Padding="8,0,0,0"
												VerticalAlignment="Center"
												FontSize="12"
												LineHeight="18"
												Text="{x:Bind Tag.Name}"
												TextTrimming="CharacterEllipsis" />
										</StackPanel>

										<StackPanel
											Grid.Column="1"
											Orientation="Horizontal"
											Spacing="8"
											Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
											<TextBox
												x:Name="TagNameTextBox"
												Width="200"
												VerticalAlignment="Center"
												KeyDown="RenameTextBox_KeyDown"
												Text="{x:Bind NewName, Mode=TwoWay}"
												Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
												<TextBox.Resources>
													<SolidColorBrush x:Key="TextControlBackgroundFocused" Color="{ThemeResource SolidBackgroundFillColorSecondary}" />
												</TextBox.Resources>
											</TextBox>

											<Button
												Margin="8,0"
												Padding="0"
												AutomationProperties.Name="{helpers:ResourceString Name=TagColor}">
												<StackPanel Orientation="Horizontal">
													<Border
														Width="20"
														Height="20"
														Margin="4"
														Background="{x:Bind NewColor, Mode=OneWay}"
														CornerRadius="4" />
													<FontIcon
														Margin="8,4,10,4"
														FontSize="12"
														Glyph="&#xE019;" />
												</StackPanel>
												<Button.Flyout>
													<Flyout>
														<controls:ColorPicker ColorChanged="EditColorPicker_ColorChanged" Color="{x:Bind NewColor, Mode=TwoWay}" />
													</Flyout>
												</Button.Flyout>
											</Button>
										</StackPanel>

										<StackPanel
											Grid.Column="2"
											Orientation="Horizontal"
											Visibility="{x:Bind IsEditing, Converter={StaticResource InvertedBoolVisibilityConverter}, Mode=OneWay}">
											<Button
												x:Name="EditTagButton"
												Padding="8,4"
												Background="Transparent"
												BorderBrush="Transparent"
												Click="EditTag_Click"
												Content="{helpers:ResourceString Name=Edit}" />

											<Button
												x:Name="DeleteTagButton"
												Padding="8,4"
												Background="Transparent"
												BorderBrush="Transparent"
												Click="RemoveTag_Click"
												Content="{helpers:ResourceString Name=Delete}" />
										</StackPanel>

										<StackPanel
											Grid.Column="2"
											Orientation="Horizontal"
											Spacing="12"
											Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
											<InfoBar
												Height="32"
												IsClosable="False"
												IsOpen="{x:Bind IsNameValid, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
												Message="{helpers:ResourceString Name=InvalidTagNameWarning}"
												Severity="Error"
												Style="{StaticResource CompactInfoBarStyle}"
												ToolTipService.ToolTip="{helpers:ResourceString Name=TagNameRules}" />

											<Button
												x:Name="CancelChangesButton"
												Click="CancelRenameTag_Click"
												Content="{helpers:ResourceString Name=Cancel}" />

											<Button
												x:Name="SaveChangesButton"
												Click="CommitRenameTag_Click"
												Content="{helpers:ResourceString Name=SaveChanges}"
												IsEnabled="{x:Bind CanCommit, Mode=OneWay}"
												Style="{StaticResource AccentButtonStyle}" />
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</StackPanel>
				</local:SettingsBlockControl.ExpandableContent>
			</local:SettingsBlockControl>
		</StackPanel>
	</Grid>
</Page>