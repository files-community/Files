<Page
	x:Class="Files.App.Views.PropertiesSecurityAdvanced"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:behaviors="using:CommunityToolkit.WinUI.UI.Behaviors"
	xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:perm="using:Files.App.Filesystem.Permissions"
	d:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
	d:Height="550"
	d:Width="850"
	Background="{ThemeResource App.Theme.BackgroundBrush}"
	KeyDown="Page_KeyDown"
	Loaded="Properties_Loaded"
	Unloaded="Properties_Unloaded"
	mc:Ignorable="d">

	<Page.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ms-appx:///ResourceDictionaries/PropertiesStyles.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<converters:BoolNegationConverter x:Key="BoolNegationConverter" />
			<converters:BoolToObjectConverter
				x:Key="BoolToMinWidthConverter"
				FalseValue="0"
				TrueValue="200" />
			<converters:BoolToObjectConverter
				x:Key="BoolToWidthConverter"
				FalseValue="0"
				TrueValue="*" />
		</ResourceDictionary>
	</Page.Resources>

	<Grid RowSpacing="4">
		<Grid.RowDefinitions>
			<RowDefinition Height="32" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<TextBlock
			Margin="12,4,0,0"
			VerticalAlignment="Center"
			Text="{x:Bind DialogTitle}" />

		<ScrollViewer Grid.Row="1">
			<StackPanel Padding="12,0,12,12" Spacing="8">
				<Grid
					Padding="8"
					Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
					BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
					BorderThickness="1"
					ColumnSpacing="8"
					CornerRadius="4">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<TextBlock
						Grid.Column="0"
						Padding="8,0,0,0"
						VerticalAlignment="Center"
						Text="{helpers:ResourceString Name=SecurityOwnerLabel/Text}" />

					<StackPanel
						Grid.Column="2"
						Orientation="Horizontal"
						Spacing="12">
						<FontIcon
							x:Name="FontIcon"
							VerticalAlignment="Center"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							FontSize="16"
							Glyph="{x:Bind ViewModel.FilePermissions.Owner.Glyph, Mode=OneWay}" />

						<TextBlock
							x:Name="OwnerText"
							VerticalAlignment="Center"
							x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Mode=OneWay}">
							<Run Text="{x:Bind ViewModel.FilePermissions.Owner.DisplayName, Mode=OneWay}" />
							<Span FontWeight="Light">&#160;(</Span>
							<Run FontWeight="Light" Text="{x:Bind ViewModel.FilePermissions.Owner.FullNameOrSid, Mode=OneWay}" />
							<Span FontWeight="Light">)</Span>
						</TextBlock>

						<TextBlock
							x:Name="UnknownOwnerText"
							VerticalAlignment="Center"
							x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
							Text="{helpers:ResourceString Name=SecurityUnknownOwnerText/Text}" />

						<Button
							Padding="8,6"
							VerticalAlignment="Center"
							Background="Transparent"
							BorderBrush="Transparent"
							Command="{x:Bind ViewModel.EditOwnerCommand}">
							<FontIcon FontSize="16" Glyph="&#xE104;" />
						</Button>
					</StackPanel>
				</Grid>

				<Grid
					Padding="8,8,8,8"
					Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
					BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
					BorderThickness="1"
					CornerRadius="4"
					RowSpacing="4">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<TextBlock
						Grid.Row="0"
						Grid.Column="0"
						Padding="8"
						VerticalAlignment="Center"
						Text="{helpers:ResourceString Name=SecurityAdvancedPermissionsLabel/Text}" />

					<StackPanel
						Grid.Row="0"
						Grid.Column="1"
						Orientation="Horizontal"
						Spacing="4">
						<Button
							Padding="8,6"
							Background="Transparent"
							BorderBrush="Transparent"
							Command="{x:Bind ViewModel.AddAccessRuleCommand}">
							<FontIcon FontSize="16" Glyph="&#xE109;" />
						</Button>
						<Button
							Padding="8,6"
							Background="Transparent"
							BorderBrush="Transparent"
							Command="{x:Bind ViewModel.RemoveAccessRuleCommand}">
							<FontIcon FontSize="16" Glyph="&#xE108;" />
						</Button>
					</StackPanel>

					<MenuFlyoutSeparator
						Grid.Row="1"
						Grid.Column="0"
						Grid.ColumnSpan="2"
						Margin="-12,0"
						Background="{ThemeResource CardStrokeColorDefaultBrush}" />

					<ListView
						x:Name="ListView"
						Grid.Row="2"
						Grid.ColumnSpan="2"
						HorizontalAlignment="Stretch"
						x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Mode=OneWay}"
						ItemsSource="{x:Bind ViewModel.FilePermissions.AccessRules, Mode=OneWay}"
						ScrollViewer.HorizontalScrollBarVisibility="Auto"
						ScrollViewer.HorizontalScrollMode="Auto"
						SelectionChanged="ListView_SelectionChanged"
						SelectionMode="Single">
						<i:Interaction.Behaviors>
							<behaviors:StickyHeaderBehavior />
						</i:Interaction.Behaviors>
						<ListView.ItemContainerStyle>
							<Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
								<Setter Property="MinHeight" Value="1" />
								<Setter Property="Height" Value="{ThemeResource ListItemHeight}" />
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.Header>
							<Border BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="0,0,0,1">
								<Grid Margin="12,0,12,0" Padding="0,8,0,8">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="32" />
										<ColumnDefinition Width="70" />
										<ColumnDefinition Width="*" MinWidth="200" />
										<ColumnDefinition Width="*" MinWidth="160" />
										<ColumnDefinition Width="70" />
										<ColumnDefinition Width="{x:Bind ViewModel.IsFolder, Converter={StaticResource BoolToWidthConverter}, Mode=OneWay}" MinWidth="{x:Bind ViewModel.IsFolder, Converter={StaticResource BoolToMinWidthConverter}, Mode=OneWay}" />
									</Grid.ColumnDefinitions>

									<TextBlock
										Grid.Column="1"
										HorizontalAlignment="Center"
										FontSize="12"
										FontWeight="SemiLight"
										Text="{helpers:ResourceString Name=SecurityAdvancedTypeLabel/Text}" />
									<TextBlock
										Grid.Column="2"
										FontSize="12"
										FontWeight="SemiLight"
										Text="{helpers:ResourceString Name=SecurityAdvancedEntityLabel/Text}" />
									<TextBlock
										Grid.Column="3"
										FontSize="12"
										FontWeight="SemiLight"
										Text="{helpers:ResourceString Name=Access}" />
									<TextBlock
										Grid.Column="4"
										FontSize="12"
										FontWeight="SemiLight"
										Text="{helpers:ResourceString Name=SecurityAdvancedInheritedLabel/Text}" />
									<TextBlock
										x:Name="AppliesToLabel"
										Grid.Column="5"
										FontSize="12"
										FontWeight="SemiLight"
										Text="{helpers:ResourceString Name=SecurityAdvancedAppliesToLabel/Text}"
										Visibility="{x:Bind ViewModel.IsFolder, Mode=OneWay}" />
								</Grid>
							</Border>
						</ListView.Header>
						<ListView.ItemTemplate>
							<DataTemplate x:DataType="perm:FileSystemAccessRuleForUI">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="32" />
										<ColumnDefinition Width="70" />
										<ColumnDefinition Width="*" MinWidth="200" />
										<ColumnDefinition Width="*" MinWidth="160" />
										<ColumnDefinition Width="70" />
										<ColumnDefinition Width="{x:Bind IsFolder, Converter={StaticResource BoolToWidthConverter}, Mode=OneWay}" MinWidth="{x:Bind IsFolder, Converter={StaticResource BoolToMinWidthConverter}, Mode=OneWay}" />
									</Grid.ColumnDefinitions>

									<FontIcon
										x:Name="FontIcon"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										FontFamily="{StaticResource SymbolThemeFontFamily}"
										FontSize="16"
										Glyph="{x:Bind UserGroup.Glyph}" />

									<FontIcon
										x:Name="TypeIcon"
										Grid.Column="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										x:Load="{x:Bind IsEditEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
										FontFamily="{StaticResource SymbolThemeFontFamily}"
										FontSize="16"
										Glyph="{x:Bind Glyph, Mode=OneWay}" />

									<DropDownButton
										x:Name="TypeDropdown"
										Grid.Column="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										x:Load="{x:Bind IsEditEnabled, Mode=OneWay}">
										<DropDownButton.Content>
											<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{x:Bind Glyph, Mode=OneWay}" />
										</DropDownButton.Content>
										<DropDownButton.Flyout>
											<MenuFlyout Placement="Bottom">
												<MenuFlyoutItem
													Command="{x:Bind ChangeAccessControlTypeCommand}"
													CommandParameter="Allow"
													Text="{helpers:ResourceString Name=Allow}">
													<MenuFlyoutItem.Icon>
														<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF13E;" />
													</MenuFlyoutItem.Icon>
												</MenuFlyoutItem>
												<MenuFlyoutItem
													Command="{x:Bind ChangeAccessControlTypeCommand}"
													CommandParameter="Deny"
													Text="{helpers:ResourceString Name=SecurityDenyLabel/Text}">
													<MenuFlyoutItem.Icon>
														<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF140;" />
													</MenuFlyoutItem.Icon>
												</MenuFlyoutItem>
											</MenuFlyout>
										</DropDownButton.Flyout>
									</DropDownButton>

									<TextBlock
										Grid.Column="2"
										VerticalAlignment="Center"
										TextTrimming="CharacterEllipsis">
										<Run Text="{x:Bind UserGroup.DisplayName}" />
										<Span FontWeight="Light">&#160;(</Span>
										<Run FontWeight="Light" Text="{x:Bind UserGroup.FullNameOrSid}" />
										<Span FontWeight="Light">)</Span>
									</TextBlock>

									<TextBlock
										x:Name="RightsTextBox"
										Grid.Column="3"
										VerticalAlignment="Center"
										x:Load="{x:Bind IsEditEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
										Text="{x:Bind FileSystemRightsForUI, Mode=OneWay}"
										TextTrimming="CharacterEllipsis" />

									<DropDownButton
										x:Name="RightsDropdown"
										Grid.Column="3"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Center"
										HorizontalContentAlignment="Left"
										x:Load="{x:Bind IsEditEnabled, Mode=OneWay}">
										<DropDownButton.Content>
											<TextBlock Text="{x:Bind FileSystemRightsForUI, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
										</DropDownButton.Content>
										<DropDownButton.Flyout>
											<Flyout Placement="Bottom">
												<Grid Margin="-8" HorizontalAlignment="Center">
													<Grid.RowDefinitions>
														<RowDefinition Height="*" />
														<RowDefinition Height="Auto" />
													</Grid.RowDefinitions>
													<GridView
														MaxHeight="350"
														ItemsSource="{x:Bind GrantedPermissions, Mode=OneWay}"
														SelectionMode="None">
														<GridView.ItemsPanel>
															<ItemsPanelTemplate>
																<ItemsWrapGrid ItemWidth="184" Orientation="Vertical" />
															</ItemsPanelTemplate>
														</GridView.ItemsPanel>
														<GridView.ItemContainerStyle>
															<Style BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
																<Setter Property="HorizontalContentAlignment" Value="Left" />
															</Style>
														</GridView.ItemContainerStyle>
														<GridView.ItemTemplate>
															<DataTemplate x:DataType="perm:GrantedPermission">
																<CheckBox IsChecked="{x:Bind IsGranted, Mode=TwoWay}" IsEnabled="{x:Bind IsEditable}">
																	<TextBlock
																		Text="{x:Bind Name}"
																		TextTrimming="CharacterEllipsis"
																		TextWrapping="NoWrap" />
																</CheckBox>
															</DataTemplate>
														</GridView.ItemTemplate>
													</GridView>

													<ToggleButton
														Grid.Row="1"
														HorizontalAlignment="Center"
														Content="Show advanced permissions"
														IsChecked="{x:Bind AreAdvancedPermissionsShown, Mode=TwoWay}" />
												</Grid>
											</Flyout>
										</DropDownButton.Flyout>
									</DropDownButton>

									<TextBlock
										Grid.Column="4"
										VerticalAlignment="Center"
										Text="{x:Bind IsInheritedForUI}" />

									<TextBlock
										x:Name="InheritTextBox"
										Grid.Column="5"
										VerticalAlignment="Center"
										x:Load="{x:Bind IsEditEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
										Text="{x:Bind InheritanceFlagsForUI, Mode=OneWay}"
										TextTrimming="CharacterEllipsis"
										Visibility="{x:Bind IsFolder, Mode=OneWay}" />

									<DropDownButton
										x:Name="InheritDropdown"
										Grid.Column="5"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Center"
										HorizontalContentAlignment="Left"
										x:Load="{x:Bind IsEditEnabled, Mode=OneWay}"
										Visibility="{x:Bind IsFolder, Mode=OneWay}">
										<DropDownButton.Content>
											<TextBlock Text="{x:Bind InheritanceFlagsForUI, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
										</DropDownButton.Content>
										<DropDownButton.Flyout>
											<MenuFlyout Placement="Bottom">
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="None,None"
													Text="{helpers:ResourceString Name=SecurityAdvancedOnlyThisFolder/Text}" />
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="3,None"
													Text="{helpers:ResourceString Name=SecurityAdvancedFolderSubfoldersFiles/Text}" />
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="1,None"
													Text="{helpers:ResourceString Name=SecurityAdvancedFolderSubfolders/Text}" />
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="2,None"
													Text="{helpers:ResourceString Name=SecurityAdvancedFolderFiles/Text}" />
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="3,InheritOnly"
													Text="{helpers:ResourceString Name=SecurityAdvancedOnlySubfoldersFiles/Text}" />
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="1,InheritOnly"
													Text="{helpers:ResourceString Name=SecurityAdvancedOnlySubfolders/Text}" />
												<MenuFlyoutItem
													Command="{x:Bind ChangeInheritanceFlagsCommand}"
													CommandParameter="2,InheritOnly"
													Text="{helpers:ResourceString Name=SecurityAdvancedOnlyFiles/Text}" />
											</MenuFlyout>
										</DropDownButton.Flyout>
									</DropDownButton>
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>

					<TextBlock
						x:Name="CannotReadPropsText"
						Grid.Row="2"
						Padding="8"
						HorizontalAlignment="Left"
						x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
						Text="{helpers:ResourceString Name=SecurityAdvancedCannotReadProperties/Text}"
						TextWrapping="WrapWholeWords" />

					<Grid
						Grid.Row="3"
						Margin="0,12,0,0"
						ColumnSpacing="12">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<SplitButton
							x:Name="SplitButton"
							MaxWidth="200"
							Command="{x:Bind ViewModel.DisableInheritanceCommand}">
							<TextBlock Text="{x:Bind ViewModel.DisableInheritanceOption, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
							<SplitButton.Flyout>
								<MenuFlyout Placement="Top">
									<MenuFlyoutItem
										Command="{x:Bind ViewModel.SetDisableInheritanceOptionCommand}"
										CommandParameter="False,False"
										IsEnabled="{x:Bind ViewModel.FilePermissions.AreAccessRulesProtected, Mode=OneWay}"
										Text="{helpers:ResourceString Name=SecurityAdvancedInheritedEnable/Text}" />
									<MenuFlyoutItem
										Command="{x:Bind ViewModel.SetDisableInheritanceOptionCommand}"
										CommandParameter="True,True"
										IsEnabled="{x:Bind ViewModel.FilePermissions.AreAccessRulesProtected, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
										Text="{helpers:ResourceString Name=SecurityAdvancedInheritedConvert/Text}" />
									<MenuFlyoutItem
										Command="{x:Bind ViewModel.SetDisableInheritanceOptionCommand}"
										CommandParameter="True,False"
										IsEnabled="{x:Bind ViewModel.FilePermissions.AreAccessRulesProtected, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
										Text="{helpers:ResourceString Name=SecurityAdvancedInheritedRemove/Text}" />
								</MenuFlyout>
							</SplitButton.Flyout>
						</SplitButton>
						<Button
							x:Name="ReplaceChildPermissionsButton"
							Grid.Column="1"
							x:Load="{x:Bind ViewModel.IsFolder, Mode=OneWay}"
							Command="{x:Bind ViewModel.ReplaceChildPermissionsCommand}"
							ToolTipService.ToolTip="{helpers:ResourceString Name=SecurityAdvancedReplaceChildPermissions2/ToolTipService/ToolTip}"
							Visibility="Collapsed">
							<TextBlock Text="{helpers:ResourceString Name=SecurityAdvancedReplaceChildPermissions/Text}" TextTrimming="CharacterEllipsis" />
						</Button>
					</Grid>
				</Grid>
			</StackPanel>
		</ScrollViewer>

		<Grid
			Grid.Row="3"
			Padding="12"
			Background="{ThemeResource CardBackgroundFillColorSecondary}"
			BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
			BorderThickness="0,1,0,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Button
				x:Name="OKButton"
				Grid.Column="1"
				MinWidth="100"
				Margin="0,0,10,0"
				HorizontalAlignment="Right"
				Click="OKButton_Click"
				Content="{helpers:ResourceString Name=PropertiesDialogOKButton/Content}"
				Style="{StaticResource AccentButtonStyle}" />
			<Button
				x:Name="CancelButton"
				Grid.Column="2"
				MinWidth="100"
				HorizontalAlignment="Right"
				Click="CancelButton_Click"
				Content="{helpers:ResourceString Name=Cancel}" />
		</Grid>
	</Grid>
</Page>