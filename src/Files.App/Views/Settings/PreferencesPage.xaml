<Page
	x:Class="Files.App.Settings.PreferencesPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
	xmlns:converters1="using:Files.App.ValueConverters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
	xmlns:labs="using:CommunityToolkit.Labs.WinUI"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:uc="using:Files.App.UserControls"
	xmlns:vm="using:Files.App.ViewModels.Settings"
	mc:Ignorable="d">

	<Page.Resources>
		<ResourceDictionary>
			<converters:BoolNegationConverter x:Key="BoolNegationConverter" />
			<converters1:StringToBrushConverter x:Key="StringToBrushConverter" />

			<x:Double x:Key="SettingsCardSpacing">3</x:Double>

			<Style
				x:Key="SettingsSectionHeaderTextBlockStyle"
				BasedOn="{StaticResource BodyStrongTextBlockStyle}"
				TargetType="TextBlock">
				<Style.Setters>
					<Setter Property="Margin" Value="1,29,0,5" />
				</Style.Setters>
			</Style>
		</ResourceDictionary>
	</Page.Resources>

	<Page.DataContext>
		<vm:PreferencesViewModel x:Name="ViewModel" />
	</Page.DataContext>

	<Grid>
		<StackPanel Padding="24" Spacing="{StaticResource SettingsCardSpacing}">
			<StackPanel.ChildrenTransitions>
				<TransitionCollection>
					<EntranceThemeTransition />
				</TransitionCollection>
			</StackPanel.ChildrenTransitions>

			<TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{helpers:ResourceString Name=SettingsNavPreferences/Content}" />

			<!--  Right Click Menu  -->
			<TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=General}" />

			<!--  Language settings  -->
			<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=Language}">
				<labs:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xF2B7;" />
				</labs:SettingsCard.HeaderIcon>
				<ComboBox
					HorizontalAlignment="Left"
					AutomationProperties.Name="{helpers:ResourceString Name=Language}"
					ItemsSource="{x:Bind ViewModel.AppLanguages}"
					SelectedIndex="{x:Bind ViewModel.SelectedAppLanguageIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="vm:AppLanguageItem">
							<TextBlock Text="{x:Bind LanguageName}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</labs:SettingsCard>

			<!--  Date settings  -->
			<labs:SettingsCard
				HorizontalAlignment="Stretch"
				Description="{x:Bind ViewModel.DateFormatSample}"
				Header="{helpers:ResourceString Name=DateFormat}">
				<labs:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xEC92;" />
				</labs:SettingsCard.HeaderIcon>
				<ComboBox
					x:Name="DateFormatChooser"
					Grid.Column="1"
					AutomationProperties.Name="{helpers:ResourceString Name=DateFormat}"
					ItemsSource="{x:Bind ViewModel.DateFormats}"
					SelectedIndex="{x:Bind ViewModel.SelectedDateTimeFormatIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="vm:DateTimeFormatItem">
							<StackPanel Orientation="Vertical">
								<TextBlock Text="{x:Bind Label}" />
								<TextBlock
									FontSize="12"
									FontWeight="Light"
									Text="{x:Bind Sample1}"
									Visibility="{Binding IsDropDownOpen, ElementName=DateFormatChooser}" />
								<TextBlock
									FontSize="12"
									FontWeight="Light"
									Text="{x:Bind Sample2}"
									Visibility="{Binding IsDropDownOpen, ElementName=DateFormatChooser}" />
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</labs:SettingsCard>

			<!--  Search settings  -->
			<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=SettingsSearchUnindexedItems}">
				<labs:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xE721;" />
				</labs:SettingsCard.HeaderIcon>
				<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=SettingsSearchUnindexedItems}" IsOn="{x:Bind ViewModel.SearchUnindexedItems, Mode=TwoWay}" />
			</labs:SettingsCard>

			<!--  Startup settings  -->
			<labs:SettingsExpander HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=StartupSettings}">
				<labs:SettingsExpander.HeaderIcon>
					<FontIcon Glyph="&#xE7E8;" />
				</labs:SettingsExpander.HeaderIcon>
				<ComboBox AutomationProperties.Name="{helpers:ResourceString Name=StartupSettings}" SelectedIndex="{x:Bind ViewModel.SelectedStartupSettingIndex, Mode=OneWay}">
					<ComboBoxItem Content="{helpers:ResourceString Name=SettingsOnStartupOpenANewTab/Content}" IsSelected="{x:Bind ViewModel.OpenNewTabPageOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<ComboBoxItem Content="{helpers:ResourceString Name=SettingsOnStartupContinueWhereYouLeftOff/Content}" IsSelected="{x:Bind ViewModel.ContinueLastSessionOnStartUp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<ComboBoxItem
						x:Name="OpenSpecificPage"
						Content="{helpers:ResourceString Name=SettingsOnStartupOpenASpecificPage/Content}"
						IsSelected="{x:Bind ViewModel.OpenASpecificPageOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</ComboBox>
				<labs:SettingsExpander.Items>
					<labs:SettingsCard Visibility="{x:Bind ViewModel.OpenASpecificPageOnStartup, Mode=OneWay}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>
							<TextBlock
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								FontSize="16"
								Text="{helpers:ResourceString Name=SettingsOnStartupPages/Text}" />
							<CommandBar
								Grid.Column="1"
								Background="Transparent"
								DefaultLabelPosition="Right"
								IsOpen="False">
								<AppBarButton Icon="Add" Label="{helpers:ResourceString Name=Add}">
									<AppBarButton.Flyout>
										<MenuFlyout helpers:MenuFlyoutHelper.ItemsSource="{x:Bind ViewModel.AddFlyoutItemsSource, Mode=OneWay}" Placement="Bottom" />
									</AppBarButton.Flyout>
								</AppBarButton>
								<AppBarButton
									Command="{x:Bind ViewModel.ChangePageCommand}"
									Icon="Edit"
									IsEnabled="{x:Bind ViewModel.IsPageListEditEnabled, Mode=OneWay}"
									Label="{helpers:ResourceString Name=Edit}" />
								<AppBarButton
									Command="{x:Bind ViewModel.RemovePageCommand}"
									Icon="Delete"
									IsEnabled="{x:Bind ViewModel.IsPageListEditEnabled, Mode=OneWay}"
									Label="{helpers:ResourceString Name=Remove}" />
							</CommandBar>
							<ListView
								x:Name="PagesList"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								Margin="0,10"
								HorizontalAlignment="Stretch"
								AllowDrop="True"
								CanReorderItems="True"
								IsItemClickEnabled="True"
								ItemsSource="{x:Bind ViewModel.PagesOnStartupList, Mode=TwoWay}"
								SelectedIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}"
								SelectionMode="Single">
								<ListView.ItemTemplate>
									<DataTemplate xmlns:vm="using:Files.App.ViewModels.Settings" x:DataType="vm:PageOnStartupViewModel">
										<TextBlock
											Text="{x:Bind Text}"
											TextTrimming="CharacterEllipsis"
											ToolTipService.ToolTip="{x:Bind Text}" />
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</Grid>
					</labs:SettingsCard>
					<labs:SettingsCard Header="{helpers:ResourceString Name=OpenNewInstance}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=OpenNewInstance}" IsOn="{x:Bind ViewModel.AlwaysOpenANewInstance, Mode=TwoWay}" />
					</labs:SettingsCard>
					<labs:SettingsCard Header="{helpers:ResourceString Name=SettingsOpenInLogin}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=SettingsOpenInLogin}"
							IsEnabled="{x:Bind ViewModel.CanOpenInLogin, Mode=OneWay}"
							IsOn="{x:Bind ViewModel.OpenInLogin, Mode=TwoWay}">
							<i:Interaction.Behaviors>
								<icore:EventTriggerBehavior EventName="Toggled">
									<icore:InvokeCommandAction Command="{x:Bind ViewModel.OpenFilesAtStartupCommand, Mode=OneWay}" />
								</icore:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</ToggleSwitch>
					</labs:SettingsCard>
				</labs:SettingsExpander.Items>
			</labs:SettingsExpander>

			<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=SettingsMultitaskingAlwaysOpenDualPane}">
				<labs:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xE126;" />
				</labs:SettingsCard.HeaderIcon>
				<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=SettingsMultitaskingAlwaysOpenDualPane}" IsOn="{x:Bind ViewModel.AlwaysOpenDualPaneInNewTab, Mode=TwoWay}" />
			</labs:SettingsCard>

			<labs:SettingsExpander HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=Widgets}">
				<labs:SettingsExpander.HeaderIcon>
					<FontIcon Glyph="&#xF246;" />
				</labs:SettingsExpander.HeaderIcon>
				<labs:SettingsExpander.Items>
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=QuickAccess}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=QuickAccess}" IsOn="{x:Bind ViewModel.ShowQuickAccessWidget, Mode=TwoWay}" />
					</labs:SettingsCard>
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=Drives}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=Drives}" IsOn="{x:Bind ViewModel.ShowDrivesWidget, Mode=TwoWay}" />
					</labs:SettingsCard>
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=Bundles}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=Bundles}" IsOn="{x:Bind ViewModel.ShowBundlesWidget, Mode=TwoWay}" />
					</labs:SettingsCard>
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=FileTags}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=FileTags}" IsOn="{x:Bind ViewModel.ShowFileTagsWidget, Mode=TwoWay}" />
					</labs:SettingsCard>
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=RecentFiles}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=RecentFiles}" IsOn="{x:Bind ViewModel.ShowRecentFilesWidget, Mode=TwoWay}" />
					</labs:SettingsCard>
				</labs:SettingsExpander.Items>
			</labs:SettingsExpander>

			<!--  Right Click Menu  -->
			<TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=SettingsContextMenu/Text}" />

			<!--  Context menu options  -->
			<labs:SettingsExpander Header="{helpers:ResourceString Name=ContextMenuOptions}">
				<labs:SettingsExpander.HeaderIcon>
					<FontIcon Glyph="&#xE74C;" />
				</labs:SettingsExpander.HeaderIcon>
				<labs:SettingsExpander.Items>
					<!--  Open in new tab  -->
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=ShowOpenInNewTab}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=ShowOpenInNewTab}" IsOn="{x:Bind ViewModel.ShowOpenInNewTab, Mode=TwoWay}" />
					</labs:SettingsCard>
					<!--  Open in new window  -->
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=ShowOpenInNewWindow}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=ShowOpenInNewWindow}" IsOn="{x:Bind ViewModel.ShowOpenInNewWindow, Mode=TwoWay}" />
					</labs:SettingsCard>
					<!--  Open in new pane  -->
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=ShowOpenInNewPane}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=ShowOpenInNewPane}" IsOn="{x:Bind ViewModel.ShowOpenInNewPane, Mode=TwoWay}" />
					</labs:SettingsCard>
					<!--  Edit tags  -->
					<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=ShowEditTagsMenu}">
						<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=ShowEditTagsMenu}" IsOn="{x:Bind ViewModel.ShowEditTagsMenu, Mode=TwoWay}" />
					</labs:SettingsCard>
				</labs:SettingsExpander.Items>
			</labs:SettingsExpander>

			<!--  Overflow Options  -->
			<labs:SettingsCard HorizontalAlignment="Stretch" Header="{helpers:ResourceString Name=SettingsContextMenuOverflow}">
				<labs:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xE10C;" />
				</labs:SettingsCard.HeaderIcon>
				<ToggleSwitch AutomationProperties.Name="{helpers:ResourceString Name=SettingsContextMenuOverflow}" IsOn="{x:Bind ViewModel.MoveShellExtensionsToSubMenu, Mode=TwoWay}" />
			</labs:SettingsCard>
		</StackPanel>

		<uc:RestartControl
			x:Name="RestartControl"
			VerticalAlignment="Bottom"
			ShowDialog="{x:Bind ViewModel.ShowRestartControl, Mode=TwoWay}" />
	</Grid>
</Page>
