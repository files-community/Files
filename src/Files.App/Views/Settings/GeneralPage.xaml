<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<Page
	x:Class="Files.App.Views.Settings.GeneralPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:uc="using:Files.App.UserControls"
	xmlns:vm="using:Files.App.ViewModels.Settings"
	DataContext="{x:Bind ViewModel}"
	mc:Ignorable="d">

	<Grid x:Name="RootGrid">
		<StackPanel Spacing="{StaticResource SettingsCardSpacing}">
			<StackPanel.ChildrenTransitions>
				<TransitionCollection>
					<EntranceThemeTransition />
				</TransitionCollection>
			</StackPanel.ChildrenTransitions>

			<!--  Title (General)  -->
			<TextBlock Style="{StaticResource SettingsHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=General}" />

			<!--  Language settings  -->
			<uc:SettingsCard Header="{helpers:ResourceString Name=Language}">
				<uc:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xF2B7;" />
				</uc:SettingsCard.HeaderIcon>
				<ComboBox
					x:Name="AppLanguagesComboBox"
					HorizontalAlignment="Left"
					AutomationProperties.Name="{helpers:ResourceString Name=Language}"
					ItemsSource="{x:Bind ViewModel.AppLanguages}"
					SelectedIndex="{x:Bind ViewModel.SelectedAppLanguageIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="vm:AppLanguageItem">
							<TextBlock Text="{x:Bind LanguageName}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</uc:SettingsCard>

			<!--  Date settings  -->
			<uc:SettingsCard Description="{x:Bind ViewModel.DateFormatSample}" Header="{helpers:ResourceString Name=DateFormat}">
				<uc:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xEC92;" />
				</uc:SettingsCard.HeaderIcon>
				<ComboBox
					x:Name="DateFormatChooser"
					Grid.Column="1"
					AutomationProperties.Name="{helpers:ResourceString Name=DateFormat}"
					ItemsSource="{x:Bind ViewModel.DateFormats}"
					SelectedIndex="{x:Bind ViewModel.SelectedDateTimeFormatIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="vm:DateTimeFormatItem">
							<StackPanel Orientation="Vertical">
								<TextBlock Text="{x:Bind Label}" />
								<TextBlock
									FontSize="12"
									FontWeight="Light"
									Text="{x:Bind Sample1}"
									Visibility="{Binding IsDropDownOpen, ElementName=DateFormatChooser}" />
								<TextBlock
									FontSize="12"
									FontWeight="Light"
									Text="{x:Bind Sample2}"
									Visibility="{Binding IsDropDownOpen, ElementName=DateFormatChooser}" />
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</uc:SettingsCard>

			<!--  Search settings  -->
			<uc:SettingsCard Header="{helpers:ResourceString Name=SettingsSearchUnindexedItems}">
				<uc:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xE721;" />
				</uc:SettingsCard.HeaderIcon>
				<ToggleSwitch
					AutomationProperties.Name="{helpers:ResourceString Name=SettingsSearchUnindexedItems}"
					IsOn="{x:Bind ViewModel.SearchUnindexedItems, Mode=TwoWay}"
					Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
			</uc:SettingsCard>

			<!--  Startup settings  -->
			<uc:SettingsExpander Header="{helpers:ResourceString Name=StartupSettings}">
				<uc:SettingsExpander.HeaderIcon>
					<FontIcon Glyph="&#xE7E8;" />
				</uc:SettingsExpander.HeaderIcon>
				<uc:SettingsExpander.Content>
					<ComboBox AutomationProperties.Name="{helpers:ResourceString Name=StartupSettings}" SelectedIndex="{x:Bind ViewModel.SelectedStartupSettingIndex, Mode=OneWay}">
						<ComboBoxItem Content="{helpers:ResourceString Name=SettingsOnStartupOpenANewTab/Content}" IsSelected="{x:Bind ViewModel.OpenNewTabPageOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<ComboBoxItem Content="{helpers:ResourceString Name=SettingsOnStartupContinueWhereYouLeftOff/Content}" IsSelected="{x:Bind ViewModel.ContinueLastSessionOnStartUp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<ComboBoxItem
							x:Name="OpenSpecificPage"
							Content="{helpers:ResourceString Name=SettingsOnStartupOpenASpecificPage/Content}"
							IsSelected="{x:Bind ViewModel.OpenASpecificPageOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					</ComboBox>
				</uc:SettingsExpander.Content>
				<uc:SettingsExpander.Items>
					<StackPanel>
						<uc:SettingsCard Visibility="{x:Bind ViewModel.OpenASpecificPageOnStartup, Mode=OneWay}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<TextBlock
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									FontSize="16"
									Text="{helpers:ResourceString Name=SettingsOnStartupPages/Text}" />
								<CommandBar
									Grid.Column="1"
									Background="Transparent"
									DefaultLabelPosition="Right"
									IsOpen="False">
									<AppBarButton Icon="Add" Label="{helpers:ResourceString Name=Add}">
										<AppBarButton.Flyout>
											<MenuFlyout helpers:MenuFlyoutHelper.ItemsSource="{x:Bind ViewModel.AddFlyoutItemsSource, Mode=OneWay}" Placement="Bottom" />
										</AppBarButton.Flyout>
									</AppBarButton>
									<AppBarButton
										Command="{x:Bind ViewModel.ChangePageCommand}"
										Icon="Edit"
										IsEnabled="{x:Bind ViewModel.IsPageListEditEnabled, Mode=OneWay}"
										Label="{helpers:ResourceString Name=Edit}" />
									<AppBarButton
										Command="{x:Bind ViewModel.RemovePageCommand}"
										Icon="Delete"
										IsEnabled="{x:Bind ViewModel.IsPageListEditEnabled, Mode=OneWay}"
										Label="{helpers:ResourceString Name=Remove}" />
								</CommandBar>

								<ListView
									x:Name="PagesList"
									Grid.Row="1"
									Grid.ColumnSpan="2"
									Margin="0,10"
									AllowDrop="True"
									CanReorderItems="True"
									IsItemClickEnabled="True"
									ItemsSource="{x:Bind ViewModel.PagesOnStartupList, Mode=TwoWay}"
									SelectedIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}"
									SelectionMode="Single">
									<ListView.ItemTemplate>
										<DataTemplate xmlns:vm="using:Files.App.ViewModels.Settings" x:DataType="vm:PageOnStartupViewModel">
											<TextBlock
												Text="{x:Bind Text}"
												TextTrimming="CharacterEllipsis"
												ToolTipService.ToolTip="{x:Bind Text}" />
										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</Grid>
						</uc:SettingsCard>

						<uc:SettingsCard Header="{helpers:ResourceString Name=OpenNewInstance}">
							<ToggleSwitch
								AutomationProperties.Name="{helpers:ResourceString Name=OpenNewInstance}"
								IsOn="{x:Bind ViewModel.AlwaysOpenANewInstance, Mode=TwoWay}"
								Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
						</uc:SettingsCard>
					</StackPanel>
				</uc:SettingsExpander.Items>
			</uc:SettingsExpander>

			<uc:SettingsCard Header="{helpers:ResourceString Name=SettingsMultitaskingAlwaysOpenDualPane}">
				<uc:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xE89F;" />
				</uc:SettingsCard.HeaderIcon>
				<ToggleSwitch
					AutomationProperties.Name="{helpers:ResourceString Name=SettingsMultitaskingAlwaysOpenDualPane}"
					IsOn="{x:Bind ViewModel.AlwaysOpenDualPaneInNewTab, Mode=TwoWay}"
					Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
			</uc:SettingsCard>

			<uc:SettingsExpander Header="{helpers:ResourceString Name=Widgets}">
				<uc:SettingsExpander.HeaderIcon>
					<FontIcon Glyph="&#xF246;" />
				</uc:SettingsExpander.HeaderIcon>
				<uc:SettingsExpander.Items>
					<uc:SettingsCard Header="{helpers:ResourceString Name=QuickAccess}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=QuickAccess}"
							IsOn="{x:Bind ViewModel.ShowQuickAccessWidget, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=Drives}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=Drives}"
							IsOn="{x:Bind ViewModel.ShowDrivesWidget, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=FileTags}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=FileTags}"
							IsOn="{x:Bind ViewModel.ShowFileTagsWidget, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=RecentFiles}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=RecentFiles}"
							IsOn="{x:Bind ViewModel.ShowRecentFilesWidget, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
				</uc:SettingsExpander.Items>
			</uc:SettingsExpander>

			<!--  Section Header (Right Click Menu)  -->
			<TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=SettingsContextMenu/Text}" />

			<!--  Context menu options  -->
			<uc:SettingsExpander Header="{helpers:ResourceString Name=ContextMenuOptions}">
				<uc:SettingsExpander.HeaderIcon>
					<FontIcon Glyph="&#xE74C;" />
				</uc:SettingsExpander.HeaderIcon>
				<uc:SettingsExpander.Items>
					<uc:SettingsCard Header="{helpers:ResourceString Name=ShowOpenInNewTab}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=ShowOpenInNewTab}"
							IsOn="{x:Bind ViewModel.ShowOpenInNewTab, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=ShowOpenInNewWindow}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=ShowOpenInNewWindow}"
							IsOn="{x:Bind ViewModel.ShowOpenInNewWindow, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=ShowOpenInNewPane}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=ShowOpenInNewPane}"
							IsOn="{x:Bind ViewModel.ShowOpenInNewPane, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=ShowEditTagsMenu}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=ShowEditTagsMenu}"
							IsOn="{x:Bind ViewModel.ShowEditTagsMenu, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
					<uc:SettingsCard Header="{helpers:ResourceString Name=ShowSendToMenu}">
						<ToggleSwitch
							AutomationProperties.Name="{helpers:ResourceString Name=ShowSendToMenu}"
							IsOn="{x:Bind ViewModel.ShowSendToMenu, Mode=TwoWay}"
							Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
					</uc:SettingsCard>
				</uc:SettingsExpander.Items>
			</uc:SettingsExpander>

			<!--  Overflow Options  -->
			<uc:SettingsCard Header="{helpers:ResourceString Name=SettingsContextMenuOverflow}">
				<uc:SettingsCard.HeaderIcon>
					<FontIcon Glyph="&#xE712;" />
				</uc:SettingsCard.HeaderIcon>
				<ToggleSwitch
					AutomationProperties.Name="{helpers:ResourceString Name=SettingsContextMenuOverflow}"
					IsOn="{x:Bind ViewModel.MoveShellExtensionsToSubMenu, Mode=TwoWay}"
					Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
			</uc:SettingsCard>

		</StackPanel>

		<!--  Restart Teaching Tip  -->
		<TeachingTip
			IsLightDismissEnabled="True"
			IsOpen="{x:Bind ViewModel.ShowRestartControl, Mode=TwoWay}"
			Subtitle="{helpers:ResourceString Name=RestartNotificationText/Text}"
			Target="{x:Bind AppLanguagesComboBox}">
			<StackPanel
				x:Name="ButtonsStackPanel"
				Padding="0,8,0,0"
				HorizontalAlignment="Right"
				Orientation="Horizontal"
				Spacing="8">

				<Button
					x:Name="YesButton"
					MinWidth="140"
					Command="{x:Bind ViewModel.RestartCommand, Mode=OneWay}"
					Content="{helpers:ResourceString Name=Yes}"
					Style="{ThemeResource AccentButtonStyle}" />

				<Button
					x:Name="NoButton"
					MinWidth="140"
					Command="{x:Bind ViewModel.CancelRestartCommand, Mode=OneWay}"
					Content="{helpers:ResourceString Name=No}" />

			</StackPanel>
		</TeachingTip>

	</Grid>
</Page>
