<!--  Copyright (c) 2024 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<Page
	x:Class="Files.App.Views.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sidebar="using:Files.App.UserControls.Sidebar"
	xmlns:tabbar="using:Files.App.UserControls.TabBar"
	xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
	xmlns:uc="using:Files.App.UserControls"
	xmlns:viewmodels="using:Files.App.ViewModels"
	xmlns:wctconverters="using:CommunityToolkit.WinUI.UI.Converters"
	AllowDrop="True"
	Background="{ThemeResource App.Theme.BackgroundBrush}"
	DataContext="{x:Bind ViewModel, Mode=OneWay}"
	HighContrastAdjustment="None"
	KeyboardAcceleratorPlacementMode="Hidden"
	Loaded="Page_Loaded"
	NavigationCacheMode="Required"
	SizeChanged="Page_SizeChanged"
	mc:Ignorable="d">

	<Page.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ms-appx:///ResourceDictionaries/DefaultGridSplitterStyle.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<x:Boolean x:Key="True">True</x:Boolean>
			<x:Boolean x:Key="False">False</x:Boolean>

			<wctconverters:BoolNegationConverter x:Key="BoolNegationConverter" />


			<MenuFlyout x:Key="SidebarContextMenu">
				<ToggleMenuFlyoutItem IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowPinnedFoldersSection, Mode=TwoWay}" Text="{helpers:ResourceString Name=Pinned}" />
				<ToggleMenuFlyoutItem IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowLibrarySection, Mode=TwoWay}" Text="{helpers:ResourceString Name=SidebarLibraries}" />
				<ToggleMenuFlyoutItem IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowDrivesSection, Mode=TwoWay}" Text="{helpers:ResourceString Name=Drives}" />
				<ToggleMenuFlyoutItem IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowCloudDrivesSection, Mode=TwoWay}" Text="{helpers:ResourceString Name=SidebarCloudDrives}" />
				<ToggleMenuFlyoutItem IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowNetworkSection, Mode=TwoWay}" Text="{helpers:ResourceString Name=Network}" />
				<ToggleMenuFlyoutItem IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowWslSection, Mode=TwoWay}" Text="{helpers:ResourceString Name=WSL}" />
				<ToggleMenuFlyoutItem
					x:Name="SidebarContextMenuFileTagsSection"
					IsChecked="{x:Bind SidebarAdaptiveViewModel.ShowFileTagsSection, Mode=TwoWay}"
					Text="{helpers:ResourceString Name=FileTags}" />
			</MenuFlyout>
		</ResourceDictionary>
	</Page.Resources>

	<Page.KeyboardAccelerators>
		<KeyboardAccelerator Key="Number1" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number2" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number3" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number4" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number5" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number6" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number7" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number8" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
		<KeyboardAccelerator Key="Number9" Modifiers="Control">
			<i:Interaction.Behaviors>
				<icore:EventTriggerBehavior EventName="Invoked">
					<icore:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToNumberedTabKeyboardAcceleratorCommand}" />
				</icore:EventTriggerBehavior>
			</i:Interaction.Behaviors>
		</KeyboardAccelerator>
	</Page.KeyboardAccelerators>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<!--  Background Image  -->
		<Image
			Grid.RowSpan="2"
			HorizontalAlignment="{x:Bind ViewModel.AppThemeBackgroundImageHorizontalAlignment, Mode=OneWay}"
			VerticalAlignment="{x:Bind ViewModel.AppThemeBackgroundImageVerticalAlignment, Mode=OneWay}"
			Opacity="{x:Bind ViewModel.AppThemeBackgroundImageOpacity, Mode=OneWay}"
			Source="{x:Bind ViewModel.AppThemeBackgroundImageSource, Mode=OneWay}"
			Stretch="{x:Bind ViewModel.AppThemeBackgroundImageFit, Mode=OneWay}" />

		<Grid x:Name="RightMarginGrid" VerticalAlignment="Top">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!--  Tab Control  -->
			<tabbar:TabBar
				x:Name="TabControl"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				x:FieldModifier="public"
				x:Load="False"
				Loaded="HorizontalMultitaskingControl_Loaded"
				TabIndex="0"
				TabStripVisibility="Visible"
				Visibility="Visible">
				<tabbar:TabBar.FooterElement>
					<!--  Height is not divisble by four in order to properly align the button  -->
					<Button
						x:Name="HorizontalMultitaskingControlAddButton"
						Width="30"
						Height="30"
						Padding="8"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						AllowDrop="True"
						AutomationProperties.Name="{x:Bind Commands.NewTab.AutomationName}"
						Background="Transparent"
						BorderThickness="0"
						Command="{x:Bind Commands.NewTab}"
						DragOver="HorizontalMultitaskingControlAddButton_DragOver"
						Drop="HorizontalMultitaskingControlAddButton_Drop"
						ToolTipService.ToolTip="{x:Bind Commands.NewTab.LabelWithHotKey, Mode=OneWay}">
						<Button.Content>
							<FontIcon
								x:Name="HorizontalMultitaskingControlAddButtonIcon"
								FontSize="12"
								Glyph="&#xE710;" />
						</Button.Content>
					</Button>
				</tabbar:TabBar.FooterElement>
			</tabbar:TabBar>

			<!--  Address Bar  -->
			<uc:AddressToolbar
				x:Name="NavToolbar"
				Grid.Row="1"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				x:Load="False"
				Loaded="NavToolbar_Loaded"
				OngoingTasksViewModel="{x:Bind OngoingTasksViewModel}"
				ShowOngoingTasks="True"
				ShowSearchBox="True"
				ShowSettingsButton="{x:Bind WindowContext.IsCompactOverlay, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
				TabIndex="1" />

			<Button
				x:Name="TogglePaneButton"
				Margin="2,2,0,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Background="Transparent"
				BorderThickness="0"
				Click="TogglePaneButton_Click"
				Style="{StaticResource PaneToggleButtonStyle}"
				Visibility="Collapsed" />
		</Grid>

		<!--  Root  -->
		<sidebar:SidebarView
			x:Name="SidebarControl"
			Grid.Row="1"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			DisplayMode="{x:Bind SidebarAdaptiveViewModel.SidebarDisplayMode, Mode=TwoWay}"
			Loaded="SidebarControl_Loaded"
			OpenPaneLength="{x:Bind UserSettingsService.AppearanceSettingsService.SidebarWidth, Mode=TwoWay}"
			SelectedItem="{x:Bind SidebarAdaptiveViewModel.SidebarSelectedItem, Mode=TwoWay}"
			ViewModel="{x:Bind SidebarAdaptiveViewModel}">

			<!--  Inner Content  -->
			<sidebar:SidebarView.InnerContent>
				<Grid
					x:Name="RootGrid"
					PreviewKeyDown="RootGrid_PreviewKeyDown"
					SizeChanged="RootGrid_SizeChanged">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition
							x:Name="ContentRow"
							Height="*"
							MinHeight="100" />
						<RowDefinition Height="Auto" />
						<RowDefinition x:Name="PaneRow" Height="Auto" />
						<RowDefinition Height="Auto" MinHeight="8" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							x:Name="ContentColumn"
							Width="*"
							MinWidth="100" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition x:Name="PaneColumn" Width="Auto" />
					</Grid.ColumnDefinitions>

					<!--  Inner Navigation Toolbar  -->
					<uc:InnerNavigationToolbar
						x:Name="InnerNavigationToolbar"
						Grid.Row="0"
						Grid.ColumnSpan="3"
						Margin="0,0,0,4"
						x:Load="False"
						Loaded="NavToolbar_Loaded"
						ShowPreviewPaneButton="{x:Bind ViewModel.ShouldPreviewPaneBeDisplayed, Mode=OneWay}"
						ShowViewControlButton="{x:Bind ViewModel.ShouldViewControlBeDisplayed, Mode=OneWay}"
						TabIndex="2" />

					<!--  Shell Panes  -->
					<ContentPresenter
						x:Name="PageContent"
						Grid.Row="1"
						Grid.Column="0"
						HorizontalAlignment="Stretch"
						HorizontalContentAlignment="Stretch"
						Content="{x:Bind ViewModel.SelectedTabItem.ContentFrame, Mode=OneWay}" />

					<!--  Sizer  -->
					<toolkit:GridSplitter
						x:Name="PaneSplitter"
						Grid.Row="1"
						Grid.Column="1"
						x:Load="{x:Bind ViewModel.ShouldPreviewPaneBeActive, Mode=OneWay}"
						ManipulationCompleted="PaneSplitter_ManipulationCompleted"
						ManipulationStarted="PaneSplitter_ManipulationStarted"
						Opacity="0"
						ResizeBehavior="BasedOnAlignment"
						Style="{StaticResource DefaultGridSplitterStyle}" />

					<!--  Info Pane  -->
					<uc:InfoPane
						x:Name="PreviewPane"
						Grid.Row="1"
						Grid.Column="2"
						HorizontalContentAlignment="Stretch"
						x:Load="{x:Bind ViewModel.ShouldPreviewPaneBeActive, Mode=OneWay}"
						Loaded="PreviewPane_Loaded"
						Unloaded="PreviewPane_Unloaded" />

					<!--  Status Bar  -->
					<uc:StatusBar
						x:Name="StatusBar"
						Grid.Row="4"
						Grid.ColumnSpan="3"
						x:Load="False"
						ShowInfoText="{x:Bind SidebarAdaptiveViewModel.PaneHolder.ActivePaneOrColumn.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
						Visibility="{x:Bind SidebarAdaptiveViewModel.PaneHolder.ActivePaneOrColumn.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}" />
				</Grid>
			</sidebar:SidebarView.InnerContent>
		</sidebar:SidebarView>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="WindowAdaptiveStates">
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger x:Name="CollapseSearchBoxAdaptiveTrigger" MinWindowWidth="750" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState x:Name="CollapseSearchBoxState">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="NavToolbar.ShowSearchBox" Value="False" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="SidebarStates">
				<VisualState x:Name="NormalSidebarState">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="TabControl.Margin" Value="48,0,0,0" />
						<Setter Target="SidebarControl.DisplayMode" Value="Minimal" />
						<Setter Target="TogglePaneButton.Visibility" Value="Visible" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="MinimalSidebarState">
					<VisualState.StateTriggers>
						<AdaptiveTrigger x:Name="MinimalSidebarAdaptiveTrigger" MinWindowWidth="641" />
					</VisualState.StateTriggers>
				</VisualState>
			</VisualStateGroup>
			<!--<VisualStateGroup x:Name="InfoPaneStates">
				<VisualState x:Name="InfoPaneCollapsedState">
					<VisualState.Setters>
						<Setter Target="PaneRow.MinHeight" Value="0" />
						<Setter Target="PaneRow.MaxHeight" Value="PositiveInfinity" />
						<Setter Target="PaneRow.Height" Value="0" />
						<Setter Target="PaneColumn.MinWidth" Value="0" />
						<Setter Target="PaneColumn.MaxWidth" Value="PositiveInfinity" />
						<Setter Target="PaneColumn.Width" Value="0" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="InfoPaneRightPlacedState">
					<VisualState.Setters>
						<Setter Target="PreviewPane.(Grid.Row)" Value="1" />
						<Setter Target="PreviewPane.(Grid.Column)" Value="2" />

						<Setter Target="PaneSplitter.(Grid.Row)" Value="1" />
						<Setter Target="PaneSplitter.(Grid.Column)" Value="1" />
						<Setter Target="PaneSplitter.Width" Value="2" />
						<Setter Target="PaneSplitter.Height" Value="{x:Bind RootGrid.ActualHeight, Mode=OneWay}" />
						<Setter Target="PaneSplitter.GripperCursor" Value="10" />

						<Setter Target="PaneColumn.MinWidth" Value="{x:Bind PreviewPane.MinWidth, Mode=OneWay}" />
						<Setter Target="PaneColumn.MaxWidth" Value="{x:Bind PreviewPane.MaxWidth, Mode=OneWay}" />
						<Setter Target="PaneColumn.Width" Value="{x:Bind UserSettingsService.InfoPaneSettingsService.VerticalSizePx, Mode=OneWay}" />

						<Setter Target="PaneRow.MinHeight" Value="0" />
						<Setter Target="PaneRow.MaxHeight" Value="NaN" />
						<Setter Target="PaneRow.Height" Value="0" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="InfoPaneBottomPlacedState">
					<VisualState.Setters>
						<Setter Target="PreviewPane.(Grid.Row)" Value="3" />
						<Setter Target="PreviewPane.(Grid.Column)" Value="0" />

						<Setter Target="PaneSplitter.(Grid.Row)" Value="2" />
						<Setter Target="PaneSplitter.(Grid.Column)" Value="0" />
						<Setter Target="PaneSplitter.Width" Value="{x:Bind RootGrid.ActualWidth, Mode=OneWay}" />
						<Setter Target="PaneSplitter.Height" Value="2" />
						<Setter Target="PaneSplitter.GripperCursor" Value="8" />

						<Setter Target="PaneColumn.MinWidth" Value="0" />
						<Setter Target="PaneColumn.MaxWidth" Value="NaN" />
						<Setter Target="PaneColumn.Width" Value="0" />

						<Setter Target="PaneRow.MinHeight" Value="{x:Bind PreviewPane.MinHeight, Mode=OneWay}" />
						<Setter Target="PaneRow.MaxHeight" Value="{x:Bind PreviewPane.MaxHeight, Mode=OneWay}" />
						<Setter Target="PaneRow.Height" Value="{x:Bind UserSettingsService.InfoPaneSettingsService.HorizontalSizePx, Mode=OneWay}" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>-->
		</VisualStateManager.VisualStateGroups>
	</Grid>
</Page>
