<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<ContentDialog
	x:Class="Files.App.Dialogs.AccessControlEditorDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:wctconverters="using:CommunityToolkit.WinUI.UI.Converters"
	Title="{x:Bind ModifiableModel.DialogTitle, Mode=OneWay}"
	DataContext="{x:Bind ModifiableModel, Mode=OneWay}"
	DefaultButton="Primary"
	PrimaryButtonText="{helpers:ResourceString Name=Save}"
	RequestedTheme="{x:Bind helpers:ThemeHelper.RootTheme}"
	SecondaryButtonText="{helpers:ResourceString Name=Cancel}"
	Style="{StaticResource DefaultContentDialogStyle}"
	mc:Ignorable="d">

	<ContentDialog.Resources>
		<ResourceDictionary>

			<wctconverters:BoolNegationConverter x:Key="BoolNegationConverter" />
			<wctconverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
			<wctconverters:BoolToObjectConverter
				x:Key="NegateBoolToVisibilityConverter"
				FalseValue="Visible"
				TrueValue="Collapsed" />

		</ResourceDictionary>
	</ContentDialog.Resources>

	<Grid Margin="0,0,0,-24" RowSpacing="24">

		<ScrollViewer
			Height="360"
			MinWidth="360"
			VerticalScrollBarVisibility="Hidden">
			<StackPanel Margin="0,8,0,24" Spacing="16">

				<!--  Principal  -->
				<StackPanel Grid.Row="0" Spacing="8">
					<TextBlock
						Foreground="{ThemeResource TextFillColorSecondaryBrush}"
						Style="{StaticResource CaptionTextBlockStyle}"
						Text="{helpers:ResourceString Name=SecurityPrincipalWithColon}" />
					<TextBlock IsTextSelectionEnabled="True" Style="{StaticResource BodyTextBlockStyle}">
						<Run Text="{x:Bind ModifiableModel.Principal.DisplayName, Mode=OneWay}" />
						<Run Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{x:Bind ModifiableModel.Principal.FullNameHumanizedWithBrackes, Mode=OneWay}" />
					</TextBlock>
				</StackPanel>

				<!--  Access Type  -->
				<StackPanel
					x:Name="AccessControlTypePanel"
					Grid.Row="1"
					Spacing="8">
					<TextBlock
						Foreground="{ThemeResource TextFillColorSecondaryBrush}"
						Style="{StaticResource CaptionTextBlockStyle}"
						Text="{helpers:ResourceString Name=SecurityAccessTypeWithColon}" />
					<ComboBox
						x:Name="AccessControlTypeComboBox"
						MinWidth="256"
						IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
						ItemsSource="{x:Bind ModifiableModel.PossibleAccessControlTypes, Mode=OneWay}"
						SelectedItem="{x:Bind ModifiableModel.SelectedAccessControlType, Mode=TwoWay}" />
				</StackPanel>

				<!--  Access Inheritance Applies To  -->
				<StackPanel
					x:Name="AccessInheritanceAppliesToTypePanel"
					Grid.Row="1"
					x:Load="{x:Bind ModifiableModel.IsFolder, Mode=OneWay}"
					Spacing="8">
					<TextBlock
						Foreground="{ThemeResource TextFillColorSecondaryBrush}"
						Style="{StaticResource CaptionTextBlockStyle}"
						Text="{helpers:ResourceString Name=SecurityAppliesToWithColon}" />
					<ComboBox
						x:Name="AccessInheritanceAppliesToTypeComboBox"
						MinWidth="256"
						IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
						ItemsSource="{x:Bind ModifiableModel.PossibleAccessControlInheritanceAppliesToHumanizedTypes, Mode=OneWay}"
						SelectedIndex="{x:Bind ModifiableModel.SelectedAccessControlInheritanceAppliesToTypeIndex, Mode=TwoWay}" />
				</StackPanel>

				<!--  Access Controls  -->
				<StackPanel Grid.Row="2" Spacing="0">

					<!--  Header  -->
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
						<TextBlock
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Foreground="{ThemeResource TextFillColorSecondaryBrush}"
							Style="{StaticResource CaptionTextBlockStyle}"
							Text="{helpers:ResourceString Name=SecurityPermissionsWithColon}" />
						<HyperlinkButton
							x:Name="BasicAdvancedToggleSwitch"
							Padding="0"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Command="{x:Bind ModifiableModel.TogglePermissionsVisibilityCommand, Mode=OneWay}"
							Content="{x:Bind ModifiableModel.PermissionsVisibilityToggleLinkButtonContent, Mode=OneWay}" />
					</Grid>

					<Grid>

						<!--  Basic Access Controls  -->
						<StackPanel
							x:Name="BasicPermissionsPanel"
							VerticalAlignment="Top"
							Orientation="Vertical"
							Visibility="{x:Bind ModifiableModel.ShowAdvancedPermissions, Converter={StaticResource NegateBoolToVisibilityConverter}, Mode=OneWay}">
							<CheckBox
								x:Name="BasicPermissionFullControlCheckBox"
								Content="{helpers:ResourceString Name=SecurityFullControl}"
								IsChecked="{x:Bind ModifiableModel.FullControlAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="BasicPermissionModifyCheckBox"
								Content="{helpers:ResourceString Name=SecurityModify}"
								IsChecked="{x:Bind ModifiableModel.BasicModifyAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="BasicPermissionReadAndExecuteCheckBox"
								Content="{helpers:ResourceString Name=SecurityReadAndExecute}"
								IsChecked="{x:Bind ModifiableModel.BasicReadAndExecuteAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="BasicPermissionListFolderContentsCheckBox"
								x:Load="{x:Bind ModifiableModel.IsFolder, Mode=OneWay}"
								Content="{helpers:ResourceString Name=SecurityListFolderContents}"
								IsChecked="{x:Bind ModifiableModel.BasicReadAndExecuteAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="BasicPermissionReadCheckBox"
								Content="{helpers:ResourceString Name=SecurityRead}"
								IsChecked="{x:Bind ModifiableModel.BasicReadAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="BasicPermissionWriteCheckBox"
								Content="{helpers:ResourceString Name=SecurityWrite}"
								IsChecked="{x:Bind ModifiableModel.BasicWriteAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="BasicPermissionSpecialCheckBox"
								Content="{helpers:ResourceString Name=SecuritySpecialPermissions}"
								IsChecked="{x:Bind ModifiableModel.BasicSpecialPermissionsAccessControl, Mode=OneWay}"
								IsEnabled="False" />
						</StackPanel>

						<!--  Advanced Access Controls  -->
						<StackPanel
							x:Name="AdvancedPermissionsPanel"
							VerticalAlignment="Top"
							Orientation="Vertical"
							Visibility="{x:Bind ModifiableModel.ShowAdvancedPermissions, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
							<CheckBox
								x:Name="AdvancedPermissionFullControlAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityFullControl}"
								IsChecked="{x:Bind ModifiableModel.FullControlAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionTraverseAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityTraverseFolderOrExecuteFile}"
								IsChecked="{x:Bind ModifiableModel.AdvancedTraverseAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionReadDataAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityListFolderOrReadData}"
								IsChecked="{x:Bind ModifiableModel.AdvancedReadDataAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionReadAttributesAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityReadAttributes}"
								IsChecked="{x:Bind ModifiableModel.AdvancedReadAttributesAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionReadExtendedAttributesAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityReadExtendedAttributes}"
								IsChecked="{x:Bind ModifiableModel.AdvancedReadExtendedAttributesAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionWriteDataAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityCreateFilesOrWriteData}"
								IsChecked="{x:Bind ModifiableModel.AdvancedWriteDataAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionAppendDataAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityCreateFoldersOrAppendData}"
								IsChecked="{x:Bind ModifiableModel.AdvancedAppendDataAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionWriteAttributesAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityWriteAttributes}"
								IsChecked="{x:Bind ModifiableModel.AdvancedWriteAttributesAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionWriteExtendedAttributesAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityWriteExtendedAttributes}"
								IsChecked="{x:Bind ModifiableModel.AdvancedWriteExtendedAttributesAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionDeleteSubfoldersAndFilesAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityDeleteSubfoldersAndFiles}"
								IsChecked="{x:Bind ModifiableModel.AdvancedDeleteSubfoldersAndFilesAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
								Visibility="{x:Bind ModifiableModel.IsFolder, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionDeleteAccessCheckBox"
								Content="{helpers:ResourceString Name=Delete}"
								IsChecked="{x:Bind ModifiableModel.AdvancedDeleteAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionReadPermissionsAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityReadPermissions}"
								IsChecked="{x:Bind ModifiableModel.AdvancedReadPermissionsAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionChangePermissionsAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityChangePermissions}"
								IsChecked="{x:Bind ModifiableModel.AdvancedChangePermissionsAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
							<CheckBox
								x:Name="AdvancedPermissionTakeOwnershipAccessCheckBox"
								Content="{helpers:ResourceString Name=SecurityTakeOwnership}"
								IsChecked="{x:Bind ModifiableModel.AdvancedTakeOwnershipAccessControl, Mode=TwoWay}"
								IsEnabled="{x:Bind ModifiableModel.IsInherited, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
						</StackPanel>

					</Grid>

				</StackPanel>

			</StackPanel>
		</ScrollViewer>

	</Grid>
</ContentDialog>
