<ContentDialog
	x:Class="Files.App.Dialogs.FilesystemOperationDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ts="using:Files.App.TemplateSelectors"
	xmlns:tvc="using:CommunityToolkit.WinUI.UI.Converters"
	xmlns:vc="using:Files.App.ValueConverters"
	xmlns:vc2="using:Files.App.ValueConverters.EnumConverters"
	xmlns:vc3="using:Files.App.Converters"
	xmlns:vm="using:Files.Backend.ViewModels.Dialogs.FileSystemDialog"
	Title="{x:Bind ViewModel.Title, Mode=OneWay}"
	Closing="RootDialog_Closing"
	DataContext="{x:Bind ViewModel, Mode=OneWay}"
	DefaultButton="Primary"
	IsPrimaryButtonEnabled="{x:Bind ViewModel.PrimaryButtonEnabled, Mode=OneWay}"
	Opened="FilesystemOperationDialog_Opened"
	PrimaryButtonText="{x:Bind ViewModel.PrimaryButtonText, Mode=OneWay}"
	RequestedTheme="{x:Bind helpers:ThemeHelper.RootTheme}"
	SecondaryButtonCommand="{x:Bind ViewModel.SecondaryButtonClickCommand, Mode=OneWay}"
	SecondaryButtonText="{x:Bind ViewModel.SecondaryButtonText, Mode=OneWay}"
	Style="{StaticResource DefaultContentDialogStyle}"
	mc:Ignorable="d">

	<ContentDialog.Resources>

		<x:Double x:Key="ContentDialogMaxWidth">800</x:Double>

		<vc:ImageModelToImageConverter x:Key="ImageModelToImageConverter" />
		<vc:GenericEnumConverter x:Key="GenericEnumConverter" />
		<vc2:ConflictResolveOptionToIndexConverter x:Key="ConflictResolveOptionToIndexConverter" />
		<vc3:VisibilityInvertConverter x:Key="VisibilityInvertConverter" />
		<tvc:BoolNegationConverter x:Key="BoolNegationConverter" />

		<DataTemplate x:Key="ConflictItemDataTemplate" x:DataType="vm:FileSystemDialogConflictItemViewModel">
			<Grid ColumnSpacing="12">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="48" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<!--  Icon  -->
				<Image
					Grid.Column="0"
					Width="48"
					Height="48"
					VerticalAlignment="Center"
					Source="{x:Bind ItemIcon, Converter={StaticResource ImageModelToImageConverter}}" />

				<!--  Content  -->
				<Grid Grid.Column="1">

					<!--  Names  -->
					<StackPanel
						VerticalAlignment="Center"
						Spacing="4"
						Tapped="NameStackPanel_Tapped"
						Visibility="{x:Bind IsTextBoxVisible, Converter={StaticResource VisibilityInvertConverter}}">

						<!--  Before/After Name  -->
						<StackPanel Orientation="Horizontal" Spacing="8">
							<TextBlock
								Style="{StaticResource BodyTextBlockStyle}"
								Text="{x:Bind DisplayName}"
								ToolTipService.ToolTip="{x:Bind DisplayName}" />
							<FontIcon FontSize="10" Glyph="&#xE72A;" />
							<TextBlock
								Style="{StaticResource BodyTextBlockStyle}"
								Text="{x:Bind DestinationDisplayName}"
								TextTrimming="CharacterEllipsis"
								ToolTipService.ToolTip="{x:Bind DestinationDisplayName}" />
						</StackPanel>

						<!--  Before/After Folder  -->
						<StackPanel Orientation="Horizontal" Spacing="8">
							<TextBlock
								Foreground="{ThemeResource SystemAccentColor}"
								Style="{StaticResource BodyTextBlockStyle}"
								Text="{x:Bind SourceDirectoryDisplayName}"
								ToolTipService.ToolTip="{x:Bind SourcePath}" />
							<FontIcon
								FontSize="10"
								Foreground="{ThemeResource SystemAccentColor}"
								Glyph="&#xE72A;" />
							<TextBlock
								Foreground="{ThemeResource SystemAccentColor}"
								Style="{StaticResource BodyTextBlockStyle}"
								Text="{x:Bind DestinationDirectoryDisplayName}"
								ToolTipService.ToolTip="{x:Bind DestinationPath}" />
						</StackPanel>

					</StackPanel>

					<!--  Edit Name TextBox  -->
					<TextBox
						x:Name="NameEdit"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center"
						x:Load="{x:Bind IsTextBoxVisible}"
						Loaded="NameEdit_Loaded"
						LostFocus="NameEdit_LostFocus"
						Text="{x:Bind CustomName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

				</Grid>

				<!--  Conflict Resolve Options  -->
				<ComboBox
					x:Name="ConflictOptions"
					Grid.Column="2"
					Width="200"
					HorizontalAlignment="Right"
					VerticalAlignment="Center"
					x:Load="{x:Bind IsConflict}"
					Loaded="ConflictOptions_Loaded"
					SelectedIndex="{x:Bind ConflictResolveOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource ConflictResolveOptionToIndexConverter}}">
					<ComboBox.Items>
						<ComboBoxItem Content="{helpers:ResourceString Name=GenerateNewName}" />
						<ComboBoxItem Content="{helpers:ResourceString Name=ReplaceExisting}" />
						<ComboBoxItem Content="{helpers:ResourceString Name=Skip}" />
					</ComboBox.Items>
				</ComboBox>

			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="DefaultItemDataTemplate" x:DataType="vm:FileSystemDialogDefaultItemViewModel">
			<Grid ColumnSpacing="12">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<!--  Icon  -->
				<Image
					Grid.Column="0"
					Width="48"
					Height="48"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Source="{x:Bind ItemIcon, Converter={StaticResource ImageModelToImageConverter}}" />

				<!--  Content  -->
				<StackPanel
					Grid.Column="1"
					VerticalAlignment="Center"
					Spacing="4">
					<TextBlock Text="{x:Bind DisplayName}" />
					<TextBlock
						Opacity="0.8"
						Text="{x:Bind SourcePath}"
						ToolTipService.ToolTip="{x:Bind SourcePath}" />
				</StackPanel>

			</Grid>
		</DataTemplate>

	</ContentDialog.Resources>

	<Grid x:Name="RootGrid">
		<StackPanel Spacing="16">

			<Grid x:Load="{x:Bind ViewModel.FileSystemDialogMode.ConflictsExist, Mode=OneWay}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<!--  Apply To All  -->
				<TextBlock
					Grid.Column="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Text="{helpers:ResourceString Name=ApplyToAllConflictingItems}"
					TextWrapping="Wrap" />

				<!--  Conflict Resolve Option  -->
				<ComboBox
					Grid.Column="1"
					Width="200"
					HorizontalAlignment="Right"
					VerticalAlignment="Center"
					SelectedIndex="{x:Bind ViewModel.AggregatedResolveOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource GenericEnumConverter}, ConverterParameter='4-0,0-1,1-2,2-3'}">
					<ComboBox.Items>
						<ComboBoxItem Content="{helpers:ResourceString Name=Custom}" />
						<ComboBoxItem Content="{helpers:ResourceString Name=GenerateNewName}" />
						<ComboBoxItem Content="{helpers:ResourceString Name=ReplaceExisting}" />
						<ComboBoxItem Content="{helpers:ResourceString Name=Skip}" />
					</ComboBox.Items>
				</ComboBox>

			</Grid>

			<!--  Description  -->
			<TextBlock
				x:Name="DescriptionTextBlock"
				Foreground="{ThemeResource SystemFillColorCautionBrush}"
				Text="{x:Bind ViewModel.Description, Mode=OneWay}"
				TextWrapping="WrapWholeWords" />

			<!--  (Divider)  -->
			<Border
				Height="1"
				HorizontalAlignment="Stretch"
				Background="{ThemeResource DividerStrokeColorDefaultBrush}"
				Visibility="{x:Bind ViewModel.FileSystemDialogMode.ConflictsExist, Mode=OneWay}" />

			<!--  Permanently Delete  -->
			<CheckBox
				x:Name="PermanentlyDeleteCheckBox"
				x:Load="{x:Bind ViewModel.FileSystemDialogMode.IsInDeleteMode, Mode=OneWay}"
				Content="{helpers:ResourceString Name=DeleteItemsDialogPermanentlyDeleteCheckBox/Content}"
				IsChecked="{x:Bind ViewModel.DeletePermanently, Mode=TwoWay}"
				IsEnabled="{x:Bind ViewModel.IsDeletePermanentlyEnabled, Mode=OneWay}" />

			<!--  Conflicting File List  -->
			<ListView
				MaxHeight="200"
				IsItemClickEnabled="False"
				ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
				SelectionMode="None">

				<ListView.ItemTemplateSelector>
					<ts:FileSystemDialogItemSelector ConflictItemDataTemplate="{StaticResource ConflictItemDataTemplate}" DefaultItemDataTemplate="{StaticResource DefaultItemDataTemplate}" />
				</ListView.ItemTemplateSelector>

				<ListView.ItemsPanel>
					<ItemsPanelTemplate>
						<ItemsStackPanel HorizontalAlignment="Stretch" Orientation="Vertical" />
					</ItemsPanelTemplate>
				</ListView.ItemsPanel>

				<ListView.ItemContainerStyle>
					<Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="Padding" Value="0,12" />
						<Setter Property="IsTabStop" Value="False" />
					</Style>
				</ListView.ItemContainerStyle>

			</ListView>

		</StackPanel>

	</Grid>
</ContentDialog>