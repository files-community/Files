<UserControl
    x:Class="Files.UserControls.InnerNavigationToolbar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Files.Converters"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Files.UserControls"
    xmlns:local1="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vc="using:Files.Converters"
    xmlns:xh="using:Files.Helpers.XamlHelpers"
    d:DesignHeight="40"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="AccentColorFontIconStyle" TargetType="FontIcon" />
            <converters:LayoutModeToBoolConverter x:Key="LayoutModeConverter" />
            <converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters1:BoolToVisibilityConverter
                x:Key="NegatedBoolToVisibilityConverter"
                FalseValue="Visible"
                TrueValue="Collapsed" />
            <converters:IntToGroupOption x:Key="IntToGroupOption" />
            <converters:IntToSortOption x:Key="IntToSortOption" />
            <converters:IntToSortDirection x:Key="IntToSortDirection" />
            <x:Boolean x:Key="True">True</x:Boolean>
            <x:Boolean x:Key="False">False</x:Boolean>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ResourceDictionaries/ToolbarButtonStyle.xaml" />
                <ResourceDictionary Source="/ResourceDictionaries/PathIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid BorderBrush="{ThemeResource ControlStrokeColorDefault}" BorderThickness="0,0,0,1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <CommandBar
            x:Name="ContextCommandBar"
            Grid.Column="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            DefaultLabelPosition="Right"
            Loaded="ContextCommandBar_Loaded">
            <CommandBar.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
                    <SolidColorBrush x:Key="CommandBarBorderBrushOpen" Color="Transparent" />
                </ResourceDictionary>
            </CommandBar.Resources>
            <CommandBar.PrimaryCommands>
                <AppBarButton
                    x:Name="NewEmptySpaceAppBarButton"
                    x:Uid="BaseLayoutContextFlyoutNew"
                    IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsCreateButtonEnabledInPage, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Ctrl+Shift+N"
                    Label="New">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="N"
                            IsEnabled="False"
                            Modifiers="Control,Shift" />
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Flyout>
                        <MenuFlyout x:Name="NewEmptySpace" Opening="NewEmptySpace_Opening">
                            <MenuFlyoutItem
                                x:Name="ToolbarNewFolderItem"
                                x:Uid="ModernNavigationToolbaNewFolder"
                                Command="{x:Bind ViewModel.CreateNewFolderCommand, Mode=OneWay}"
                                Text="Folder">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8B7;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutSeparator x:Name="NewMenuFileFolderSeparator" />
                            <MenuFlyoutItem
                                x:Name="NewFile"
                                x:Uid="BaseLayoutContextFlyoutNewFile"
                                Command="{x:Bind ViewModel.CreateNewFileCommand, Mode=OneWay}"
                                CommandParameter="{x:Null}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.CanCreateFileInPage, Mode=OneWay}"
                                Text="File">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE7C3;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </AppBarButton.Flyout>

                    <local:ColoredIcon
                        Margin="0,1,0,-1"
                        BaseLayerGlyph="&#x0037;"
                        OverlayLayerGlyph="&#x0038;" />
                </AppBarButton>
                <AppBarSeparator />
                <AppBarButton
                    x:Name="CutButton"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.CutCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanCopy, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutCut/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutCut/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#x003D;" OverlayLayerGlyph="&#x003E;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Uid="NavigationToolbarCopy"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.CopyCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.CanCopy, Mode=OneWay}"
                    Label="Copy"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="Copy">
                    <local:ColoredIcon BaseLayerGlyph="&#x0021;" OverlayLayerGlyph="&#x0022;" />
                </AppBarButton>
                <AppBarButton
                    x:Name="PasteButton"
                    x:Uid="NavigationToolbarPaste"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.PasteItemsFromClipboardCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.InstanceViewModel.CanPasteInPage, local1:App.MainViewModel.IsPasteEnabled), Mode=OneWay}"
                    Label="Paste"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutContextFlyoutPaste/Text')}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="V"
                            IsEnabled="False"
                            Modifiers="Control" />
                    </AppBarButton.KeyboardAccelerators>
                    <local:ColoredIcon BaseLayerGlyph="&#x0023;" OverlayLayerGlyph="&#x0024;" />
                </AppBarButton>
                <AppBarButton
                    x:Name="RenameButton"
                    x:Uid="NavigationToolbarRename"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.Rename, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanRename, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutRename/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutRename/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#x0027;" OverlayLayerGlyph="&#x0028;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="ShareButton"
                    x:Uid="NavigationToolbarShare"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.Share, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanShare, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutShare/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutShare/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#x0025;" OverlayLayerGlyph="&#x0026;" />
                    </AppBarButton.Content>
                </AppBarButton>
                <AppBarButton
                    x:Name="DeleteButton"
                    x:Uid="NavigationToolbarDelete"
                    Width="Auto"
                    MinWidth="40"
                    Command="{x:Bind ViewModel.DeleteCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind converters:MultiBooleanConverter.AndConvert(ViewModel.CanCopy, ViewModel.InstanceViewModel.IsPageTypeNotHome), Mode=OneWay}"
                    Label="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutDelete/Text')}"
                    LabelPosition="Collapsed"
                    ToolTipService.ToolTip="{x:Bind GetLocalizedString('BaseLayoutItemContextFlyoutDelete/Text')}">
                    <AppBarButton.Content>
                        <local:ColoredIcon BaseLayerGlyph="&#x0035;" OverlayLayerGlyph="&#x0036;" />
                    </AppBarButton.Content>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
        <CommandBar
            x:Name="BaseCommandBar"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            DefaultLabelPosition="Right">
            <CommandBar.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
                    <SolidColorBrush x:Key="CommandBarBorderBrushOpen" Color="Transparent" />
                </ResourceDictionary>
            </CommandBar.Resources>
            <AppBarButton
                x:Name="WidgetsManager"
                x:Uid="NavToolbarWidgets"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                AccessKey="W"
                AutomationProperties.Name="Manage widgets"
                Label="Widgets"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Manage Widgets">
                <AppBarButton.Icon>
                    <FontIcon FontSize="10" Glyph="&#xF246;" />
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                        <StackPanel Spacing="12">
                            <TextBlock
                                x:Uid="NavToolbarManageWidgetsFlyoutHeader"
                                FontWeight="Medium"
                                Text="Manage Widgets" />
                            <StackPanel Spacing="4">
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowFolderWidget"
                                    Header="Show Folders widget"
                                    IsOn="{x:Bind ViewModel.ShowFolderWidgetWidget, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowDrivesWidget"
                                    Header="Show Drives widget"
                                    IsOn="{x:Bind ViewModel.ShowDrivesWidget, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowBundlesWidget"
                                    Header="Show Bundles widget"
                                    IsOn="{x:Bind ViewModel.ShowBundlesWidget, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowRecentFilesWidget"
                                    Header="Show Recent Files widget"
                                    IsOn="{x:Bind ViewModel.ShowRecentFilesWidget, Mode=TwoWay}" />
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Name="SelectionOptions"
                x:Uid="NavToolbarSelectionOptions"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                AccessKey="S"
                AutomationProperties.Name="Selection options"
                Label="Select"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Selection options">
                <AppBarButton.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <ToggleMenuFlyoutItem
                            x:Name="MultiselectMFI"
                            x:Uid="NavToolbarMultiselect"
                            IsChecked="{x:Bind MainViewModel.MultiselectEnabled, Mode=TwoWay}"
                            Text="Multiselect">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE762;" />
                            </MenuFlyoutItem.Icon>
                        </ToggleMenuFlyoutItem>
                        <MenuFlyoutItem
                            x:Name="SelectAllMFI"
                            x:Uid="NavToolbarSelectAll"
                            Command="{x:Bind ViewModel.SelectAllContentPageItemsCommand, Mode=OneWay}"
                            Text="Select All">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE8B3;" />
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator
                                    Key="A"
                                    IsEnabled="False"
                                    Modifiers="Control" />
                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem
                            x:Name="InvertSelectionMFI"
                            x:Uid="NavToolbarInvertSelection"
                            Command="{x:Bind ViewModel.InvertContentPageSelctionCommand, Mode=OneWay}"
                            Text="Invert Selection">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE746;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem
                            x:Name="ClearSelectionMFI"
                            x:Uid="NavToolbarClearSelection"
                            Command="{x:Bind ViewModel.ClearContentPageSelectionCommand, Mode=OneWay}"
                            Text="Clear Selection">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE8E6;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </AppBarButton.Flyout>

                <local:ColoredIcon BaseLayerGlyph="&#xF02B;" OverlayLayerGlyph="&#xF02C;" />
            </AppBarButton>
            <AppBarButton
                x:Name="ArrangementOptions"
                x:Uid="NavToolbarSortOptionsButton"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                AccessKey="A"
                AutomationProperties.Name="Sort"
                Label="Sort"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Sort">
                <AppBarButton.Content>
                    <local:ColoredIcon BaseLayerGlyph="&#xF029;" OverlayLayerGlyph="&#xF02A;" />
                </AppBarButton.Content>
                <AppBarButton.Flyout>
                    <MenuFlyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                        <MenuFlyoutSubItem Text="Sort by">
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionName"
                                IsChecked="{x:Bind ViewModel.IsSortedByName, Mode=TwoWay}"
                                Text="Name" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionDateModified"
                                IsChecked="{x:Bind ViewModel.IsSortedByDateModified, Mode=TwoWay}"
                                Text="Date modified" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionDateCreated"
                                IsChecked="{x:Bind ViewModel.IsSortedByDateCreated, Mode=TwoWay}"
                                Text="Date created" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionSize"
                                IsChecked="{x:Bind ViewModel.IsSortedBySize, Mode=TwoWay}"
                                Text="Size" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionType"
                                IsChecked="{x:Bind ViewModel.IsSortedByType, Mode=TwoWay}"
                                Text="Type" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionSyncStatus"
                                IsChecked="{x:Bind ViewModel.IsSortedBySyncStatus, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeCloudDrive, Mode=OneWay}"
                                Text="Sync status" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionFileTag"
                                IsChecked="{x:Bind ViewModel.IsSortedByFileTag, Mode=TwoWay}"
                                Visibility="{x:Bind AppSettings.AreFileTagsEnabled, Mode=OneWay}"
                                Text="File tag" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionOriginalFolder"
                                IsChecked="{x:Bind ViewModel.IsSortedByOriginalFolder, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="Original folder" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionDateDeleted"
                                IsChecked="{x:Bind ViewModel.IsSortedByDateDeleted, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="Date deleted" />
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem Text="Group by">
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarGroupByOptionNone"
                                IsChecked="{x:Bind ViewModel.IsGroupedByNone, Mode=TwoWay}"
                                Text="None" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionName"
                                IsChecked="{x:Bind ViewModel.IsGroupedByName, Mode=TwoWay}"
                                Text="Name" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionDateModified"
                                IsChecked="{x:Bind ViewModel.IsGroupedByDateModified, Mode=TwoWay}"
                                Text="Date modified" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionDateCreated"
                                IsChecked="{x:Bind ViewModel.IsGroupedByDateCreated, Mode=TwoWay}"
                                Text="Date created" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionSize"
                                IsChecked="{x:Bind ViewModel.IsGroupedBySize, Mode=TwoWay}"
                                Text="Size" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionType"
                                IsChecked="{x:Bind ViewModel.IsGroupedByType, Mode=TwoWay}"
                                Text="Type" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionSyncStatus"
                                IsChecked="{x:Bind ViewModel.IsGroupedBySyncStatus, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeCloudDrive, Mode=OneWay}"
                                Text="Sync status" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionFileTag"
                                IsChecked="{x:Bind ViewModel.IsGroupedByFileTag, Mode=TwoWay}"
                                Visibility="{x:Bind AppSettings.AreFileTagsEnabled, Mode=OneWay}"
                                Text="File tag" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionOriginalFolder"
                                IsChecked="{x:Bind ViewModel.IsGroupedByOriginalFolder, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="Original folder" />
                            <ToggleMenuFlyoutItem
                                x:Uid="NavToolbarArrangementOptionDateDeleted"
                                IsChecked="{x:Bind ViewModel.IsGroupedByDateDeleted, Mode=TwoWay}"
                                IsEnabled="{x:Bind ViewModel.InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}"
                                Text="Date deleted" />
                        </MenuFlyoutSubItem>
                        <ToggleMenuFlyoutItem
                            x:Uid="NavToolbarSortDirectionOptionAscending"
                            IsChecked="{x:Bind ViewModel.IsSortedAscending, Mode=TwoWay}"
                            Text="Ascending order" />
                        <ToggleMenuFlyoutItem
                            x:Uid="NavToolbarSortDirectionOptionDescending"
                            IsChecked="{x:Bind ViewModel.IsSortedDescending, Mode=TwoWay}"
                            Text="Descending order" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Name="LayoutOptionsButton"
                x:Uid="NavToolbarLayoutOptionsButton"
                Width="Auto"
                MinWidth="40"
                x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                AccessKey="L"
                AutomationProperties.Name="Layout"
                Label="Layout"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Layout">
                <AppBarButton.Icon>
                    <FontIcon FontSize="10" Glyph="&#xE152;" />
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                        <StackPanel Spacing="12">
                            <TextBlock
                                x:Uid="NavToolbarLayout"
                                FontWeight="Medium"
                                Text="Layout" />

                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <RadioButton
                                    x:Uid="NavToolbarDetailsView"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeDetailsView, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=DetailsInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Details View (Ctrl+Shift+1)">
                                    <FontIcon FontSize="16" Glyph="&#xE179;" />
                                </RadioButton>
                                <RadioButton
                                    x:Uid="NavToolbarTilesView"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeTiles, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=TilesInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Tiles View (Ctrl+Shift+2)">
                                    <FontIcon FontSize="16" Glyph="&#xE15C;" />
                                </RadioButton>
                                <RadioButton
                                    x:Uid="NavToolbarGridViewSmall"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeGridViewSmall, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=SmallGridInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Grid View (Small) (Ctrl+Shift+3)">
                                    <FontIcon FontSize="16" Glyph="&#xE80A;" />
                                </RadioButton>
                                <RadioButton
                                    x:Uid="NavToolbarGridViewMedium"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeGridViewMedium, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=MediumGridInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Grid View (Medium) (Ctrl+Shift+4)">
                                    <FontIcon FontSize="16" Glyph="&#xF0E2;" />
                                </RadioButton>
                                <RadioButton
                                    x:Uid="NavToolbarGridViewLarge"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeGridViewLarge, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=LargeGridInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Grid View (Large) (Ctrl+Shift+5)">
                                    <FontIcon FontSize="16" Glyph="&#xE739;" />
                                </RadioButton>
                                <RadioButton
                                    x:Uid="NavToolbarColumnView"
                                    Width="36"
                                    Height="32"
                                    MinWidth="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{x:Bind ViewModel.InstanceViewModel.FolderSettings.ToggleLayoutModeColumnView, Mode=OneWay}"
                                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    IsChecked="{x:Bind ViewModel.InstanceViewModel.FolderSettings.LayoutModeInformation, Converter={StaticResource LayoutModeConverter}, Mode=OneWay, ConverterParameter=ColumnInfo}"
                                    Style="{StaticResource DefaultToggleButtonStyle}"
                                    ToolTipService.ToolTip="Column View (Ctrl+Shift+6)">
                                    <FontIcon
                                        FontFamily="{StaticResource CustomGlyph}"
                                        FontSize="16"
                                        Glyph="&#xF115;" />
                                </RadioButton>
                            </StackPanel>

                            <TextBlock
                                x:Uid="NavToolbarDisplayOptions"
                                FontWeight="Medium"
                                Text="Display Options" />
                            <StackPanel Spacing="4">
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowHiddenItems"
                                    Header="Show hidden items"
                                    IsOn="{x:Bind AppSettings.AreHiddenItemsVisible, Mode=TwoWay}" />
                                <ToggleSwitch
                                    x:Uid="NavToolbarShowFileExtensions"
                                    Header="Show file extensions"
                                    IsOn="{x:Bind AppSettings.ShowFileExtensions, Mode=TwoWay}" />
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarToggleButton
                x:Name="PreviewPane"
                x:Uid="PreviewPaneToggle"
                Width="Auto"
                MinWidth="40"
                AccessKey="P"
                AutomationProperties.Name="Toggle preview pane"
                IsChecked="{x:Bind AppSettings.PreviewPaneEnabled, Mode=TwoWay}"
                IsEnabled="{x:Bind ShowPreviewPaneButton, Mode=OneWay}"
                Label="Preview"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Toggle the preview pane (Ctrl+P)"
                Visibility="{x:Bind ShowPreviewPaneButton, Mode=OneWay}">
                <AppBarToggleButton.Content>
                    <local:ColoredIcon BaseLayerGlyph="&#x003b;" OverlayLayerGlyph="&#x003c;" />
                </AppBarToggleButton.Content>
            </AppBarToggleButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Name="NavToolbarNewPane"
                    x:Uid="NavigationToolbarNewPane"
                    x:Load="{x:Bind converters:MultiBooleanConverter.AndNotConvert(ShowMultiPaneControls, IsMultiPaneActive), Mode=OneWay}"
                    Command="{x:Bind ViewModel.OpenNewPaneCommand, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Alt+Shift++"
                    Label="New pane">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF117;" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="Add"
                            IsEnabled="False"
                            Modifiers="Menu,Shift" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarClosePane"
                    x:Uid="NavigationToolbarClosePane"
                    x:Load="{x:Bind IsMultiPaneActive, Mode=OneWay}"
                    Command="{x:Bind ViewModel.ClosePaneCommand, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Ctrl+Shift+W"
                    Label="Close pane">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE89F;" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="W"
                            IsEnabled="False"
                            Modifiers="Control,Shift" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarNewWindow"
                    x:Uid="NavigationToolbarNewWindow"
                    Command="{x:Bind ViewModel.OpenNewWindowCommand, Mode=OneWay}"
                    KeyboardAcceleratorTextOverride="Ctrl+N"
                    Label="New window">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE737;" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="N"
                            IsEnabled="False"
                            Modifiers="Control" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarEnterCompactOverlay"
                    x:Uid="NavigationToolbarEnterCompactOverlay"
                    Command="{x:Bind SetCompactOverlayCommand}"
                    CommandParameter="{StaticResource True}"
                    KeyboardAcceleratorTextOverride="Ctrl+Alt+Up"
                    Label="Enter compact overlay"
                    Visibility="{x:Bind IsCompactOverlay, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="Up"
                            IsEnabled="False"
                            Modifiers="Menu,Control" />
                    </AppBarButton.KeyboardAccelerators>
                    <AppBarButton.Icon>
                        <PathIcon
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource EnterCompactOverlay}" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="NavToolbarExitCompactOverlay"
                    x:Uid="NavigationToolbarExitCompactOverlay"
                    Command="{x:Bind SetCompactOverlayCommand}"
                    CommandParameter="{StaticResource False}"
                    KeyboardAcceleratorTextOverride="Ctrl+Alt+Down"
                    Label="Exit compact overlay"
                    Visibility="{x:Bind IsCompactOverlay, Mode=OneWay}">
                    <AppBarButton.Icon>
                        <PathIcon
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource ExitCompactOverlay}" />
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="Down"
                            IsEnabled="False"
                            Modifiers="Menu,Control" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarSeparator x:Name="SeparatorBar" x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}" />
                <AppBarButton
                    x:Name="OpenInTerminalButton"
                    x:Uid="NavigationToolbarOpenInTerminal"
                    x:Load="{x:Bind ViewModel.InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                    Command="{x:Bind ViewModel.OpenDirectoryInDefaultTerminalCommand, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.InstanceViewModel.CanOpenTerminalInPage, Mode=OneWay}"
                    Label="Open in Terminal...">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE756;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Grid>
</UserControl>
