<Page
    x:Class="Files.Views.PropertiesSecurityAdvanced"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:Files.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:perm="using:Files.Filesystem.Permissions"
    d:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:Height="550"
    d:Width="850"
    Background="{ThemeResource SolidBackgroundFillColorBaseBrush}"
    KeyDown="Page_KeyDown"
    Loaded="Properties_Loaded"
    Loading="Page_Loading"
    Unloaded="Properties_Unloaded"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///ResourceDictionaries/PropertiesStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters:BoolToObjectConverter
                x:Key="BoolToMinWidthConverter"
                FalseValue="0"
                TrueValue="200" />
            <converters:BoolToObjectConverter
                x:Key="BoolToWidthConverter"
                FalseValue="0"
                TrueValue="*" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Margin="14,0,0,0"
            VerticalAlignment="Center"
            Text="{x:Bind DialogTitle}" />

        <Grid
            Grid.Row="1"
            Margin="0,7,0,0"
            Padding="14,0,14,14">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid ColumnSpacing="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    x:Uid="SecurityOwnerLabel"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Style="{StaticResource PropertyName}"
                    Text="Owner" />

                <FontIcon
                    x:Name="FontIcon"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                    Glyph="{x:Bind ViewModel.FilePermissions.Owner.Glyph, Mode=OneWay}" />

                <TextBlock
                    x:Name="OwnerText"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Mode=OneWay}">
                    <Run Text="{x:Bind ViewModel.FilePermissions.Owner.DisplayName, Mode=OneWay}" />
                    <Span FontWeight="Light">&#160;(</Span>
                    <Run FontWeight="Light" Text="{x:Bind ViewModel.FilePermissions.Owner.FullNameOrSid, Mode=OneWay}" />
                    <Span FontWeight="Light">)</Span>
                </TextBlock>

                <TextBlock
                    x:Name="UnknownOwnerText"
                    x:Uid="SecurityUnknownOwnerText"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                    Text="Unknown owner" />

                <Button
                    Grid.Column="3"
                    Padding="8,4,8,4"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{x:Bind ViewModel.EditOwnerCommand}">
                    <FontIcon FontSize="16" Glyph="&#xE104;" />
                </Button>
            </Grid>

            <Grid Grid.Row="1" Margin="0,12,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    x:Uid="SecurityAdvancedPermissionsLabel"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Style="{StaticResource PropertyName}"
                    Text="Permissions" />

                <StackPanel
                    Grid.Column="1"
                    Orientation="Horizontal"
                    Spacing="4">
                    <Button
                        Padding="8,4,8,4"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Command="{x:Bind ViewModel.AddAccessRuleCommand}">
                        <FontIcon FontSize="16" Glyph="&#xE109;" />
                    </Button>
                    <Button
                        Padding="8,4,8,4"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Command="{x:Bind ViewModel.RemoveAccessRuleCommand}">
                        <FontIcon FontSize="16" Glyph="&#xE108;" />
                    </Button>
                </StackPanel>
            </Grid>

            <ListView
                x:Name="ListView"
                Grid.Row="2"
                x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Mode=OneWay}"
                Background="{ThemeResource SolidBackgroundAcrylic}"
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="4"
                ItemsSource="{x:Bind ViewModel.FilePermissions.AccessRules, Mode=OneWay}"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollMode="Auto"
                SelectionChanged="ListView_SelectionChanged"
                SelectionMode="Single">
                <i:Interaction.Behaviors>
                    <behaviors:StickyHeaderBehavior />
                </i:Interaction.Behaviors>
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                        <Setter Property="MinHeight" Value="40" />
                        <Setter Property="Height" Value="40" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Header>
                    <Grid
                        Margin="12,0,12,0"
                        Padding="0,8,0,8"
                        Background="{ThemeResource SolidBackgroundAcrylic}"
                        BorderBrush="{ThemeResource SystemChromeHighColor}"
                        BorderThickness="0,0,0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" />
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="*" MinWidth="200" />
                            <ColumnDefinition Width="*" MinWidth="160" />
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="{x:Bind ViewModel.IsFolder, Converter={StaticResource BoolToWidthConverter}, Mode=OneWay}" MinWidth="{x:Bind ViewModel.IsFolder, Converter={StaticResource BoolToMinWidthConverter}, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            x:Uid="SecurityAdvancedTypeLabel"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            FontWeight="SemiBold"
                            Text="Type" />
                        <TextBlock
                            x:Uid="SecurityAdvancedEntityLabel"
                            Grid.Column="2"
                            FontWeight="SemiBold"
                            Text="Entity" />
                        <TextBlock
                            x:Uid="SecurityAdvancedAccessLabel"
                            Grid.Column="3"
                            FontWeight="SemiBold"
                            Text="Access" />
                        <TextBlock
                            x:Uid="SecurityAdvancedInheritedLabel"
                            Grid.Column="4"
                            FontWeight="SemiBold"
                            Text="Inherited" />
                        <TextBlock
                            x:Name="AppliesToLabel"
                            x:Uid="SecurityAdvancedAppliesToLabel"
                            Grid.Column="5"
                            FontWeight="SemiBold"
                            Text="Applies to"
                            Visibility="{x:Bind ViewModel.IsFolder, Mode=OneWay}" />
                    </Grid>
                </ListView.Header>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="perm:FileSystemAccessRuleForUI">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="70" />
                                <ColumnDefinition Width="*" MinWidth="200" />
                                <ColumnDefinition Width="*" MinWidth="160" />
                                <ColumnDefinition Width="70" />
                                <ColumnDefinition Width="{x:Bind IsFolder, Converter={StaticResource BoolToWidthConverter}, Mode=OneWay}" MinWidth="{x:Bind IsFolder, Converter={StaticResource BoolToMinWidthConverter}, Mode=OneWay}" />
                            </Grid.ColumnDefinitions>

                            <FontIcon
                                x:Name="FontIcon"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                Glyph="{x:Bind UserGroup.Glyph}" />

                            <FontIcon
                                x:Name="TypeIcon"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind IsEditEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                Glyph="{x:Bind Glyph, Mode=OneWay}" />

                            <muxc:DropDownButton
                                x:Name="TypeDropdown"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind IsEditEnabled, Mode=OneWay}">
                                <muxc:DropDownButton.Content>
                                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{x:Bind Glyph, Mode=OneWay}" />
                                </muxc:DropDownButton.Content>
                                <muxc:DropDownButton.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAllowLabel"
                                            Command="{x:Bind ChangeAccessControlTypeCommand}"
                                            CommandParameter="Allow"
                                            Text="Allow">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF13E;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem
                                            x:Uid="SecurityDenyLabel"
                                            Command="{x:Bind ChangeAccessControlTypeCommand}"
                                            CommandParameter="Deny"
                                            Text="Deny">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF140;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </muxc:DropDownButton.Flyout>
                            </muxc:DropDownButton>

                            <TextBlock
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                TextTrimming="CharacterEllipsis">
                                <Run Text="{x:Bind UserGroup.DisplayName}" />
                                <Span FontWeight="Light">&#160;(</Span>
                                <Run FontWeight="Light" Text="{x:Bind UserGroup.FullNameOrSid}" />
                                <Span FontWeight="Light">)</Span>
                            </TextBlock>

                            <TextBlock
                                x:Name="RightsTextBox"
                                Grid.Column="3"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind IsEditEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                Text="{x:Bind FileSystemRightsForUI, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis" />

                            <muxc:DropDownButton
                                x:Name="RightsDropdown"
                                Grid.Column="3"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Left"
                                x:Load="{x:Bind IsEditEnabled, Mode=OneWay}">
                                <muxc:DropDownButton.Content>
                                    <TextBlock Text="{x:Bind FileSystemRightsForUI, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
                                </muxc:DropDownButton.Content>
                                <muxc:DropDownButton.Flyout>
                                    <Flyout Placement="Bottom">
                                        <Grid Margin="-8" HorizontalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <GridView
                                                MaxHeight="350"
                                                ItemsSource="{x:Bind GrantedPermissions, Mode=OneWay}"
                                                SelectionMode="None">
                                                <GridView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <ItemsWrapGrid ItemWidth="184" Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </GridView.ItemsPanel>
                                                <GridView.ItemContainerStyle>
                                                    <Style BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
                                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                    </Style>
                                                </GridView.ItemContainerStyle>
                                                <GridView.ItemTemplate>
                                                    <DataTemplate x:DataType="perm:GrantedPermission">
                                                        <CheckBox IsChecked="{x:Bind IsGranted, Mode=TwoWay}" IsEnabled="{x:Bind IsEditable}">
                                                            <TextBlock
                                                                Text="{x:Bind Name}"
                                                                TextTrimming="CharacterEllipsis"
                                                                TextWrapping="NoWrap" />
                                                        </CheckBox>
                                                    </DataTemplate>
                                                </GridView.ItemTemplate>
                                            </GridView>

                                            <ToggleButton
                                                Grid.Row="1"
                                                HorizontalAlignment="Center"
                                                Content="Show advanced permissions"
                                                IsChecked="{x:Bind AreAdvancedPermissionsShown, Mode=TwoWay}" />
                                        </Grid>
                                    </Flyout>
                                </muxc:DropDownButton.Flyout>
                            </muxc:DropDownButton>

                            <TextBlock
                                Grid.Column="4"
                                VerticalAlignment="Center"
                                Text="{x:Bind IsInheritedForUI}" />

                            <TextBlock
                                x:Name="InheritTextBox"
                                Grid.Column="5"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind IsEditEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                Text="{x:Bind InheritanceFlagsForUI, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                Visibility="{x:Bind IsFolder, Mode=OneWay}" />

                            <muxc:DropDownButton
                                x:Name="InheritDropdown"
                                Grid.Column="5"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Left"
                                x:Load="{x:Bind IsEditEnabled, Mode=OneWay}"
                                Visibility="{x:Bind IsFolder, Mode=OneWay}">
                                <muxc:DropDownButton.Content>
                                    <TextBlock Text="{x:Bind InheritanceFlagsForUI, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
                                </muxc:DropDownButton.Content>
                                <muxc:DropDownButton.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedOnlyThisFolder"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="None,None"
                                            Text="Only this folder" />
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedFolderSubfoldersFiles"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="3,None"
                                            Text="This folder, subfolders and files" />
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedFolderSubfolders"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="1,None"
                                            Text="This folder and subfolders" />
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedFolderFiles"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="2,None"
                                            Text="This folder and files" />
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedOnlySubfoldersFiles"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="3,InheritOnly"
                                            Text="Only subfolders and files" />
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedOnlySubfolders"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="1,InheritOnly"
                                            Text="Only subfolders" />
                                        <MenuFlyoutItem
                                            x:Uid="SecurityAdvancedOnlyFiles"
                                            Command="{x:Bind ChangeInheritanceFlagsCommand}"
                                            CommandParameter="2,InheritOnly"
                                            Text="Only files" />
                                    </MenuFlyout>
                                </muxc:DropDownButton.Flyout>
                            </muxc:DropDownButton>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <TextBlock
                x:Name="CannotReadPropsText"
                x:Uid="SecurityAdvancedCannotReadProperties"
                Grid.Row="2"
                HorizontalAlignment="Left"
                x:Load="{x:Bind ViewModel.FilePermissions.CanReadFilePermissions, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                Text="You do not have permissions to view the security properties of this object. You can try to take ownership of this object."
                TextWrapping="WrapWholeWords" />

            <Grid
                Grid.Row="3"
                Margin="0,12,0,0"
                ColumnSpacing="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <muxc:SplitButton
                    x:Name="SplitButton"
                    MaxWidth="200"
                    Command="{x:Bind ViewModel.DisableInheritanceCommand}">
                    <TextBlock Text="{x:Bind ViewModel.DisableInheritanceOption, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
                    <muxc:SplitButton.Flyout>
                        <MenuFlyout Placement="Top">
                            <MenuFlyoutItem
                                x:Uid="SecurityAdvancedInheritedEnable"
                                Command="{x:Bind ViewModel.SetDisableInheritanceOptionCommand}"
                                CommandParameter="False,False"
                                IsEnabled="{x:Bind ViewModel.FilePermissions.AreAccessRulesProtected, Mode=OneWay}"
                                Text="Enable inheritance" />
                            <MenuFlyoutItem
                                x:Uid="SecurityAdvancedInheritedConvert"
                                Command="{x:Bind ViewModel.SetDisableInheritanceOptionCommand}"
                                CommandParameter="True,True"
                                IsEnabled="{x:Bind ViewModel.FilePermissions.AreAccessRulesProtected, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                                Text="Convert inherited permissions into explicit permissions" />
                            <MenuFlyoutItem
                                x:Uid="SecurityAdvancedInheritedRemove"
                                Command="{x:Bind ViewModel.SetDisableInheritanceOptionCommand}"
                                CommandParameter="True,False"
                                IsEnabled="{x:Bind ViewModel.FilePermissions.AreAccessRulesProtected, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                                Text="Remove all inherited permissions" />
                        </MenuFlyout>
                    </muxc:SplitButton.Flyout>
                </muxc:SplitButton>
                <Button
                    x:Name="ReplaceChildPermissionsButton"
                    x:Uid="SecurityAdvancedReplaceChildPermissions2"
                    Grid.Column="1"
                    x:Load="{x:Bind ViewModel.IsFolder, Mode=OneWay}"
                    Command="{x:Bind ViewModel.ReplaceChildPermissionsCommand}"
                    ToolTipService.ToolTip="Replace all child object permissions entries with inheritable permission entries from this object"
                    Visibility="Collapsed">
                    <TextBlock
                        x:Uid="SecurityAdvancedReplaceChildPermissions"
                        Text="Reset child permissions"
                        TextTrimming="CharacterEllipsis" />
                </Button>
            </Grid>
        </Grid>

        <Grid Grid.Row="2" Padding="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button
                x:Name="OKButton"
                x:Uid="PropertiesDialogOKButton"
                Grid.Column="1"
                MinWidth="100"
                Margin="0,0,10,0"
                HorizontalAlignment="Right"
                Click="OKButton_Click"
                Content="OK"
                Style="{StaticResource AccentButtonStyle}" />
            <Button
                x:Name="CancelButton"
                x:Uid="PropertiesDialogCancelButton"
                Grid.Column="2"
                MinWidth="100"
                HorizontalAlignment="Right"
                Click="CancelButton_Click"
                Content="Cancel" />
        </Grid>
    </Grid>
</Page>
