<local:BaseLayout
    x:Class="Files.Views.LayoutModes.DetailsLayoutBrowser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:converters1="using:Files.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Files.Helpers"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:Files"
    xmlns:local2="using:Files.Filesystem"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
    xmlns:tui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:uc="using:Files.UserControls"
    x:Name="PageRoot"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <icore:EventTriggerBehavior EventName="PointerWheelChanged">
            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.PointerWheelChangedCommand}" />
        </icore:EventTriggerBehavior>
        <icore:EventTriggerBehavior EventName="PointerPressed">
            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.ItemPointerPressedCommand}" />
        </icore:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    <local:BaseLayout.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///ResourceDictionaries/DefaultGridSplitterStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters:BoolToVisibilityConverter
                x:Key="NegatedBoolToVisibilityConverter"
                FalseValue="Visible"
                TrueValue="Collapsed" />

            <converters1:BoolToSelectionMode x:Key="BoolToSelectionModeConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

            <Style
                x:Name="HeaderGridSplitterStyle"
                BasedOn="{StaticResource DefaultGridSplitterStyle}"
                TargetType="controls:GridSplitter">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="1" />
                <Setter Property="Opacity" Value="0.8" />
            </Style>
            <Style TargetType="ListView">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="TabNavigation" Value="Once" />
                <Setter Property="IsSwipeEnabled" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True" />
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="ItemContainerTransitions">
                    <Setter.Value>
                        <TransitionCollection>
                            <AddDeleteThemeTransition />
                            <ContentThemeTransition />
                            <ReorderThemeTransition />
                            <EntranceThemeTransition IsStaggeringEnabled="False" />
                        </TransitionCollection>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <ScrollViewer
                                    HorizontalScrollBarVisibility="Auto"
                                    HorizontalScrollMode="Auto"
                                    VerticalScrollBarVisibility="Disabled"
                                    VerticalScrollMode="Disabled">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <ContentPresenter Padding="8,0,8,8" Content="{TemplateBinding Header}" />
                                        <ScrollViewer
                                            x:Name="ScrollViewer"
                                            Grid.Row="1"
                                            AutomationProperties.AccessibilityView="Raw"
                                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                            TabNavigation="{TemplateBinding TabNavigation}"
                                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                            ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                            <ItemsPresenter
                                                Padding="{TemplateBinding Padding}"
                                                Footer="{TemplateBinding Footer}"
                                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                                FooterTransitions="{TemplateBinding FooterTransitions}"
                                                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                                HeaderTransitions="{TemplateBinding HeaderTransitions}" />
                                        </ScrollViewer>
                                    </Grid>
                                </ScrollViewer>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListViewHeaderItem">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />
                <Setter Property="Background" Value="{ThemeResource GridViewHeaderItemBackground}" />
                <Setter Property="Margin" Value="0,0,0,4" />
                <Setter Property="Padding" Value="12,8,12,0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewHeaderItem">
                            <Grid
                                x:Name="HeaderItemRootGrid"
                                Margin="0,0,4,0"
                                HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                PointerCanceled="StackPanel_PointerCanceled"
                                PointerEntered="StackPanel_PointerEntered"
                                PointerExited="StackPanel_PointerCanceled"
                                PointerPressed="RootPanel_PointerPressed"
                                PointerReleased="StackPanel_PointerCanceled">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Grid.Column="0"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}" />
                                <Rectangle
                                    Grid.Column="1"
                                    Height="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Stroke="{ThemeResource GridViewHeaderItemDividerStroke}"
                                    StrokeThickness="0.5" />


                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="PointerOver" />-->
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderItemRootGrid" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <!--<Setter Target="ContentPresenter.(local:AnimatedIcon.State)" Value="Pressed" />-->
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </local:BaseLayout.Resources>

    <Grid
        x:Name="RootGrid"
        Padding="0,0,0,0"
        VerticalAlignment="Stretch"
        ContextFlyout="{x:Bind BaseContextMenuFlyout}"
        SizeChanged="RootGrid_SizeChanged">
        <Grid.KeyboardAccelerators>
            <KeyboardAccelerator Key="{x:Bind PlusKey}" Modifiers="Control">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Invoked">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.GridViewSizeIncreaseCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </KeyboardAccelerator>
            <KeyboardAccelerator Key="Add" Modifiers="Control">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Invoked">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.GridViewSizeIncreaseCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </KeyboardAccelerator>
        </Grid.KeyboardAccelerators>
        <TextBlock
            x:Name="EmptyText"
            x:Uid="EmptyFolder"
            Grid.Row="3"
            Margin="0,125,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            x:Load="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsFolderEmptyTextDisplayed, Mode=OneWay}"
            Canvas.ZIndex="0"
            Text="This folder is empty."
            TextWrapping="Wrap" />

        <muxc:TeachingTip
            x:Name="FileNameTeachingTip"
            x:Uid="FileNameTeachingTip"
            CloseButtonContent="OK"
            PreferredPlacement="Auto"
            Subtitle="The file name must not contain the following characters: \ / : * ? &quot; &lt; &gt; |"
            Visibility="Collapsed" />

        <SemanticZoom ViewChangeStarted="SemanticZoom_ViewChangeStarted" Visibility="{x:Bind FolderSettings.IsLayoutModeChanging, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
            <SemanticZoom.ZoomedInView>
                <ListView
                    x:Name="FileList"
                    Margin="0,4,0,0"
                    Padding="8,0,8,12"
                    HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    tui:ScrollViewerExtensions.EnableMiddleClickScrolling="{x:Bind IsMiddleClickToScrollEnabled, Mode=OneWay}"
                    x:FieldModifier="public"
                    AllowDrop="{x:Bind InstanceViewModel.IsPageTypeSearchResults, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                    CanDragItems="{x:Bind InstanceViewModel.IsPageTypeSearchResults, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                    ContainerContentChanging="FileList_ContainerContentChanging"
                    DoubleTapped="FileList_DoubleTapped"
                    DragItemsStarting="FileList_DragItemsStarting"
                    DragOver="ItemsLayout_DragOver"
                    Drop="ItemsLayout_Drop"
                    IsDoubleTapEnabled="True"
                    IsItemClickEnabled="True"
                    ItemClick="FileList_ItemClick"
                    ItemsSource="{x:Bind CollectionViewSource.View, Mode=OneWay}"
                    PreviewKeyDown="FileList_PreviewKeyDown"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    ScrollViewer.HorizontalScrollMode="Auto"
                    SelectionChanged="FileList_SelectionChanged"
                    SelectionMode="{x:Bind MainViewModel.MultiselectEnabled, Mode=OneWay, Converter={StaticResource BoolToSelectionModeConverter}}"
                    Visibility="{x:Bind FolderSettings.IsLayoutModeChanging, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
                    <ListView.ItemContainerTransitions>
                        <TransitionCollection>
                            <AddDeleteThemeTransition />
                            <!--<ContentThemeTransition />-->
                            <ReorderThemeTransition />
                            <EntranceThemeTransition IsStaggeringEnabled="False" />
                        </TransitionCollection>
                    </ListView.ItemContainerTransitions>
                    <ListView.Header>
                        <Grid
                            x:Name="HeaderGrid"
                            Height="38"
                            Margin="16,0,0,0"
                            Padding="0"
                            Background="{ThemeResource FileBrowserHeaderBackgroundBrush}"
                            BorderBrush="{ThemeResource SystemChromeHighColor}"
                            BorderThickness="0,0,0,1"
                            PointerPressed="Grid_PointerPressed">
                            <Grid.ContextFlyout>
                                <MenuFlyout>
                                    <ToggleMenuFlyoutItem
                                        x:Uid="DetailsViewHeaderFlyout_ShowOriginalPath"
                                        Click="ToggleMenuFlyoutItem_Click"
                                        IsChecked="{x:Bind ColumnsViewModel.OriginalPathColumn.UserCollapsed, Mode=TwoWay, Converter={StaticResource BoolNegationConverter}}"
                                        Text="Original path column"
                                        Visibility="{x:Bind ColumnsViewModel.OriginalPathColumn.IsHidden, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="DetailsViewHeaderFlyout_ShowDateDeleted"
                                        Click="ToggleMenuFlyoutItem_Click"
                                        IsChecked="{x:Bind ColumnsViewModel.DateDeletedColumn.UserCollapsed, Mode=TwoWay, Converter={StaticResource BoolNegationConverter}}"
                                        Text="Date deleted column"
                                        Visibility="{x:Bind ColumnsViewModel.DateDeletedColumn.IsHidden, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="DetailsViewHeaderFlyout_ShowDateModified"
                                        Click="ToggleMenuFlyoutItem_Click"
                                        IsChecked="{x:Bind ColumnsViewModel.DateModifiedColumn.UserCollapsed, Mode=TwoWay, Converter={StaticResource BoolNegationConverter}}"
                                        Text="Date modified column"
                                        Visibility="{x:Bind ColumnsViewModel.DateModifiedColumn.IsHidden, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="DetailsViewHeaderFlyout_ShowDateCreated"
                                        Click="ToggleMenuFlyoutItem_Click"
                                        IsChecked="{x:Bind ColumnsViewModel.DateCreatedColumn.UserCollapsed, Mode=TwoWay, Converter={StaticResource BoolNegationConverter}}"
                                        Text="Date created column"
                                        Visibility="{x:Bind ColumnsViewModel.DateCreatedColumn.IsHidden, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="DetailsViewHeaderFlyout_ShowItemType"
                                        Click="ToggleMenuFlyoutItem_Click"
                                        IsChecked="{x:Bind ColumnsViewModel.ItemTypeColumn.UserCollapsed, Mode=TwoWay, Converter={StaticResource BoolNegationConverter}}"
                                        Text="Item type column"
                                        Visibility="{x:Bind ColumnsViewModel.ItemTypeColumn.IsHidden, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="DetailsViewHeaderFlyout_ShowItemSize"
                                        Click="ToggleMenuFlyoutItem_Click"
                                        IsChecked="{x:Bind ColumnsViewModel.SizeColumn.UserCollapsed, Mode=TwoWay, Converter={StaticResource BoolNegationConverter}}"
                                        Text="Item size column"
                                        Visibility="{x:Bind ColumnsViewModel.SizeColumn.IsHidden, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                                </MenuFlyout>
                            </Grid.ContextFlyout>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    x:Name="Column1"
                                    Width="{x:Bind ColumnsViewModel.IconColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.IconColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column2"
                                    Width="{x:Bind ColumnsViewModel.NameColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.NameColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column3"
                                    Width="{x:Bind ColumnsViewModel.OriginalPathColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.OriginalPathColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column4"
                                    Width="{x:Bind ColumnsViewModel.DateDeletedColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.DateDeletedColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column5"
                                    Width="{x:Bind ColumnsViewModel.StatusColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.StatusColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column6"
                                    Width="{x:Bind ColumnsViewModel.DateModifiedColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.DateModifiedColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column7"
                                    Width="{x:Bind ColumnsViewModel.DateCreatedColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.DateCreatedColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column8"
                                    Width="{x:Bind ColumnsViewModel.ItemTypeColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.ItemTypeColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition
                                    x:Name="Column9"
                                    Width="{x:Bind ColumnsViewModel.SizeColumn.Length, Mode=OneWay}"
                                    MaxWidth="{x:Bind ColumnsViewModel.SizeColumn.MaxLength, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition x:Name="Column10" Width="0" />
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0" />

                            <uc:DataGridHeader
                                x:Name="NameHeader"
                                x:Uid="nameColumn"
                                Grid.Column="2"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="Name"
                                Header="Name" />

                            <controls:GridSplitter
                                Grid.Column="3"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}" />

                            <uc:DataGridHeader
                                x:Name="OriginalPathHeader"
                                x:Uid="originalPathColumn"
                                Grid.Column="4"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="OriginalPath"
                                Header="Original path"
                                Visibility="{x:Bind ColumnsViewModel.OriginalPathColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="5"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.OriginalPathColumn.Visibility, Mode=OneWay}" />

                            <uc:DataGridHeader
                                x:Name="DateDeletedHeader"
                                x:Uid="dateDeletedColumn"
                                Grid.Column="6"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="DateDeleted"
                                Header="Date deleted"
                                Visibility="{x:Bind ColumnsViewModel.DateDeletedColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="7"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.DateDeletedColumn.Visibility, Mode=OneWay}" />

                            <uc:DataGridHeader
                                x:Name="SyncStatusHeader"
                                x:Uid="syncStatusColumn"
                                Grid.Column="8"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="SyncStatus"
                                Header="Status"
                                Visibility="{x:Bind ColumnsViewModel.StatusColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="9"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.StatusColumn.Visibility, Mode=OneWay}" />

                            <uc:DataGridHeader
                                x:Name="DateModifiedHeader"
                                x:Uid="dateColumn"
                                Grid.Column="10"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="DateModified"
                                Header="Date modified"
                                Visibility="{x:Bind ColumnsViewModel.DateModifiedColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="11"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.DateModifiedColumn.Visibility, Mode=OneWay}" />

                            <uc:DataGridHeader
                                x:Name="DateCreatedHeader"
                                x:Uid="dateCreatedColumn"
                                Grid.Column="12"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="DateCreated"
                                Header="Date created"
                                Visibility="{x:Bind ColumnsViewModel.DateCreatedColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="13"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.DateCreatedColumn.Visibility, Mode=OneWay}" />

                            <uc:DataGridHeader
                                x:Name="FileTypeHeader"
                                x:Uid="typeColumn"
                                Grid.Column="14"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="FileType"
                                Header="Type"
                                Visibility="{x:Bind ColumnsViewModel.ItemTypeColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="15"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.ItemTypeColumn.Visibility, Mode=OneWay}" />

                            <uc:DataGridHeader
                                x:Name="ItemSizeHeader"
                                x:Uid="sizeColumn"
                                Grid.Column="16"
                                Command="{x:Bind UpdateSortOptionsCommand, Mode=OneWay}"
                                CommandParameter="Size"
                                Header="Size"
                                Visibility="{x:Bind ColumnsViewModel.SizeColumn.Visibility, Mode=OneWay}" />

                            <controls:GridSplitter
                                Grid.Column="17"
                                ManipulationCompleted="GridSplitter_ManipulationCompleted"
                                ManipulationDelta="GridSplitter_ManipulationDelta"
                                Style="{StaticResource HeaderGridSplitterStyle}"
                                Visibility="{x:Bind ColumnsViewModel.SizeColumn.Visibility, Mode=OneWay}" />
                        </Grid>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="local2:ListedItem">
                            <Grid
                                HorizontalAlignment="Stretch"
                                IsRightTapEnabled="True"
                                Loaded="Grid_Loaded"
                                RightTapped="StackPanel_RightTapped"
                                ToolTipService.ToolTip="{x:Bind ItemName, Mode=OneWay}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.IconColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.NameColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.OriginalPathColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.DateDeletedColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.StatusColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.DateModifiedColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.DateCreatedColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.ItemTypeColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                    <ColumnDefinition Width="{Binding ColumnsViewModel.SizeColumn.Length, ElementName=PageRoot, Mode=OneWay}" />
                                </Grid.ColumnDefinitions>
                                <Grid
                                    x:Uid="FileBrowserThumbnailIconColumnGrid"
                                    Grid.Column="0"
                                    Width="24"
                                    Height="Auto"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    AutomationProperties.Name="File icon"
                                    Opacity="{x:Bind Opacity, Mode=OneWay}"
                                    TabFocusNavigation="Local"
                                    Tag="ItemImage">
                                    <Image
                                        x:Name="Picture"
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        x:Load="{x:Bind LoadFileIcon, Mode=OneWay}"
                                        x:Phase="1"
                                        Source="{x:Bind FileImage, Mode=OneWay}"
                                        Stretch="Uniform" />
                                    <FontIcon
                                        x:Name="FolderGlyphIcon"
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        x:Load="{x:Bind LoadFolderGlyph, Mode=OneWay}"
                                        FontSize="20"
                                        Glyph="&#xF12B;" />
                                    <FontIcon
                                        x:Name="TypeUnknownGlyph"
                                        x:Load="{x:Bind LoadUnknownTypeGlyph, Mode=OneWay}"
                                        x:Phase="1"
                                        Glyph="&#xE7C3;" />
                                    <FontIcon
                                        x:Name="WebShortcutGlyph"
                                        x:Load="{x:Bind LoadWebShortcutGlyph, Mode=OneWay}"
                                        x:Phase="1"
                                        Glyph="&#xE71B;" />
                                    <Image
                                        x:Name="IconOverlay"
                                        Width="16"
                                        Height="16"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        x:Load="True"
                                        x:Phase="1"
                                        Source="{x:Bind IconOverlay, Mode=OneWay}"
                                        Stretch="Uniform" />
                                    <Border
                                        x:Name="ShortcutGlyphElement"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        x:Load="{x:Bind IsShortcutItem}"
                                        x:Phase="1"
                                        Background="{ThemeResource SolidBackgroundFillColorBaseBrush}"
                                        BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}"
                                        BorderThickness="1">
                                        <FontIcon
                                            FontFamily="{StaticResource CustomGlyph}"
                                            FontSize="8"
                                            Glyph="&#xF10A;" />
                                    </Border>
                                </Grid>

                                <Grid
                                    Grid.Column="1"
                                    Width="{Binding ColumnsViewModel.NameColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Tapped="ItemNameGrid_Tapped">
                                    <TextBlock
                                        x:Name="ItemName"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind ItemName, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                    <TextBox
                                        x:Name="ItemNameTextBox"
                                        VerticalAlignment="Center"
                                        TextChanged="ListViewTextBoxItemName_TextChanged"
                                        Visibility="Collapsed" />
                                </Grid>

                                <Grid
                                    x:Name="ItemOriginalPathGrid"
                                    Grid.Column="2"
                                    Width="{Binding ColumnsViewModel.OriginalPathColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    x:Load="{x:Bind IsRecycleBinItem}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind AsRecycleBinItem.ItemOriginalPath, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Grid
                                    x:Name="ItemDateDeletedGrid"
                                    Grid.Column="3"
                                    Width="{Binding ColumnsViewModel.DateDeletedColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    x:Load="{x:Bind IsRecycleBinItem}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind AsRecycleBinItem.ItemDateDeleted, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Grid
                                    x:Name="ItemStatusGrid"
                                    Grid.Column="4"
                                    Width="{Binding ColumnsViewModel.StatusColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding ColumnsViewModel.StatusColumn.Visibility, ElementName=PageRoot, Mode=OneWay}">
                                    <FontIcon
                                        x:Name="CloudDriveSyncStatusGlyph"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        AutomationProperties.Name="{x:Bind SyncStatusString, Mode=OneWay}"
                                        Foreground="{x:Bind SyncStatusUI.Foreground, Mode=OneWay}"
                                        Glyph="{x:Bind SyncStatusUI.Glyph, Mode=OneWay}" />
                                </Grid>

                                <Grid
                                    x:Name="ItemDateModifiedGrid"
                                    Grid.Column="5"
                                    Width="{Binding ColumnsViewModel.DateModifiedColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding ColumnsViewModel.DateModifiedColumn.Visibility, ElementName=PageRoot, Mode=OneWay}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind ItemDateModified, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Grid
                                    x:Name="ItemDateCreatedGrid"
                                    Grid.Column="6"
                                    Width="{Binding ColumnsViewModel.DateCreatedColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding ColumnsViewModel.DateCreatedColumn.Visibility, ElementName=PageRoot, Mode=OneWay}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind ItemDateCreated, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Grid
                                    x:Name="ItemTypeGrid"
                                    Grid.Column="7"
                                    Width="{Binding ColumnsViewModel.ItemTypeColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding ColumnsViewModel.ItemTypeColumn.Visibility, ElementName=PageRoot, Mode=OneWay}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind ItemType, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Grid
                                    x:Name="ItemSizeGrid"
                                    Grid.Column="8"
                                    Width="{Binding ColumnsViewModel.SizeColumn.Length.Value, ElementName=PageRoot, Mode=OneWay}"
                                    Padding="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding ColumnsViewModel.SizeColumn.Visibility, ElementName=PageRoot, Mode=OneWay}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontWeight="Light"
                                        Text="{x:Bind FileSize, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Default">
                                    <SolidColorBrush x:Key="GridViewItemCheckBoxBrush" Color="{ThemeResource SystemChromeMediumLowColor}" />
                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </ListView.Resources>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="helpers:IGroupedCollectionHeader">
                                    <StackPanel
                                        Margin="0,0,0,4"
                                        VerticalAlignment="Top"
                                        AutomationProperties.Name="{x:Bind Model.Text}"
                                        Spacing="0">
                                        <StackPanel Orientation="Horizontal" Spacing="4">
                                            <TextBlock
                                                VerticalAlignment="Center"
                                                FontSize="16"
                                                Style="{StaticResource SubtitleTextBlockStyle}"
                                                Text="{x:Bind Model.Text, Mode=OneWay}" />

                                            <TextBlock
                                                Margin="4,0,0,0"
                                                VerticalAlignment="Center"
                                                Foreground="{StaticResource SystemControlPageTextBaseMediumBrush}"
                                                Style="{StaticResource BodyTextBlockStyle}"
                                                Text="{x:Bind Model.CountText, Mode=OneWay}"
                                                Visibility="{x:Bind Model.ShowCountTextBelow, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />

                                            <TextBlock
                                                VerticalAlignment="Center"
                                                FontSize="14"
                                                Foreground="{StaticResource SystemControlPageTextBaseMediumBrush}"
                                                Style="{StaticResource SubheaderTextBlockStyle}"
                                                Text="{x:Bind Model.Subtext, Mode=OneWay}"
                                                Visibility="{x:Bind Model.ShowCountTextBelow, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        </StackPanel>
                                        <TextBlock
                                            Margin="0,2,0,0"
                                            Foreground="{StaticResource SystemControlPageTextBaseMediumBrush}"
                                            Style="{StaticResource BodyTextBlockStyle}"
                                            Text="{x:Bind Model.CountText, Mode=OneWay}"
                                            Visibility="{x:Bind Model.ShowCountTextBelow, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>

                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="MinHeight" Value="1" />
                            <Setter Property="Height" Value="36" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel AreStickyGroupHeadersEnabled="False" Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.Footer>
                        <StackPanel
                            x:Name="SearchUnindexedItemsPanel"
                            HorizontalAlignment="Stretch"
                            x:Load="{x:Bind InstanceViewModel.ShowSearchUnindexedItemsMessage, Mode=OneWay}"
                            Orientation="Vertical">
                            <TextBlock
                                x:Uid="SearchUnindexedItemsLabel"
                                HorizontalTextAlignment="Center"
                                Text="Didn't find what you're looking for?" />
                            <HyperlinkButton
                                x:Name="SearchUnindexedItemsButton"
                                x:Uid="SearchUnindexedItemsButton"
                                HorizontalAlignment="Center"
                                Command="{x:Bind CommandsViewModel.SearchUnindexedItems}"
                                Content="Search unindexed items." />
                        </StackPanel>
                    </ListView.Footer>
                </ListView>
            </SemanticZoom.ZoomedInView>

            <SemanticZoom.ZoomedOutView>
                <ListView
                    HorizontalAlignment="Stretch"
                    IsItemClickEnabled="True"
                    ItemsSource="{x:Bind CollectionViewSource.View.CollectionGroups, Mode=OneWay}"
                    SelectionMode="None">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="ICollectionViewGroup">
                            <StackPanel
                                Margin="0,4,0,4"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Spacing="4">
                                <Image
                                    Height="36"
                                    Source="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.ImageSource, Mode=OneWay}"
                                    Stretch="Uniform" />
                                <FontIcon FontSize="32" Glyph="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.Icon, Mode=OneWay}" />
                                <StackPanel
                                    VerticalAlignment="Center"
                                    AutomationProperties.Name="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.Text, Mode=OneWay}"
                                    Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" Spacing="4">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontSize="16"
                                            Style="{StaticResource SubtitleTextBlockStyle}"
                                            Text="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.Text, Mode=OneWay}" />

                                        <TextBlock
                                            Margin="4,0,0,0"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource SystemControlPageTextBaseMediumBrush}"
                                            Style="{StaticResource BodyTextBlockStyle}"
                                            Text="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.CountText, Mode=OneWay}"
                                            Visibility="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.ShowCountTextBelow, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />

                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontSize="14"
                                            Foreground="{StaticResource SystemControlPageTextBaseMediumBrush}"
                                            Style="{StaticResource SubheaderTextBlockStyle}"
                                            Text="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.Subtext, Mode=OneWay}"
                                            Visibility="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.ShowCountTextBelow, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </StackPanel>
                                    <TextBlock
                                        Foreground="{StaticResource SystemControlPageTextBaseMediumBrush}"
                                        Style="{StaticResource BodyTextBlockStyle}"
                                        Text="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.CountText, Mode=OneWay}"
                                        Visibility="{x:Bind ((helpers:IGroupedCollectionHeader)Group).Model.ShowCountTextBelow, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Rectangle
                Name="SelectionRectangle"
                Canvas.Left="0"
                Canvas.Top="0"
                Width="0"
                Height="0"
                Fill="{ThemeResource SystemAccentColor}"
                Opacity=".5"
                Stroke="{ThemeResource SystemAccentColorLight1}"
                StrokeThickness="1" />
        </Canvas>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="MultiselectDisabled" />
                <VisualState x:Name="MultiselectEnabled">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind MainViewModel.MultiselectEnabled, Mode=OneWay}" To="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Margin" Value="44,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</local:BaseLayout>
